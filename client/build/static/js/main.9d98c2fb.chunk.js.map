{"version":3,"sources":["assets/userProfile/userProfile.png","assets/userProfile/pet.png","components/admin/AdminCard.jsx","routes/Adminpage.jsx","utils.js","components/careTakerAdmin/BidList.jsx","components/careTakerAdmin/CalendarView.jsx","components/admin/ViewAllCaretakers.jsx","store/models/careTakersModel.js","store/models/petOwnersModel.js","store/models/petsModel.js","store/models/routesModel.js","store/store.js","store/models/userModel.js","store/models/bidModel.js","store/models/adminModel.js","components/userProfile/careTakerProfile/BidModal.jsx","components/careTakerAdmin/BidPanel.jsx","components/PetTypeInput.jsx","components/careTakerAdmin/PetCareList.jsx","components/Availability.jsx","components/careTakerAdmin/CaretakerAvailability.jsx","components/careTakerAdmin/Summary.jsx","components/careTakerAdmin/Salary.jsx","components/careTakerAdmin/TabPanel.jsx","components/userProfile/careTakerProfile/NotCaretakerPage.jsx","routes/CaretakerAdmin.jsx","components/Welcome.jsx","components/WelcomeCards.jsx","routes/Homepage.jsx","components/UpdateUser.jsx","routes/Updatepage.jsx","routes/SetPricepage.jsx","components/userProfile/ProfilePic.jsx","components/userProfile/UserModal.jsx","components/userProfile/UserCard.jsx","components/admin/CaretakersVerticalTabs.jsx","components/admin/SalarySummary.jsx","components/admin/Summary.jsx","routes/ViewCaretakerspage.jsx","components/AddPet.jsx","constants.jsx","components/userProfile/PetList.jsx","components/userProfile/OrderList.jsx","components/userProfile/ProfileTabs.jsx","routes/UserProfile.jsx","components/userProfile/careTakerProfile/ReviewPanel.jsx","routes/CaretakerProfile.jsx","routes/Login.jsx","routes/Signup.jsx","components/Filter.js","routes/FindCaretakers.jsx","components/NavBar.jsx","components/admin/AddAdmin.jsx","App.jsx","index.js"],"names":["module","exports","useStyles","makeStyles","root","maxWidth","media","height","AdminCard","props","route","image","label","description","classes","history","useHistory","Card","onClick","push","className","CardActionArea","CardMedia","title","CardContent","Typography","gutterBottom","variant","component","color","theme","flexGrow","marginTop","marginLeft","padding","spacing","textAlign","palette","text","secondary","paper","display","flexDirection","alignItems","avatar","margin","backgroundColor","main","header","summarycard","Adminpage","Grid","container","item","xs","appendLeadingZeroes","n","convertDate","passedDate","date","Date","getFullYear","getMonth","getDate","sqlToJsDate","split","replace","stringToJsDate","dateString","year","substring","month","day","isValidStringDate","differenceInTwoDates","s_date","e_date","date1","date2","diffTime","Math","abs","ceil","getStartEndOfMonth","intMonth","parseInt","currDate","s_time","e_time","dateStringtoSqlDate","jsDate","pad","num","slice","newDate","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","console","log","width","background","position","overflow","maxHeight","listSection","ul","BidList","subheader","bids","List","map","sectionId","sectionIndex","key","ListSubheader","filter","bid","ListItem","button","pouname","petName","petType","ctuname","petname","pettype","ListItemText","primary","calendar","list","careTakersModel","caretakers","petCareList","petTypeList","availableCaretakers","userReviews","userRating","careTakerRatings","availability","singleCaretakerSalary","singleCaretakerPettypeSummary","singleCaretakerPetownerSummary","mostLucrativeCategories","getMostLucrativeCategories","thunk","actions","payload","a","url","axios","get","data","setMostLucrativeCategories","categories","action","state","getSingleCaretakerPetownerSummary","setSingleCaretakerPetownerSummary","petdays","getSingleCaretakerPettypeSummary","setSingleCaretakerPettypeSummary","getSingleCaretakerSalary","setSingleCaretakerSalary","salary","getCareTakers","setUsers","users","addPartTimeCareTaker","username","name","age","price","post","status","addFullTimeCareTaker","period1_s","period1_e","period2_s","period2_e","then","res","addAvailability","err","getPetCareList","setPetCareList","pets","addPetCareItem","addPetCareList","getPetTypeList","setPetTypeList","pettypes","deletePetType","delete","deleteUserPetType","index","forEach","value","i","splice","getUserAvailability","setUserAvailability","availabilities","addUserAvailability","getAvailableCaretakers","setAvailableCaretakers","deleteUserAvailability","deleteAvailability","avail","getUserReviews","setUserReviews","reviews","getRating","setUserRating","rating","getCareTakerRatings","setCareTakerRatings","getCaretakersForAllPets","petOwnersModel","singlePetOwner","getPetOwner","setPetOwner","user","debug","addPetOwner","ownername","petage","requirements","store","getActions","addAPet","catch","petsModel","allPets","ownerSpecificPets","petCategories","biddablePets","getAllPets","setAllPets","getOwnerPets","setOwnerPets","getOwnerPetsOfType","setBiddablePets","addPet","pet","editPet","put","editAPet","deletePet","deleteAPet","getPetCategories","getAllCategories","addPetCategory","category","base_price","editPetCategory","routesModel","routes","path","sidebarName","setRoutes","storeModel","careTakers","petOwners","singleUser","displayedUser","getUser","response","alert","error","setUser","editUser","firstname","usertype","getDisplayedUser","carername","url_po","url_ct","setDisplayedUser","allUsers","getAllUsers","setAllUsers","userBids","petOwnerBids","addBid","pay_type","pet_pickup","addReviewToBid","review","pay_status","modifyBidReview","getUserBids","setUserBids","getPetOwnerBids","setPetOwnerBids","acceptBid","modifyBidStatus","is_win","makePayment","modifyPayStatus","admin","partTimerSalary","fullTimerSalary","singleAccount","getNewAdminAccount","account","getAccount","setAccount","addAdmin","adminname","getPartTimerSalary","setPartTimerSalary","salaries","getFullTimerSalary","setFullTimerSalary","createStore","persist","mergeStrategy","top","left","transform","border","boxShadow","shadows","buttonRow","formControl","minWidth","paymentTypes","pickupTypes","BidModal","closeModal","submitData","useState","startDate","endDate","addDays","dateRange","setDateRange","minDate","maxDate","addYears","petChoice","setPetChoice","paymentType","setPaymentType","pickupType","setPickupType","disabledDates","setDisabledDates","useStoreState","useStoreActions","useEffect","result","enabledRanges","tempDisabledDates","eachDayOfInterval","start","end","allEnabledDates","enabledRange","daysOfInterval","concat","x","find","y","getTime","findDisabledDates","getState","handleSubmit","startDateInt","endDateInt","id","onChange","selection","showSelectionPreview","moveRangeOnFirstSelection","ranges","direction","FormControl","InputLabel","Select","labelId","event","target","autoWidth","choiceOfPet","MenuItem","Object","entries","choiceOfPaymentKey","choiceOfPaymentValue","choiceOfPickupKey","choiceOfPickupValue","Button","sectionHeader","months","BidPanel","setDate","selectedBid","setSelectedBid","bidList","tileDisabled","activeStartDate","view","dateHasBid","newSelectedBid","bidInfo","isEmpty","toDateString","cost","toFixed","FormLabel","focused","FormControlLabel","control","Switch","checked","updateBidStatus","textfield","marginBottom","PetTypeInput","setPetType","setPrice","parentType","parentPrice","setParentPrice","isFT","retrieveBasePrice","basePrice","petCat","required","fullWidth","htmlFor","native","inputProps","aria-label","type","TextField","autoComplete","autoFocus","disabled","defaultProps","parentCallback","modal","priceText","marginRight","lucrativeCard","PetCareList","userType","open","setOpen","addCareOpen","setCareOpen","petPrice","setPetPrice","bidPetType","setBidPetType","deletePetCareItem","openLucativeModal","setOpenLucrativeModal","closeCareModal","length","lucrative_score","Modal","onClose","careItem","v4","ListItemAvatar","Avatar","ListItemSecondaryAction","IconButton","edge","bidPet","is_fulltimer","Availability","setP1StartDate","setP1EndDate","setP2StartDate","setP2EndDate","align","CaretakerAvailability","setStartDate","setEndDate","p2startDate","p2endDate","addFulltimerAvailability","userAvailability","handleDeleteAvailability","dayDifference","p2dayDifference","validateDates","salaryCard","summaryCard","Summary","getSalary","userSalary","setMonth","handleChangeMonth","getPetdaysSummary","toLocaleDateString","parseFloat","petday","pet_type","count","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","a11yProps","FullWidthTabs","useTheme","React","setValue","AppBar","Tabs","newValue","indicatorColor","textColor","centered","Tab","axis","onChangeIndex","dir","verticalSections","NotCaretakerPage","signUpModal","setSignUpModal","caretakerType","setCaretakerType","p1startDate","p1endDate","onSelectType","onInputPrice","toggleSignUpModal","signUpCaretaker","RadioGroup","Radio","FormHelperText","bullet","fontSize","pos","CaretakerAdmin","useParams","getSingleUser","is_carer","Welcome","card","input","flex","iconButton","divider","searchbar","WelcomeCards","welcomeCardsInfo","available","link","imageLink","welcomeCardInfo","Link","to","style","textDecoration","size","Homepage","Container","UpdateUser","Updatepage","justifyContent","SetPricepage","isAddPetCategory","setIsAddPetCategory","newPetCategory","setNewPetCategory","newPetBasePrice","setNewPetBasePrice","Table","TableHead","TableRow","tableHeader","TableCell","TableBody","defaultValue","profile","ProfilePic","href","src","img","UserModal","userFirstName","setUserFirstName","userAge","setUserAge","is_petowner","multiline","profileTextArea","profileText","UserCard","getUserRating","toggleModal","profileImg","avg","tabs","borderRight","CaretakersVerticalTabs","tabIndex","orientation","caretaker","caretakerRow","SalarySummary","ctType","setCtType","totalSalary","setTotalSalary","caretakerTypes","all","parttime","fulltime","updateTotalSalary","newSalary","ct","updateSalaries","keys","keyName","keyIndex","ViewCaretakerspage","AddPet","parentData","modalType","setPetName","petAge","setPetAge","petRequirements","setPetRequirements","handleButtonClick","sendData","flexWrap","petAvatar","gridList","PetList","petDetails","setPetDetails","setModalType","getUserPets","createPet","openModal","GridList","cols","cellHeight","GridListTile","petReq","petImg","petData","OrderList","reviewModal","setReviewModal","modalBid","setModalBid","setRating","setReview","closeReviewModal","openReviewModal","rows","UserProfile","ReviewPanel","CaretakerProfile","form","submit","Login","setUsername","setPassword","errorMessage","setErrorMessage","checkAccountExists","curr_account","handleClick","is_admin","noValidate","Signup","firstName","setFirstName","setAge","isPetOwner","isPetCaretaker","setPetCaretaker","petInformation","setPetInformation","setError","onChangeCaretakerType","fieldsAreValid","userInDatabase","addUser","handlePageChange","FormGroup","Checkbox","childData","Filter","this","sortValue","sortCareTakers","Component","FindCaretakers","search","setSearch","availModal","setAvailModal","filteredCaretakers","setFilteredCaretakers","setSortValue","petTypes","join","avg_rating","toLowerCase","includes","availCaretakers","availableCTUsernames","handleGetForAllPets","renderRow","Rating","precision","readOnly","InputProps","startAdornment","InputAdornment","sort","b","itemSize","itemCount","createStyles","menuButton","drawer","fullList","withRouter","Routes","isOpen","setIsOpen","toggleDrawer","Toolbar","Drawer","onKeyDown","MenuList","prop","selected","routeName","location","pathname","AddAdmin","setAdminName","e","preventDefault","App","exact","WaitForStateRehydration","isRehydrated","useStoreRehydrated","ReactDOM","render","document","getElementById"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,+LCKrCC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,KAEZC,MAAO,CACLC,OAAQ,OAiCGC,EA7BG,SAACC,GAAW,IAClBC,EAAqCD,EAArCC,MAAOC,EAA8BF,EAA9BE,MAAOC,EAAuBH,EAAvBG,MAAOC,EAAgBJ,EAAhBI,YACvBC,EAAUZ,IACVa,EAAUC,cAKlB,OACF,kBAACC,EAAA,EAAD,CAAMC,QALkB,WACpBH,EAAQI,KAAKT,IAIWU,UAAWN,EAAQV,MACzC,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEF,UAAWN,EAAQR,MACnBK,MAAOA,EACPY,MAAOX,IAET,kBAACY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7ChB,GAEH,kBAACa,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,KACzDf,O,SC9BPX,EAAYC,aAAW,SAAC2B,GAAD,MAAY,CACvC1B,KAAM,CACJ2B,SAAU,EACVC,UAAW,IACXC,WAAY,KAEdL,UAAW,CACTM,QAASJ,EAAMK,QAAQ,GACvBC,UAAW,SACXP,MAAOC,EAAMO,QAAQC,KAAKC,WAE5BC,MAAO,CACHR,UAAWF,EAAMK,QAAQ,GACzBM,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQf,EAAMK,QAAQ,GACtBW,gBAAiBhB,EAAMO,QAAQE,UAAUQ,MAE7CC,OAAQ,CACJH,OAAQf,EAAMK,QAAQ,GACtBC,UAAW,UAEfa,YAAa,CACTjB,UAAWF,EAAMK,QAAQ,QA2ChBe,EAvCG,WAChB,IAAMpC,EAAUZ,IAEhB,OACE,yBAAKkB,UAAWN,EAAQV,MACtB,kBAAC+C,EAAA,EAAD,CAAMC,WAAS,EAACjB,QAAS,GACvB,kBAACgB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,CACE5C,MAAM,yBACNC,MAAO,8FACPC,MAAO,sBACPC,YAAa,6CAEjB,kBAACsC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,CACI5C,MAAO,mBACPC,MAAO,+DACPC,MAAO,iBACPC,YAAa,6CAEnB,kBAACsC,EAAA,EAAD,CAAM/B,UAAWN,EAAQmC,YAAaI,MAAI,EAACC,GAAI,EAAGtB,UAAW,IAC3D,kBAAC,EAAD,CACMtB,MAAO,iBACPC,MAAO,gEACPC,MAAO,sBACPC,YAAa,uCAErB,kBAACsC,EAAA,EAAD,CAAM/B,UAAWN,EAAQmC,YAAaI,MAAI,EAACC,GAAI,EAAGtB,UAAW,IAC3D,kBAAC,EAAD,CACMtB,MAAO,mBACPC,MAAO,uGACPC,MAAO,gBACPC,YAAa,wC,kICnE7B,SAAS0C,EAAoBC,GACzB,OAAGA,GAAK,EACC,IAAMA,EAERA,EAGX,SAASC,EAAYC,GACjB,IAAMC,EAAO,IAAIC,KAAKF,GAEtB,MADqB,GAAKC,EAAKE,cAAgBN,EAAqBI,EAAKG,WAAa,GAAMP,EAAoBI,EAAKI,WAIzH,SAASC,EAAYL,GACDA,EAAKM,MAAM,KAC3B,OAAO,IAAIL,KAAKD,EAAKO,QAAQ,IAAK,MAGtC,SAASC,EAAeC,GACtB,IAAIC,EAAOD,EAAWE,UAAU,EAAE,GAC9BC,EAAQH,EAAWE,UAAU,EAAE,GAC/BE,EAAMJ,EAAWE,UAAU,EAAE,GACjC,OAAO,IAAIV,KAAKS,EAAME,EAAM,EAAGC,GAGjC,SAASC,EAAkBL,GACdA,EAAWE,UAAU,EAAE,GAAlC,IACIC,EAAQH,EAAWE,UAAU,EAAE,GAC/BE,EAAMJ,EAAWE,UAAU,EAAE,GACjC,QAAIC,EAAQ,IAAMA,EAAQ,MAGtBC,EAAM,IAAMA,EAAM,GAKxB,SAASE,EAAqBC,EAAQC,GACpC,IAAMC,EAAQV,EAAeQ,GACvBG,EAAQX,EAAeS,GACvBG,EAAWC,KAAKC,IAAIH,EAAQD,GAElC,OADiBG,KAAKE,KAAKH,EAAQ,OAarC,SAASI,EAAmBZ,GAC1B,IAAMa,EAAWC,SAASd,GACpBe,EAAW,IAAI1B,KAOrB,MAJe,CACb2B,OAHc,IAAI3B,KAAK0B,EAASzB,cAAeuB,EAAU,GAIzDI,OAHY,IAAI5B,KAAK0B,EAASzB,cAAeuB,EAAS,EAAG,IAQ7D,SAASK,EAAoB9B,GAC3B,IAAI+B,EAASvB,EAAeR,GACxBgC,EAAM,SAASC,GAAO,OAAQ,KAAKA,GAAKC,OAAO,IAC/CC,EAAUJ,EAAOK,iBAA0B,IACzCJ,EAAID,EAAOM,cAAgB,GAAK,IAChCL,EAAID,EAAOO,cAAsB,IACjCN,EAAID,EAAOQ,eAAsB,IACjCP,EAAID,EAAOS,iBAAsB,IACjCR,EAAID,EAAOU,iBAEjB,OADAC,QAAQC,IAAIR,GACLA,ECpET,IAAM5F,EAAYC,aAAW,SAAC2B,GAAD,MAAY,CACvC1B,KAAM,CACJmG,MAAO,OACPlG,SAAU,IACVyC,gBAAiBhB,EAAMO,QAAQmE,WAAWhE,MAC1CiE,SAAU,WACVC,SAAU,OACVC,UAAW,KAEbC,YAAa,CACX9D,gBAAiB,WAEnB+D,GAAI,CACF/D,gBAAiB,UACjBZ,QAAS,OAIE,SAAS4E,EAAQrG,GAAQ,IAC5BsG,EAAuCtG,EAAvCsG,UAAWC,EAA4BvG,EAA5BuG,KAAM9F,EAAsBT,EAAtBS,QACnBJ,GAF6B,YACYL,EADZ,gCAEnBP,KAGhB,OACA,kBAAC+G,EAAA,EAAD,CAAM7F,UAAWN,EAAQV,KAAM2G,UAAW,8BACrCA,EAAUG,KAAI,SAACC,EAAWC,GAAZ,OACf,wBAAIC,IAAG,kBAAaF,GAAa/F,UAAWN,EAAQ8F,aAChD,wBAAIxF,UAAWN,EAAQ+F,IACvB,kBAACS,EAAA,EAAD,eAAmBH,IAClBH,EACEO,QAAO,SAACC,GAAD,OAASxD,EAAYwD,EAAIjC,QAAQzB,YAAcsD,GAAgBpD,EAAYwD,EAAIhC,QAAQ1B,YAAcsD,KAC5GG,QAAO,SAACC,GAAD,OAASxD,EAAYwD,EAAIhC,QAAQ3B,gBAAiB,IAAID,MAAOC,iBACpEqD,KAAI,SAACM,GAAD,OACH,kBAACC,EAAA,EAAD,CACEC,QAAM,EACNL,IAAG,eAAUF,EAAV,YAAuBK,EAAIG,QAA3B,YAAsCH,EAAII,QAA1C,YAAqDJ,EAAIK,QAAzD,YAAoEL,EAAIM,QAAxE,YAAmFN,EAAIjC,OAAvF,YAAiGiC,EAAIhC,QACxGtE,QAAS,kBAAMA,EACb,CACEyG,QAASH,EAAIG,QACbI,QAASP,EAAIO,QACbC,QAASR,EAAIQ,QACbF,QAASN,EAAIM,QACbvC,OAAQiC,EAAIjC,OACZC,OAAQgC,EAAIhC,WAIhB,kBAACyC,EAAA,EAAD,CAAcC,QAAO,UAAKV,EAAIO,QAAT,aAAqBP,EAAIQ,QAAzB,iBChDrB7H,YAAW,CACzBgI,SAAU,CACN5B,MAAO,OACPhG,OAAQ,OACR2B,QAAS,kBAEbkG,KAAM,CACF7H,OAAQ,OAPhB,I,0JCIkBJ,YAAW,CAC3BC,KAAM,CACJC,SAAU,KAEZC,MAAO,CACLC,OAAQ,O,iEC4QG8H,GAtRS,CACpBC,WAAY,GACZC,YAAa,GACbC,YAAa,GACbC,oBAAqB,GACrBC,YAAa,GACbC,WAAY,GACZC,iBAAkB,GAClBC,aAAc,GACdC,sBAAuB,GACvBC,8BAA+B,GAC/BC,+BAAgC,GAChCC,wBAAyB,GAEzBC,2BAA4BC,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,4BAAAC,EAAA,+EACMD,GAA/BvB,EADyB,EACzBA,QAASvC,EADgB,EAChBA,OAAQC,EADQ,EACRA,OAClB+D,EAAkB,6BAA+BzB,EAAU,IAAMrE,EAAY8B,GAAU,IAAM9B,EAAY+B,GAAU,aAFzF,SAGXgE,KAAMC,IAAIF,GAHC,gBAGzBG,EAHyB,EAGzBA,KAEPN,EAAQO,2BAA2BD,EAAKA,KAAKE,YALb,2CAAD,yDAQjCD,2BAA4BE,kBAAO,SAACC,EAAOT,GACzCS,EAAMb,wBAA0BI,KAGlCU,kCAAmCZ,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,4BAAAC,EAAA,+EACDD,GAA/BvB,EADgC,EAChCA,QAASvC,EADuB,EACvBA,OAAQC,EADe,EACfA,OAElB+D,EAAkB,6BAA+BzB,EAAU,IAAMrE,EAAY8B,GAAU,IAAM9B,EAAY+B,GAAU,YAHlF,SAIlBgE,KAAMC,IAAIF,GAJQ,gBAIhCG,EAJgC,EAIhCA,KAEPN,EAAQY,kCAAkCN,EAAKA,KAAKO,SANb,2CAAD,yDASxCD,kCAAmCH,kBAAO,SAACC,EAAOT,GAChDS,EAAMd,+BAAiCK,KAGzCa,iCAAkCf,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,4BAAAC,EAAA,+EACAD,GAA/BvB,EAD+B,EAC/BA,QAASvC,EADsB,EACtBA,OAAQC,EADc,EACdA,OAElB+D,EAAkB,6BAA+BzB,EAAU,IAAMrE,EAAY8B,GAAU,IAAM9B,EAAY+B,GAAU,WAHnF,SAIjBgE,KAAMC,IAAIF,GAJO,gBAI/BG,EAJ+B,EAI/BA,KAEPN,EAAQe,iCAAiCT,EAAKA,KAAKO,SANb,2CAAD,yDASvCE,iCAAkCN,kBAAO,SAACC,EAAOT,GAC/CS,EAAMf,8BAAgCM,KAGxCe,yBAA0BjB,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,4BAAAC,EAAA,+EACUD,GAAhCvB,EADsB,EACtBA,QAASvC,EADa,EACbA,OAAQC,EADK,EACLA,OAEnB+D,EAAkB,wBAA0BzB,EAAU,IAAMrE,EAAY8B,GAAU,IAAM9B,EAAY+B,GAH5E,SAKTgE,KAAMC,IAAIF,GALD,gBAKvBG,EALuB,EAKvBA,KAEPN,EAAQiB,yBAAyBX,EAAKA,MAPR,2CAAD,yDAU/BW,yBAA0BR,kBAAO,SAACC,EAAOT,GAChB,OAAnBA,EAAQiB,SACRR,EAAMhB,sBAAwBO,EAAQiB,WAI5CC,cAAepB,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,kBAAAC,EAAA,sEACEE,KAAMC,IAAgB,qBADxB,gBACZC,EADY,EACZA,KACPN,EAAQoB,SAASd,EAAKA,KAAKe,OAFR,2CAAD,yDAKpBD,SAAUX,kBAAO,SAACC,EAAOT,GACvBS,EAAMxB,WAAN,aAAuBe,MAEzBqB,qBAAsBvB,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,8BAAAC,EAAA,+EACwBD,GAA3CsB,EADmB,EACnBA,SAAUC,EADS,EACTA,KAAMC,EADG,EACHA,IAAK7C,EADF,EACEA,QAAS8C,EADX,EACWA,MACb,oBAFE,SAGLtB,KAAMuB,KADH,oBACa,CACjCJ,SAAUA,EACVC,KAAMA,EACNC,IAAKA,EACL7C,QAASA,EACT8C,MAAOA,IARe,uBAGnBpB,EAHmB,EAGnBA,KAHmB,kBAWnBA,EAAKsB,QAXc,2CAAD,yDAc3BC,qBAAsB9B,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,kCAAAC,EAAA,+EACoED,GAAvFsB,EADmB,EACnBA,SAAUC,EADS,EACTA,KAAMC,EADG,EACHA,IAAK7C,EADF,EACEA,QAAS8C,EADX,EACWA,MAAOI,EADlB,EACkBA,UAAWC,EAD7B,EAC6BA,UAAWC,EADxC,EACwCA,UAAWC,EADnD,EACmDA,UACrD,oBACxBhF,QAAQC,IAAI,CACVqE,SAAUA,EACVC,KAAMA,EACNC,IAAKA,EACL7C,QAASA,EACT8C,MAAOA,EACPI,UAAWA,EACXC,UAAWA,EACXC,UAAWA,EACXC,UAAWA,IAZa,SAcP7B,KAAMuB,KAZD,oBAYW,CAC/BJ,SAAUA,EACVC,KAAMA,EACNC,IAAKA,EACL7C,QAASA,EACT8C,MAAOA,EACPI,UAAWA,EACXC,UAAWA,EACXC,UAAWA,EACXC,UAAWA,IACZC,MAAK,SAACC,GACLnC,EAAQoC,gBAAgB,CACtB1D,QAAS6C,EACTpF,OAAQE,EAAoByF,GAC5B1F,OAAQC,EAAoB0F,KAE9B/B,EAAQoC,gBAAgB,CACtB1D,QAAS6C,EACTpF,OAAQE,EAAoB2F,GAC5B5F,OAAQC,EAAoB4F,QAE/BC,MAAK,SAACG,GACPpF,QAAQC,IAAImF,MApCY,yDAAD,yDAuC3BC,eAAgBvC,gBAAK,yCAAC,WAAMC,EAASC,GAAf,oBAAAC,EAAA,6DAEdC,EAAkB,sBADPF,EADG,SAGCG,KAAMC,IAAIF,GAHX,gBAGbG,EAHa,EAGbA,KACPN,EAAQuC,eAAejC,EAAKA,KAAKkC,MAJb,2CAAD,yDAMrBD,eAAgB9B,kBAAO,SAACC,EAAOT,GAC7BS,EAAMvB,YAAN,aAAwBc,MAE1BwC,eAAgB1C,gBAAK,yCAAC,WAAMC,EAASC,GAAf,0BAAAC,EAAA,6DACbqB,EAA4BtB,EAA5BsB,SAAU3C,EAAkBqB,EAAlBrB,QAAS8C,EAASzB,EAATyB,MACpBvB,EAAkB,sBAAwBoB,EAF5B,SAGCnB,KAAMuB,KAAKxB,EAAK,CACjCvB,QAASA,EACT8C,MAAOA,IALS,gBAGbpB,EAHa,EAGbA,KAIPN,EAAQ0C,eAAepC,EAAKA,KAAKkC,MAPb,2CAAD,yDASrBE,eAAgBjC,kBAAO,SAACC,EAAOT,GAC7BS,EAAMvB,YAAYpH,KAAKkI,MAGzB0C,eAAgB5C,gBAAK,yCAAC,WAAMC,EAASC,GAAf,kBAAAC,EAAA,4DACI,kBADJ,SAECE,KAAMC,IADH,mBADJ,gBAEbC,EAFa,EAEbA,KACPrD,QAAQC,IAAIoD,GACZN,EAAQ4C,eAAetC,EAAKA,KAAKuC,UAJb,2CAAD,yDAMrBD,eAAgBnC,kBAAO,SAACC,EAAOT,GAC7BS,EAAMtB,YAAN,aAAwBa,MAG1B6C,cAAe/C,gBAAK,yCAAC,WAAMC,EAASC,GAAf,sBAAAC,EAAA,6DACZqB,EAAsBtB,EAAtBsB,SAAU3C,EAAYqB,EAAZrB,QACXuB,EAAkB,sBAAwBoB,EAAW,IAAM3C,EAF9C,SAGEwB,KAAM2C,OAAO5C,GAHf,kBAGZG,KACPN,EAAQgD,kBAAkB/C,EAAQrB,SAJf,2CAAD,yDAMpBoE,kBAAmBvC,kBAAO,SAACC,EAAOT,GAC9B,IAAIgD,EAAQ,KACZvC,EAAMvB,YAAY+D,SAAQ,SAASC,EAAOC,GACxCnG,QAAQC,IAAIiG,EAAMvE,SACZuE,EAAMvE,UAAYqB,IAElBgD,EAAQG,MAGhB1C,EAAMvB,YAAYkE,OAAOJ,EAAO,MAIpCK,oBAAqBvD,gBAAK,yCAAC,WAAMC,EAASC,GAAf,0BAAAC,EAAA,6DACjBxB,EAA4BuB,EAA5BvB,QAASvC,EAAmB8D,EAAnB9D,OAAQC,EAAW6D,EAAX7D,OACnB+D,EAAkB,wBAA0BzB,EAAU,IAAMrE,EAAY8B,GAAU,IAAM9B,EAAY+B,GAC1Ga,QAAQC,IAAIiD,GAHa,SAKFC,KAAMC,IAAIF,GALR,gBAKjBG,EALiB,EAKjBA,KAERN,EAAQuD,oBAAoBjD,EAAKA,KAAKkD,gBAPb,2CAAD,yDAS1BD,oBAAqB9C,kBAAO,SAACC,EAAOT,GAClCS,EAAMjB,aAAN,aAAyBQ,MAG3BwD,oBAAqB1D,gBAAK,yCAAC,WAAMC,EAASC,GAAf,0BAAAC,EAAA,6DACjBxB,EAA4BuB,EAA5BvB,QAASvC,EAAmB8D,EAAnB9D,OAAQC,EAAW6D,EAAX7D,OACnB+D,EAAkB,wBAA0BzB,EAClDzB,QAAQC,IAAIiD,GAHa,SAKFC,KAAMuB,KAAKxB,EAAK,CACrChE,OAAQA,EACRC,OAAQA,IAPe,gBAKjBkE,EALiB,EAKjBA,KAKRN,EAAQoC,gBAAgB9B,EAAKA,KAAKb,cAVT,2CAAD,yDAY1B2C,gBAAiB3B,kBAAO,SAACC,EAAOT,GAC9BS,EAAMjB,aAAa1H,KAAKkI,MAE1ByD,uBAAwB3D,gBAAK,yCAAC,WAAMC,EAASC,GAAf,wBAAAC,EAAA,6DAC5BjD,QAAQC,IAAI+C,GACL9D,EAAkB8D,EAAlB9D,OAAQC,EAAU6D,EAAV7D,OACT+D,EAAkB,wBAA0B9F,EAAY8B,GAAU,IAAM9B,EAAY+B,GAH9D,SAIPgE,KAAMC,IAAIF,GAJH,gBAIrBG,EAJqB,EAIrBA,KACPN,EAAQ2D,uBAAuBrD,EAAKA,KAAKkD,gBALb,2CAAD,yDAO3BG,uBAAwBlD,kBAAO,SAACC,EAAOT,GACrCS,EAAMrB,oBAAsBY,KAEhC2D,uBAAwB7D,gBAAK,yCAAC,WAAMC,EAASC,GAAf,0BAAAC,EAAA,6DACpBxB,EAA4BuB,EAA5BvB,QAASvC,EAAmB8D,EAAnB9D,OAAQC,EAAW6D,EAAX7D,OACnB+D,EAAkB,wBAA0BzB,EAAU,IAAMrE,EAAYO,EAAYuB,IAAW,IAAM9B,EAAYO,EAAYwB,IACnIa,QAAQC,IAAIiD,GACZlD,QAAQC,IAAI,CACVf,OAAQ9B,EAAYO,EAAYuB,IAChCC,OAAQ/B,EAAYO,EAAYwB,MANN,SAQLgE,KAAM2C,OAAO5C,GARR,gBAQpBG,EARoB,EAQpBA,KACRrD,QAAQC,IAAIoD,GACZN,EAAQ6D,mBAAmB5D,GAVC,4CAAD,yDAY7B4D,mBAAoBpD,kBAAO,SAACC,EAAOT,GACjC,IAAIgD,EAAQ,KACZvC,EAAMjB,aAAayD,SAAQ,SAASY,EAAOV,GACrCnD,EAAQ9D,SAAW2H,EAAM3H,QACzB8D,EAAQ7D,SAAW0H,EAAM1H,SACvB6G,EAAQG,MAGhB1C,EAAMjB,aAAa4D,OAAOJ,EAAO,MAEnCc,eAAgBhE,gBAAK,yCAAC,WAAMC,EAASC,GAAf,oBAAAC,EAAA,6DAEZC,EAAkB,kBADRF,EADE,SAGKG,KAAMC,IAAIF,GAHf,gBAGVG,EAHU,EAGVA,KACRN,EAAQgE,eAAe1D,EAAKA,KAAK2D,SAJf,2CAAD,yDAMrBD,eAAgBvD,kBAAO,SAACC,EAAOT,GAC7BS,EAAMpB,YAAN,aAAwBW,MAE1BiE,UAAWnE,gBAAK,yCAAC,WAAMC,EAASC,GAAf,oBAAAC,EAAA,6DAEPC,EAAkB,kBADRF,EADH,SAGUG,KAAMC,IAAIF,GAHpB,gBAGLG,EAHK,EAGLA,KACRN,EAAQmE,cAAc7D,EAAKA,KAAK8D,QAJnB,2CAAD,yDAMhBD,cAAe1D,kBAAO,SAACC,EAAOT,GAC5BS,EAAMnB,WAAaU,KAGrBoE,oBAAqBtE,gBAAK,yCAAC,WAAMC,EAASC,GAAf,kBAAAC,EAAA,4DACD,iBADC,SAEJE,KAAMC,IADH,kBADC,gBAElBC,EAFkB,EAElBA,KACPN,EAAQsE,oBAAoBhE,EAAKA,KAAK8D,QAHb,2CAAD,yDAK1BE,oBAAqB7D,kBAAO,SAACC,EAAOT,GAClCS,EAAMlB,iBAAmBS,KAE3BsE,wBAAyBxE,gBAAK,yCAAC,WAAMC,EAASC,GAAf,0BAAAC,EAAA,6DACrBqB,EAA6BtB,EAA7BsB,SAAUpF,EAAmB8D,EAAnB9D,OAAQC,EAAW6D,EAAX7D,OACpB+D,EAAkB,oBAAsBoB,EAAW,WAAalH,EAAY8B,GAAU,IAAM9B,EAAY+B,GAFjF,SAGNgE,KAAMC,IAAIF,GAHJ,gBAGrBG,EAHqB,EAGrBA,KACRN,EAAQ2D,uBAAuBrD,EAAKA,KAAKpB,YAJZ,2CAAD,0DCjOnBsF,GA3CQ,CACnBC,eAAgB,KAChBC,YAAa3E,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,oBAAAC,EAAA,6DAETC,EAAkB,oBADPF,EADF,SAGMG,KAAMC,IAAIF,GAHhB,uBAGRG,EAHQ,EAGRA,KACPN,EAAQ2E,YAAYrE,EAAKA,MAJV,kBAKRA,EAAKsB,QALG,2CAAD,yDAOhB+C,YAAalE,kBAAO,SAACC,EAAOT,GAC1BhD,QAAQC,IAAI+C,GACS,OAAjBA,EAAQ2E,OACRlE,EAAM+D,eAAiBxE,EAAQ2E,MAEnC3H,QAAQC,IAAI2H,gBAAMnE,OAItBoE,YAAa/E,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,8BAAAC,EAAA,+EACgED,GAAxEsB,EADQ,EACRA,SAAUwD,EADF,EACEA,UAAWtD,EADb,EACaA,IAAK7C,EADlB,EACkBA,QAASD,EAD3B,EAC2BA,QAASqG,EADpC,EACoCA,OAAQC,EAD5C,EAC4CA,aAD5C,SAEI7E,KAAMuB,KAAiB,mBAAoB,CAC1DJ,SAAUA,EACVwD,UAAWA,EACXtD,IAAKA,EACL7C,QAASA,EACTD,QAASA,EACTqG,OAAQA,EACRC,aAAcA,IACf/C,MAAK,SAACC,GACP+C,GAAMC,aAAa3C,KAAK4C,QAAQ,CAC9B7G,QAASwG,EACTnG,QAASA,EACTD,QAASA,EACTqG,OAAQA,EACRC,aAAcA,OAEfI,OAAM,SAAChD,GACRpF,QAAQC,IAAImF,MAnBC,yDAAD,0DCuGPiD,GA1HG,CAChBC,QAAS,GACTC,kBAAmB,GACnBC,cAAe,GACfC,aAAc,GAEdC,WAAY5F,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,kBAAAC,EAAA,sEACOE,KAAMC,IAAgB,eAD7B,gBACPC,EADO,EACPA,KACPN,EAAQ4F,WAAWtF,EAAKA,KAAKkC,MAFf,2CAAD,yDAIjBoD,WAAYnF,kBAAO,SAACC,EAAOT,GACzBS,EAAM6E,QAAN,aAAoBtF,MAGtB4F,aAAc9F,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,oBAAAC,EAAA,6DAEVC,EAAkB,eADPF,EADD,SAGKG,KAAMC,IAAIF,GAHf,gBAGTG,EAHS,EAGTA,KACPN,EAAQ8F,aAAaxF,EAAKA,KAAKkC,MAJf,2CAAD,yDAMnBsD,aAAcrF,kBAAO,SAACC,EAAOT,GAC3BS,EAAM8E,kBAAN,aAA8BvF,MAGhC8F,mBAAoBhG,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,wBAAAC,EAAA,6DAChBqB,EAAsBtB,EAAtBsB,SAAU3C,EAAYqB,EAAZrB,QACZuB,EAAkB,eAAiBoB,EAAW,IAAM3C,EAC1D3B,QAAQC,IAAIiD,GAHY,SAIHC,KAAMC,IAAIF,GAJP,gBAIjBG,EAJiB,EAIjBA,KACPN,EAAQgG,gBAAgB1F,EAAKA,KAAKkC,MALV,2CAAD,yDAOzBwD,gBAAiBvF,kBAAO,SAACC,EAAOT,GAC9BS,EAAMgF,aAAN,aAAyBzF,MAG3BgG,OAAQlG,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,0BAAAC,EAAA,+EACqDD,GAAxDsB,EADG,EACHA,SAAU5C,EADP,EACOA,QAASC,EADhB,EACgBA,QAASoG,EADzB,EACyBA,OAAQC,EADjC,EACiCA,aADjC,SAES7E,KAAMuB,KAAiB,cAAe,CACvDJ,SAAUA,EACV5C,QAASA,EACTC,QAASA,EACToG,OAAQA,EACRC,aAAcA,IACb/C,MAAK,SAACC,GACPnC,EAAQoF,QAAQjD,EAAI7B,KAAKA,KAAK4F,QAC7Bb,OAAM,SAAChD,GACRpF,QAAQC,IAAImF,MAXJ,yDAAD,yDAcX+C,QAAS3E,kBAAO,SAACC,EAAOT,GACtBS,EAAM8E,kBAAkBzN,KAAKkI,MAGjCkG,QAASpG,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,4BAAAC,EAAA,+EACiDD,GAAxDsB,EADO,EACPA,SAAU5C,EADH,EACGA,QAASC,EADZ,EACYA,QAASoG,EADrB,EACqBA,OAAQC,EAD7B,EAC6BA,aACpC9E,EAAkB,eAAiBoB,EAAW,IAAM5C,EAF7C,SAGMyB,KAAMgG,IAAIjG,EAAK,CAChCvB,QAASA,EACToG,OAAQA,EACRC,aAAcA,IACb/C,MAAK,SAACC,GACPnC,EAAQqG,SAASlE,EAAI7B,KAAKA,KAAK4F,QAC9Bb,OAAM,SAAChD,GACRpF,QAAQC,IAAImF,MAVD,yDAAD,yDAadgE,SAAU5F,kBAAO,SAACC,EAAOT,GACvBS,EAAM8E,kBAAkB1H,KAAI,SAACoI,GACvBA,EAAIvH,SAAWsB,EAAQtB,UACzBuH,EAAItH,QAAUqB,EAAQrB,QACtBsH,EAAIlB,OAAS/E,EAAQ+E,OACrBkB,EAAIjB,aAAehF,EAAQgF,oBAKjCqB,UAAWvG,gBAAK,yCAAC,WAAOC,EAAQC,GAAf,sBAAAC,EAAA,+EACmBD,GAA1BsB,EADO,EACPA,SAAU5C,EADH,EACGA,QACZwB,EAAkB,eAAiBoB,EAAW,IAAM5C,EAC1D1B,QAAQC,IAAIiD,GAHG,SAIIC,KAAM2C,OAAO5C,GAC7B+B,MAAK,SAACC,GACLnC,EAAQuG,WAAW5H,MAClB0G,OAAM,SAAChD,GACRpF,QAAQC,IAAImF,MARD,yDAAD,yDAWhBkE,WAAY9F,kBAAO,SAACC,EAAOT,GACzBS,EAAM8E,kBAAkBtC,SAAQ,SAASgD,EAAKjD,GACzCiD,EAAIvH,SAAWsB,GAChBS,EAAM8E,kBAAkBnC,OAAOJ,EAAO,SAK5CuD,iBAAkBzG,gBAAK,yCAAC,WAAOC,EAAQC,GAAf,kBAAAC,EAAA,4DACE,qBADF,SAEDE,KAAMC,IADH,sBADF,gBAEfC,EAFe,EAEfA,KACPN,EAAQyG,iBAAiBnG,EAAKA,KAAKkC,MAHb,2CAAD,yDAKvBiE,iBAAkBhG,kBAAO,SAACC,EAAOT,GAC/BS,EAAM+E,cAAN,aAA0BxF,MAG5ByG,eAAgB3G,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,sBAAAC,EAAA,+EACiBD,GAA7B0G,EADY,EACZA,SAAUC,EADE,EACFA,WACM,yBAFJ,SAGCxG,KAAMuB,KADH,yBACa,CACnCgF,SAAUA,EACVC,WAAYA,IALM,kBAGbtG,KAHa,2CAAD,yDAQrBuG,gBAAiB9G,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,wBAAAC,EAAA,+EACgBD,GAA7B0G,EADa,EACbA,SAAUC,EADG,EACHA,WACZzG,EAAkB,0BAA4BwG,EAF/B,SAGAvG,KAAMgG,IAAIjG,EAAK,CAClCwG,SAAUA,EACVC,WAAYA,IALO,kBAGdtG,KAHc,2CAAD,0DClGTwG,GAhBK,CAClBC,OAAQ,CACN,CACIC,KAAM,IACNC,YAAa,SAEjB,CACID,KAAM,UACNC,YAAa,WAGnBC,UAAWzG,kBAAO,SAACC,EAAOT,GACxBS,EAAMqG,OAAS9G,MCJbkH,GAAa,CACjBC,WAAYnI,GACZoI,UAAW7C,GACXhC,KAAM8C,GACNV,KCVgB,CACd0C,WAAY,GACZC,cAAe,GAEfC,QAASzH,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,kBAAAC,EAAA,6DAELC,EAAkB,iBADPF,EADN,SAGQG,KAAMC,IAAIF,GAAK+B,MAAK,SAAAuF,GAErC,GAA6B,YAAzBA,EAASnH,KAAKsB,OAChB,OAAO6F,EAASnH,KAAKA,KAAKsE,KAE1B8C,MAAM,+CAEPrC,OAAM,SAACsC,GACRD,MAAM,0CAXG,OAGLpH,EAHK,OAcXrD,QAAQC,IAAIoD,GACZN,EAAQ4H,QAAQtH,GAfL,2CAAD,yDAiBZsH,QAASnH,kBAAO,SAACC,EAAOT,GAEN,OAAZA,IACAS,EAAM4G,WAAarH,MAI3B4H,SAAU9H,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,kCAAAC,EAAA,2EACmCD,GAA1CsB,EADO,EACPA,SAAUuG,EADH,EACGA,UAAWrG,EADd,EACcA,IAAKsG,EADnB,EACmBA,SACjC9K,QAAQC,IAAR,gBAAgB+C,IACZE,EAAM,GACO,aAAb4H,EAJU,wBAKZ5H,EAAkB,oBAAsBoB,EAL5B,SAMSnB,KAAMgG,IAAIjG,EAAK,CAClCoB,SAAUA,EACVwD,UAAW+C,EACXrG,IAAKA,IATK,kBAMLnB,KAMPN,EAAQwH,QAAQjG,GAChBvB,EAAQgI,iBAAiBzG,GAbb,2BAcU,cAAbwG,EAdG,wBAeZ5H,EAAkB,qBAAuBoB,EAf7B,UAgBSnB,KAAMgG,IAAIjG,EAAK,CAClCoB,SAAUA,EACV0G,UAAWH,EACXrG,IAAKA,IAnBK,mBAgBLnB,KAKPN,EAAQwH,QAAQjG,GAChBvB,EAAQgI,iBAAiBzG,GAtBb,+BAwBN2G,EAAqB,oBAAsB3G,EAC3C4G,EAAqB,qBAAuB5G,EAzBtC,UA0BNnB,KAAMgG,IAAI8B,EAAQ,CACtB3G,SAAUA,EACVwD,UAAW+C,EACXrG,IAAKA,IA7BK,yBA+BNrB,KAAMgG,IAAI+B,EAAQ,CACtB5G,SAAUA,EACV0G,UAAWH,EACXrG,IAAKA,IAlCK,QAqCZzB,EAAQwH,QAAQjG,GAChBvB,EAAQgI,iBAAiBzG,GAtCb,4CAAD,yDA0CfyG,iBAAkBjI,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,oBAAAC,EAAA,6DAEhBC,EAAkB,iBADPF,EADK,SAGDG,KAAMC,IAAIF,GAHT,gBAGfG,EAHe,EAGfA,KACPN,EAAQoI,iBAAiB9H,EAAKA,MAJR,2CAAD,yDAMrB8H,iBAAkB3H,kBAAO,SAACC,EAAOT,GACV,OAAjBA,EAAQ2E,OACRlE,EAAM6G,cAAgBtH,EAAQ2E,SAKtCyD,SAAU,GACVC,YAAavI,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,kBAAAC,EAAA,4DACO,gBADP,SAEIE,KAAMC,IADH,iBADP,gBAEVC,EAFU,EAEVA,KACPN,EAAQuI,YAAYjI,EAAKA,MAHR,2CAAD,yDAKlBiI,YAAa9H,kBAAO,SAACC,EAAOT,GACL,OAAlBA,EAAQoB,QACTX,EAAM2H,SAAWpI,EAAQoB,WDhF/B0F,OAAQD,GACRlJ,KEVe,CACb4K,SAAU,GACVC,aAAc,GAEdC,OAAQ3I,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,gCAAAC,EAAA,+EAC2ED,GAAhF1B,EADK,EACLA,QAASI,EADJ,EACIA,QAASC,EADb,EACaA,QAASF,EADtB,EACsBA,QAASvC,EAD/B,EAC+BA,OAAQC,EADvC,EACuCA,OAAQuM,EAD/C,EAC+CA,SAAUC,EADzD,EACyDA,WAC7C,cAFZ,SAGOxI,KAAMuB,KADD,cACW,CACjCpD,QAASA,EACTI,QAASA,EACTC,QAASA,EACTF,QAASA,EACTvC,OAAQA,EACRC,OAAQA,EACRuM,SAAUA,EACVC,WAAYA,IACX1G,MAAK,SAACC,GACPlF,QAAQC,IAAIiF,GACZuF,MAAM,qBACLrC,OAAM,SAAChD,GACRqF,MAAM,oBACNzK,QAAQC,IAAImF,MAjBF,yDAAD,yDAqBbwG,eAAgB9I,gBAAK,yCAAC,WAAMC,EAASC,GAAf,wBAAAC,EAAA,+EACiBD,GAA7B7B,EADY,EACZA,IAAKgG,EADO,EACPA,OAAQ0E,EADD,EACCA,OACG,cAFJ,SAGG1I,KAAMgG,IADL,cACc,CACpC7H,QAASH,EAAIG,QACbI,QAASP,EAAIO,QACbC,QAASR,EAAIQ,QACbF,QAASN,EAAIM,QACbvC,OAAQ9B,EAAYO,EAAYwD,EAAIjC,SACpCC,OAAQ/B,EAAYO,EAAYwD,EAAIhC,SACpCuM,SAAUvK,EAAIuK,SACdC,WAAYxK,EAAIwK,WAChBxE,OAAQA,EACR0E,OAAQA,EACRC,WAAY3K,EAAI2K,aAdE,kBAGZzI,KAaRN,EAAQgJ,gBAAgB/I,GAhBJ,2CAAD,yDAkBrB+I,gBAAiBvI,kBAAO,SAACC,EAAOT,GAC9BS,EAAM+H,aAAa3K,KAAI,SAACM,GAClBA,EAAIG,SAAW0B,EAAQ7B,IAAIG,SAC3BH,EAAIO,SAAWsB,EAAQ7B,IAAIO,SAC3BP,EAAIQ,SAAWqB,EAAQ7B,IAAIQ,SAC3BR,EAAIM,SAAWuB,EAAQ7B,IAAIM,SAC3BN,EAAIjC,QAAU8D,EAAQ7B,IAAIjC,QAC1BiC,EAAIhC,QAAU6D,EAAQ7B,IAAIhC,SACxBgC,EAAIgG,OAASnE,EAAQmE,OACrBhG,EAAI0K,OAAS7I,EAAQ6I,cAM/BG,YAAalJ,gBAAK,yCAAC,WAAMC,EAASC,GAAf,oBAAAC,EAAA,6DAETC,EAAkB,eADRF,EACmC,MACnDhD,QAAQC,IAAIiD,GAHG,SAIMC,KAAMC,IAAIF,GAJhB,gBAIRG,EAJQ,EAIRA,KACPN,EAAQkJ,YAAY5I,EAAKA,KAAK1C,MALf,2CAAD,yDAOlBsL,YAAazI,kBAAO,SAACC,EAAOT,GACxBS,EAAM8H,SAAN,aAAqBvI,MAGzBkJ,gBAAiBpJ,gBAAK,yCAAC,WAAMC,EAASC,GAAf,oBAAAC,EAAA,6DAEfC,EAAkB,eADRF,EACmC,MACnDhD,QAAQC,IAAIiD,GAHS,SAIAC,KAAMC,IAAIF,GAJV,gBAIdG,EAJc,EAIdA,KACPN,EAAQoJ,gBAAgB9I,EAAKA,KAAK1C,MALb,2CAAD,yDAOxBwL,gBAAiB3I,kBAAO,SAACC,EAAOT,GAC5BS,EAAM+H,aAAN,aAAyBxI,MAI3BoJ,UAAWtJ,gBAAK,yCAAC,WAAMC,EAASC,GAAf,gCAAAC,EAAA,+EACwED,GAAhF1B,EADQ,EACRA,QAASI,EADD,EACCA,QAASC,EADV,EACUA,QAASF,EADnB,EACmBA,QAASvC,EAD5B,EAC4BA,OAAQC,EADpC,EACoCA,OADpC,EAC4CuM,SAD5C,EACsDC,WAC/DzI,EAAkB,eAAiBzB,EAAU,IAAMH,EAAU,QACnEtB,QAAQC,IAAIiD,GACZlD,QAAQC,IAAI,CACVyB,QAASA,EACTC,QAASA,EACTzC,OAAQ9B,EAAYO,EAAYuB,IAChCC,OAAQ/B,EAAYO,EAAYwB,MARnB,SAUQgE,KAAMgG,IAAIjG,EAAK,CAClCxB,QAASA,EACTC,QAASA,EACTzC,OAAQ9B,EAAYO,EAAYuB,IAChCC,OAAQ/B,EAAYO,EAAYwB,MAdrB,kBAUPkE,KAMRN,EAAQsJ,gBAAgBrJ,GAhBT,2CAAD,yDAkBhBqJ,gBAAiB7I,kBAAO,SAACC,EAAOT,GAC9BhD,QAAQC,IAAI+C,GACZS,EAAM8H,SAAS1K,KAAI,SAACM,GACdA,EAAIG,SAAW0B,EAAQ1B,SACvBH,EAAIO,SAAWsB,EAAQtB,SACvBP,EAAIQ,SAAWqB,EAAQrB,SACvBR,EAAIM,SAAWuB,EAAQvB,SACvBN,EAAIjC,QAAU8D,EAAQ9D,QACtBiC,EAAIhC,QAAU6D,EAAQ7D,SACpBgC,EAAImL,QAAS,SAIvBC,YAAazJ,gBAAK,yCAAC,WAAMC,EAASC,GAAf,gCAAAC,EAAA,+EACsED,GAAhF1B,EADU,EACVA,QAASI,EADC,EACDA,QAASC,EADR,EACQA,QAASF,EADjB,EACiBA,QAASvC,EAD1B,EAC0BA,OAAQC,EADlC,EACkCA,OADlC,EAC0CuM,SAD1C,EACoDC,WAC/DzI,EAAkB,eAAiBzB,EAAU,IAAMH,EAAU,OACnEtB,QAAQC,IAAIiD,GACZlD,QAAQC,IAAI,CACVyB,QAASA,EACTC,QAASA,EACTzC,OAAQ9B,EAAYO,EAAYuB,IAChCC,OAAQ/B,EAAYO,EAAYwB,MARjB,SAUMgE,KAAMgG,IAAIjG,EAAK,CAClCxB,QAASA,EACTC,QAASA,EACTzC,OAAQ9B,EAAYO,EAAYuB,IAChCC,OAAQ/B,EAAYO,EAAYwB,MAdnB,kBAUTkE,KAMRN,EAAQyJ,gBAAgBxJ,GAhBP,2CAAD,yDAkBlBwJ,gBAAiBhJ,kBAAO,SAACC,EAAOT,GAC9BhD,QAAQC,IAAI+C,GACZS,EAAM+H,aAAa3K,KAAI,SAACM,GAClBA,EAAIG,SAAW0B,EAAQ1B,SACvBH,EAAIO,SAAWsB,EAAQtB,SACvBP,EAAIQ,SAAWqB,EAAQrB,SACvBR,EAAIM,SAAWuB,EAAQvB,SACvBN,EAAIjC,QAAU8D,EAAQ9D,QACtBiC,EAAIhC,QAAU6D,EAAQ7D,SACpBgC,EAAI2K,YAAa,UFhI7BW,MGZiB,CACfhK,sBAAuB,GACvBiK,gBAAiB,GACjBC,gBAAiB,GACjBC,cAAe,GAEfC,mBAAoB/J,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,gBAAAC,EAAA,6DAElBC,EAAkB,oBADPF,EADO,SAGlBG,KAAMC,IAAIF,GAAK+B,MAAK,SAAAuF,GAExB,GAAkC,MAA9BA,EAASnH,KAAKA,KAAKyJ,QAIrB,OAAOtC,EAASnH,KAAKA,KAAKyJ,QAH1BrC,MAAM,+CAKPrC,OAAM,SAACsC,GACRD,MAAM,0CAZgB,2CAAD,yDAezBsC,WAAYjK,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,kBAAAC,EAAA,6DAEZC,EAAkB,oBADPF,EADC,SAGCG,KAAMC,IAAIF,GAAK+B,MAAK,SAAAuF,GAErC,GAA6B,YAAzBA,EAASnH,KAAKsB,OAChB,OAAO6F,EAASnH,KAAKA,KAAKyJ,QAE1BrC,MAAM,+CAEPrC,OAAM,SAACsC,GACRD,MAAM,0CAXU,OAGZpH,EAHY,OAclBrD,QAAQC,IAAIoD,GACZN,EAAQiK,WAAW3J,GAfD,2CAAD,yDAiBjB2J,WAAYxJ,kBAAO,SAACC,EAAOT,GAET,OAAZA,IACAS,EAAMmJ,cAAgB5J,MAI5BiK,SAAUnK,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,oBAAAC,EAAA,+EAEoBD,GAA3BsB,EAFO,EAEPA,SAAU4I,EAFH,EAEGA,UAFH,SAGK/J,KAAMuB,KAAiB,mBAAoB,CAC1DJ,SAAUA,EACV4I,UAAWA,IACZjI,MAAK,SAAAuF,GACNC,MAAM,mBAPM,yDAAD,yDAWf1G,yBAA0BjB,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,4BAAAC,EAAA,+EACaD,GAAjCvB,EADoB,EACpBA,QAASvC,EADW,EACXA,OAAQC,EADG,EACHA,OACnB+D,EAAkB,wBAA0BzB,EAAU,IAAMrE,EAAY8B,GAAU,IAAM9B,EAAY+B,GAF9E,SAGPgE,KAAMC,IAAIF,GAHH,gBAGrBG,EAHqB,EAGrBA,KACPN,EAAQiB,yBAAyBX,EAAKA,MAJV,2CAAD,yDAM7BW,yBAA0BR,kBAAO,SAACC,EAAOT,GAChB,OAAnBA,EAAQiB,SACRR,EAAMhB,sBAAwBO,EAAQiB,WAG5CkJ,mBAAoBrK,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,0BAAAC,EAAA,+EACQD,GAAxB9D,EADgB,EAChBA,OAAQC,EADQ,EACRA,OACV+D,EAAkB,mCAAqC9F,EAAY8B,GAAU,IAAM9B,EAAY+B,GAF7E,SAGHgE,KAAMC,IAAIF,GAHP,gBAGjBG,EAHiB,EAGjBA,KACPrD,QAAQC,IAAIiD,GACZH,EAAQqK,mBAAmB/J,EAAKA,MALR,2CAAD,yDAOzB+J,mBAAoB5J,kBAAO,SAACC,EAAOT,GACR,OAArBA,EAAQqK,WACR5J,EAAMiJ,gBAAkB1J,EAAQqK,aAGtCC,mBAAoBxK,gBAAK,yCAAC,WAAOC,EAASC,GAAhB,0BAAAC,EAAA,+EACQD,GAAxB9D,EADgB,EAChBA,OAAQC,EADQ,EACRA,OACV+D,EAAkB,mCAAqC9F,EAAY8B,GAAU,IAAM9B,EAAY+B,GAF7E,SAGHgE,KAAMC,IAAIF,GAHP,gBAGjBG,EAHiB,EAGjBA,KACPN,EAAQwK,mBAAmBlK,EAAKA,MAJR,2CAAD,yDAMzBkK,mBAAoB/J,kBAAO,SAACC,EAAOT,GACR,OAArBA,EAAQqK,WACR5J,EAAMkJ,gBAAkB3J,EAAQqK,eHrE7BpF,GAHDuF,sBAAYC,kBAAQvD,GAAY,CAACwD,cAAe,kBILxD7T,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrCU,MAAO,CACHwR,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXzN,SAAU,WACVF,MAAO,IACPzD,gBAAiBhB,EAAMO,QAAQmE,WAAWhE,MAC1C2R,OAAQ,iBACRC,UAAWtS,EAAMuS,QAAQ,GACzBnS,QAASJ,EAAMK,QAAQ,EAAG,EAAG,IAEjCmS,UAAW,CACPL,KAAM,MACNC,UAAW,mBAEfxM,OAAQ,CACJzF,WAAY,IAEhBsS,YAAa,CACT1R,OAAQf,EAAMK,QAAQ,GACtBqS,SAAU,SAKZC,GAAe,CACjB,cAAe,cACf,KAAQ,QAGNC,GAAc,CAChB,oBAAqB,YACrB,mBAAoB,WACpB,eAAgB,YAkLLC,GA/KE,SAAClU,GACd,IAAMK,EAAUZ,KACR0U,EAAuDnU,EAAvDmU,WAFgB,GAEuCnU,EAA3CoU,WAA2CpU,EAA/BoH,QAA+BpH,EAAtBqH,QAFjB,YAEuCrH,EAFvC,iDAGUqU,mBAAS,CACvC,CACIC,UAAW,IAAInR,KACfoR,QAASC,aAAQ,IAAIrR,KAAQ,GAC7ByD,IAAK,gBAPW,mBAGjB6N,EAHiB,KAGNC,EAHM,KAUlBC,EAAU,IAAIxR,KACdyR,EAAUC,aAASF,EAAS,GAXV,EAYUN,mBAAS,IAZnB,mBAYjBS,EAZiB,KAYNC,EAZM,OAacV,mBAAS,IAbvB,mBAajBW,EAbiB,KAaJC,EAbI,OAcYZ,mBAAS,IAdrB,mBAcjBa,EAdiB,KAcLC,EAdK,OAekBd,mBAAS,IAf3B,mBAejBe,EAfiB,KAeFC,EAfE,KAgBlBpF,EAAaqF,yBAAc,SAAAjM,GAAK,OAAIA,EAAMkE,KAAK0C,cAC/CvB,EAAqB6G,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQwC,KAAKuD,sBAC7DL,EAAeiH,yBAAc,SAAAjM,GAAK,OAAIA,EAAM8B,KAAKkD,gBACjDpC,EAAsBsJ,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAW9D,uBAEpEoF,GADmBiE,yBAAc,SAAAjM,GAAK,OAAIA,EAAM0G,WAAW3H,gBAClDmN,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQpC,KAAK8K,WAkBvDmE,qBAAU,WAcN,OAbA9G,EAAmB,CACfxE,SAAU+F,EAAW/F,SACrB3C,QAASvH,EAAMoH,UAEnB6E,EAAoB,CAChB5E,QAASrH,EAAMqH,QACfvC,OAAQ6P,EACR5P,OAAQ6P,IACT/J,MAAK,SAAC4K,IAvBa,SAACC,GACvB,IADyC,EACrCC,EAAoBC,aAAkB,CAAEC,MAAOlB,EAASmB,IAAKlB,IAC7DmB,EAAkB,GAFmB,cAGhBL,GAHgB,IAGzC,2BAAwC,CAAC,IAAhCM,EAA+B,QAGhCC,EAAiBL,aAAkB,CAAEC,MAAO,IAAI1S,KAAK6S,EAAalR,QAASgR,IAAK,IAAI3S,KAAK6S,EAAajR,UAC1GgR,EAAkBA,EAAgBG,OAAOD,IAPJ,8BAUzCN,EAAoBA,EAAkB7O,QAAO,SAASqP,GAAI,OAAQJ,EAAgBK,MAAK,SAAAC,GAAC,OAAIA,EAAEC,YAAcH,EAAEG,gBAC9GjB,EAAiBM,GAeTY,CADyB1I,GAAM2I,WAAWzG,WAAW3H,iBAGtD,eACR,IAEH,IAgBMqO,EAAe,WACjB,IAAMC,EAAe1T,EAAYyR,EAAU,GAAGH,WACxCqC,EAAa3T,EAAYyR,EAAU,GAAGF,UAjB3B,IAAbO,GACAzE,MAAM,uBACC,GAEQ,IAAf2E,GACA3E,MAAM,iCACC,GAEO,IAAd6E,IACA7E,MAAM,+BACC,MAWXgB,EAAO,CACHnK,QAAS+I,EAAW/F,SACpB5C,QAASwN,EACTvN,QAASvH,EAAMoH,QACfC,QAASrH,EAAMqH,QACfvC,OAAQ4R,EACR3R,OAAQ4R,EACRrF,SAAU0D,EACVzD,WAAY2D,IAEhBf,MAGJ,OACI,yBAAKxT,UAAWN,EAAQ0B,OACpB,kBAACf,EAAA,EAAD,CAAY4V,GAAG,qBAAqB1V,QAAQ,MAA5C,wBACA,kBAAC,mBAAD,CACI0V,GAAG,kBACHC,SAAU,SAAAjU,GAAI,OAAI8R,EAAa,CAAC9R,EAAKkU,aACrCC,sBAAsB,EACtBC,2BAA2B,EAC3BC,OAAQxC,EACRyC,UAAU,aACVvC,QAAWA,EACXC,QAASA,EACTQ,cAAeA,IAGnB,kBAAC+B,EAAA,EAAD,CAAaxW,UAAWN,EAAQyT,aAC5B,kBAACsD,EAAA,EAAD,CAAYR,GAAG,yBAAf,gBACA,kBAACS,EAAA,EAAD,CACIC,QAAQ,wBACRV,GAAG,yBACH9K,MAAOgJ,EACP+B,SAAU,SAACU,GAAD,OAAWxC,EAAawC,EAAMC,OAAO1L,QAC/C2L,WAAS,GAERpJ,EAAa5H,KAAI,SAACiR,GACf,OAAO,kBAACC,EAAA,EAAD,CAAU7L,MAAO4L,EAAYpQ,SAAUoQ,EAAYpQ,cAKtE,kBAAC6P,EAAA,EAAD,CAAaxW,UAAWN,EAAQyT,aAC5B,kBAACsD,EAAA,EAAD,CAAYR,GAAG,kCAAf,gBACA,kBAACS,EAAA,EAAD,CACIC,QAAQ,iCACRV,GAAG,kCACH9K,MAAOkJ,EACP6B,SAAU,SAACU,GAAD,OAAWtC,EAAesC,EAAMC,OAAO1L,QACjD2L,WAAS,GAERG,OAAOC,QAAQ7D,IACXvN,KAAI,YAAiD,IAAD,mBAA9CqR,EAA8C,KAA1BC,EAA0B,KACjD,OAAO,kBAACJ,EAAA,EAAD,CAAU7L,MAAOiM,GAAuBD,QAK/D,kBAACX,EAAA,EAAD,CAAaxW,UAAWN,EAAQyT,aAC5B,kBAACsD,EAAA,EAAD,CAAYR,GAAG,iCAAf,eACA,kBAACS,EAAA,EAAD,CACIC,QAAQ,gCACRV,GAAG,iCACH9K,MAAOoJ,EACP2B,SAAU,SAACU,GAAD,OAAWpC,EAAcoC,EAAMC,OAAO1L,QAChD2L,WAAS,GAERG,OAAOC,QAAQ5D,IACXxN,KAAI,YAA+C,IAAD,mBAA5CuR,EAA4C,KAAzBC,EAAyB,KAC/C,OAAO,kBAACN,EAAA,EAAD,CAAU7L,MAAOmM,GAAsBD,QAS9D,yBAAKrX,UAAWN,EAAQwT,WACpB,kBAACqE,GAAA,EAAD,CAAQvX,UAAWN,EAAQ4G,OACvB/F,QAAQ,WACRE,MAAM,UACNX,QAAS,kBAAMgW,MAHnB,WAMA,kBAACyB,GAAA,EAAD,CAAQvX,UAAWN,EAAQ4G,OACvB/F,QAAQ,WACRE,MAAM,YACNX,QAAST,EAAMmU,YAHnB,aC9MV1U,GAAYC,YAAW,CACzBC,KAAM,CACF8B,QAAS,GACTF,UAAW,IAEfmG,SAAU,CACN5B,MAAO,OACPhG,OAAQ,OACR2B,QAAS,kBAEbkG,KAAM,CACF7H,OAAQ,KAEZqY,cAAc,CACV3W,WAAY,MAId4W,GAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OA+I9EC,GA7IE,SAACrY,GACd,IAAMK,EAAUZ,KADQ,EAEA4U,mBAAS,IAAIlR,MAFb,mBAEjBD,EAFiB,KAEXoV,EAFW,OAGcjE,mBAAS,IAHvB,mBAGjBkE,EAHiB,KAGJC,EAHI,OAIAnE,oBAAS,GAJT,mBAKlBzC,GALkB,UAKJ2D,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQpC,KAAKqL,gBACtD6G,EAAUnD,yBAAc,SAAAjM,GAAK,OAAIA,EAAM9C,KAAK4K,YAC5Ca,EAAYuD,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQpC,KAAKyL,aAgD1D,OANAwD,qBAAU,WAEN,OADA5D,EAAY5R,EAAMkK,UACX,eACR,IAIC,6BACI,kBAACxH,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAAC,IAAD,CAAUlC,UAAWN,EAAQqH,SACzBgR,aAAc,cAAEC,gBAAF,IAAmBzV,EAAnB,EAAmBA,KAAnB,EAAyB0V,KAAzB,OArBf,SAAC1V,GAChB,IAAIuS,GAAS,EAMb,OALAgD,EAAQ5M,SAAQ,SAAS9E,GAClBxD,EAAYwD,EAAIjC,SAAW5B,GAAQK,EAAYwD,EAAIhC,SAAW7B,IAC7DuS,GAAS,MAGVA,EAc4DoD,CAAW3V,IAC9D2T,SAAU,SAAC/L,GACP0N,EAAe,IACfF,EAAQxN,OAIpB,kBAACpI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAAC7B,EAAA,EAAD,CAAYE,QAAQ,KAAKP,UAAWN,EAAQ8X,eAA5C,qBACA,kBAAC9R,EAAD,CACIC,UAAW8R,GACX7R,KAAMkS,EACNhY,QAlDM,SAACqY,GACvBN,EAAeM,QAqDVL,EACI3R,QAAO,SAACiS,GAAD,OAAcC,kBAAQT,GASvBrV,GAAQK,EAAYwV,EAAQhU,SAAW7B,GAAQK,EAAYwV,EAAQjU,QAPlEiU,EAAQ7R,UAAYqR,EAAYrR,SAChC6R,EAAQzR,UAAYiR,EAAYjR,SAChCyR,EAAQxR,UAAYgR,EAAYhR,SAChCwR,EAAQ1R,UAAYkR,EAAYlR,SAChC0R,EAAQjU,SAAWyT,EAAYzT,QAC/BiU,EAAQhU,SAAWwT,EAAYxT,UAGtC0B,KAAI,SAACsS,GAAD,OACD,kBAACvY,EAAA,EAAD,CAAMG,UAAWN,EAAQV,MACrB,kBAACqB,EAAA,EAAD,CAAYE,QAAQ,MAApB,eAGA,kBAACF,EAAA,EAAD,CAAYE,QAAQ,MAApB,SACW6X,EAAQ7R,SAEnB,kBAAClG,EAAA,EAAD,CAAYE,QAAQ,MAApB,QACU6X,EAAQzR,QADlB,KAC6ByR,EAAQxR,QADrC,KAGA,kBAACvG,EAAA,EAAD,CAAYE,QAAQ,MAApB,cACgB6X,EAAQ1R,SAExB,kBAACrG,EAAA,EAAD,CAAYE,QAAQ,MAApB,aACeqC,EAAYwV,EAAQjU,QAAQmU,eAD3C,OAC+D1V,EAAYwV,EAAQhU,QAAQkU,gBAE3F,kBAACjY,EAAA,EAAD,CAAYE,QAAQ,MAApB,WACa6X,EAAQG,KAAKC,QAAQ,IAElC,kBAACnY,EAAA,EAAD,CAAYE,QAAQ,MAApB,kBAC0C,aAAtB6X,EAAQxH,WAA4B,oBACZ,YAAtBwH,EAAQxH,WAA2B,mBACb,YAAtBwH,EAAQxH,WAA2B,WAAa,MAEtE,6BAEA,kBAAC4F,EAAA,EAAD,KACI,kBAACiC,EAAA,EAAD,CAAWhY,MAAM,UAAUiY,SAAO,GAAlC,eACA,kBAACC,EAAA,EAAD,CACIC,QACI,kBAACC,EAAA,EAAD,CACIC,QAA2B,GAAlBV,EAAQ7G,OACjB2E,SAAU,SAACU,GAAD,OA9FtB,SAACwB,GACrBnT,QAAQC,IAAI,mCACZmM,EAAU,CACN9K,QAAS6R,EAAQ7R,QACjBI,QAASyR,EAAQzR,QACjBC,QAASwR,EAAQxR,QACjBF,QAAS0R,EAAQ1R,QACjBvC,OAAQiU,EAAQjU,OAChBC,OAAQgU,EAAQhU,SAsFiC2U,CAAgBX,IACrC3X,MAAM,YAGdjB,MAAO4Y,EAAQ7G,OAAS,eAAiB,mB,yHClJnEzS,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrCyS,YAAa,CACT1R,OAAQf,EAAMK,QAAQ,GACtBF,WAAY,GAEhBmY,UAAW,CACPpY,UAAWF,EAAMK,QAAQ,GACzBkY,aAAcvY,EAAMK,QAAQ,QAK9BmY,GAAe,SAAC7Z,GAAW,IAAD,EACEqU,qBADF,mBACrBjN,EADqB,KACZ0S,EADY,OAEFzF,qBAFE,mBAErBhK,EAFqB,KAEd0P,EAFc,KAGrBC,EAAkEha,EAAlEga,WAAYC,EAAsDja,EAAtDia,YAAaC,EAAyCla,EAAzCka,eAAuBC,GAAkBna,EAAzBG,MAAyBH,EAAlBma,MACjDhL,GAJsB,YAG6CnP,EAH7C,8DAIHuV,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQwC,KAAKgE,qBAC3Df,EAAgBkH,yBAAc,SAAAjM,GAAK,OAAIA,EAAM8B,KAAKiD,iBAgBlDgM,EAAoB,SAAC7S,GACvB,IAAI8S,EAAY,EAOhB,OANAjM,EAAcvC,SAAQ,SAACyO,GACfA,EAAO/S,SAAWA,IAClB3B,QAAQC,IAAIyU,GACZD,EAAYC,EAAO/K,eAGpB8K,GAGX7E,qBAAU,WAEN,OADArG,IACO,eACR,IAEH,IAAM9O,EAAUZ,KAChB,OACI,6BACI,kBAAC0X,EAAA,EAAD,CAAaoD,UAAQ,EAACrZ,QAAQ,WAAWsZ,WAAS,EAAC7Z,UAAWN,EAAQyT,aAClE,kBAACsD,EAAA,EAAD,CAAYqD,QAAQ,4BAA4Bza,EAAMG,OAClD,kBAACkX,EAAA,EAAD,CACIqD,QAAM,EACN5O,MAAO1E,EACPjH,MAAOH,EAAMG,MACb0W,SAtCC,SAACU,GAClB,IAAMlN,EAAQ+P,EAAkB7C,EAAMC,OAAO1L,OAC7CgO,EAAWvC,EAAMC,OAAO1L,OACxBiO,EAAS1P,GACT6P,EAAe7P,GACf2P,EAAWzC,IAkCKoD,WAAY,CACRxQ,KAAM,UACNyM,GAAI,6BAGR,4BAAQgE,aAAW,OAAO9O,MAAM,KAC/BsC,EAAc3H,KAAI,SAACoU,GAAD,OACX,4BAAQjU,IAAKiU,EAAKtT,QAASuE,MAAO+O,EAAKtT,SAClCsT,EAAKtT,cAK9B,kBAACvG,EAAA,EAAD,gCACA,kBAAC8Z,GAAA,EAAD,CACI5Z,QAAQ,WACRqZ,UAAQ,EACRC,WAAS,EACT1O,MAAOzB,EACPuM,GAAG,QACHmE,aAAa,QACbC,WAAS,EACTC,SAAUd,EACVU,KAAK,SACLla,UAAWN,EAAQsZ,UACnB9C,SAxDc,SAACU,GACvBwC,EAASxC,EAAMC,OAAO1L,OACtBmO,EAAY1C,QAgEpBsC,GAAaqB,aAAe,CACxBC,eAAgB,WACZvV,QAAQC,IAAI,iDAEhB1F,MAAO,aAGI0Z,U,UC5FTpa,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrC+Z,MAAO,CACHtV,MAAO,MACPyN,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXzN,SAAU,WACV3D,gBAAiBhB,EAAMO,QAAQmE,WAAWhE,MAC1C2R,OAAQ,iBACRC,UAAWtS,EAAMuS,QAAQ,GACzBnS,QAASJ,EAAMK,QAAQ,EAAG,EAAG,IAEjC2Z,UAAW,CACPC,YAAaja,EAAMK,QAAQ,IAC3BC,UAAW,SAEf4Z,cAAe,CACXha,UAAW,GACXE,QAAS,QAwMF+Z,GApMK,SAACxb,GAAW,IACpByb,EAAgCzb,EAAhCyb,SAAUvR,EAAsBlK,EAAtBkK,SACZ7J,GAFqB,YACaL,EADb,yBAEXP,MAFW,EAGH4U,oBAAS,GAHN,mBAGpBqH,EAHoB,KAGdC,EAHc,OAIQtH,oBAAS,GAJjB,mBAIpBuH,EAJoB,KAIPC,EAJO,OAKGxH,mBAAS,IALZ,mBAKpBjN,EALoB,KAKX0S,EALW,OAMKzF,mBAAS,IANd,mBAMpByH,EANoB,KAMVC,EANU,OAOS1H,mBAAS,IAPlB,mBAOpB2H,EAPoB,KAORC,EAPQ,KAQrBhM,EAAaqF,yBAAc,SAAAjM,GAAK,OAAIA,EAAMkE,KAAK0C,cAC/ChF,EAAiBsK,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAW9E,kBAC/DG,EAAiBmK,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAW3E,kBAC/D8Q,EAAoB3G,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAWtE,iBAClE3D,EAAcwN,yBAAc,SAAAjM,GAAK,OAAIA,EAAM0G,WAAWjI,eAZjC,EAawBuM,oBAAS,GAbjC,mBAapB8H,EAboB,KAaDC,EAbC,OAcO/H,mBAAS,CACvC,CACIC,UAAW,IAAInR,KACfoR,QAAS,IAAIpR,KACbyD,IAAK,eAlBc,mBAcpB6N,EAdoB,KAcTC,EAdS,KAqBrBjM,EAA6B8M,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAWtH,8BArBtD,EAsBmC4L,mBAAS,IAtB5C,mBAsBpB7L,EAtBoB,KAsBKU,EAtBL,KAgCrBuN,EAAY,yCAAG,6BAAA5N,EAAA,sEACXJ,EAA2B,CAC7BpB,QAASrH,EAAMkK,SACfpF,OAAQ2P,EAAU,GAAGH,UACrBvP,OAAQ0P,EAAU,GAAGF,UAJR,OAOX/L,EAA0BqF,GAAM2I,WAAWzG,WAAWvH,wBAC5DU,EAA2BV,GAC3B4T,GAAsB,GATL,2CAAH,qDAiBZjI,GAAa,WACfwH,GAAQ,IAMNU,GAAiB,WACnBR,GAAY,IA8BhB,OANArG,qBAAU,WAEN,OADAvK,EAAef,GACR,eACR,IAIC,6BACe,MAAVuR,EAAiB,oCAClB,kBAACvD,GAAA,EAAD,CAAQvX,UAAWN,EAAQ4G,OACvB/F,QAAQ,WACRT,QApEe,WACvB2b,GAAsB,KAiElB,iFAKA,kBAAC5b,EAAA,EAAD,CAAMG,UAAWN,EAAQkb,eACrB,kBAACva,EAAA,EAAD,CAAYE,QAAQ,MAApB,mCACmC,GAAlCsH,EAAwB8T,OACnB,kBAACtb,EAAA,EAAD,qCACAwH,EAAwB/B,KAAI,SAAA6I,GAC9B,OAAQ,gDAAsBA,EAAS/H,QAA/B,uBAA4D+H,EAASiN,sBAGrF,kBAACC,GAAA,EAAD,CACId,KAAMS,EACNM,QA7EgB,WACxBL,GAAsB,KA6Ed,kBAAC5b,EAAA,EAAD,CAAMG,UAAaN,EAAQ+a,OACvB,kBAAC1Y,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAAC,mBAAD,CACI+T,GAAG,kBACHC,SAAU,SAAAjU,GACNgD,QAAQC,IAAIjD,GACZ8R,EAAa,CAAC,CACVJ,UAAW1R,EAAKkU,UAAUxC,UAC1BC,QAAS3R,EAAKkU,UAAUvC,QACxB3N,IAAKhE,EAAKkU,UAAUlQ,QAI5BmQ,sBAAsB,EACtBC,2BAA2B,EAC3BC,OAAQxC,EAERyC,UAAU,gBAGd,kBAACgB,GAAA,EAAD,CAAQvX,UAAWN,EAAQ4G,OACvB/F,QAAQ,WACRsZ,WAAS,EACTpZ,MAAM,UACNX,QAAS,kBAAMgW,MAJnB,gEASF,KACN,kBAACjQ,EAAA,EAAD,KACKsB,EAAYrB,KAAI,SAACiW,GAAD,OACjB,oCACA,kBAAC1V,EAAA,EAAD,CAAUJ,IAAK+V,gBACf,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,QAGN,kBAACrV,EAAA,EAAD,CACIC,QAASiV,EAASnV,UAEtB,kBAACC,EAAA,EAAD,CAAc7G,UAAWN,EAAQgb,UAC7B5T,QAAO,WAAMiV,EAASrS,MAAf,UAEE,MAAZoR,EACD,kBAACqB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAYC,KAAK,MAAMpC,aAAW,SAASna,QAAS,kBAAMyb,EAAkB,CAAChS,SAAUA,EAAU3C,QAASmV,EAASnV,YACjH,kBAAC,KAAD,QAEuB,KAChB,MAAZkU,EACD,kBAACqB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAYtc,QAAS,kBAnHlBwc,EAmHkCP,EAASnV,QAlH1D0U,EAAcgB,QACdtB,GAAQ,GAFM,IAACsB,IAoHC,kBAACzV,EAAA,EAAD,CACIC,QAAQ,UAES,UAIhB,MAAZgU,EACD,kBAACzU,EAAA,EAAD,CAAUC,QAAM,EAACxG,QAnHP,WAClBob,GAAY,KAmHA,kBAACe,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC,KAAD,QAGR,kBAACrV,EAAA,EAAD,CACIC,QAAQ,0BAEF,MAElB,kBAAC+U,GAAA,EAAD,CACId,KAAMA,EACNe,QAAStI,IACT,kBAAC,GAAD,CAAU9M,QAASrH,EAAMkK,SAAU9C,QAAS4U,EAAY7H,WAAYA,MAExE,kBAACqI,GAAA,EAAD,CACId,KAAME,EACNa,QAASJ,IACT,kBAAC7b,EAAA,EAAD,CAAMG,UAAWN,EAAQ+a,OACrB,kBAAC,GAAD,CAAcpB,WA5HT,SAACzC,GAClBuC,EAAWvC,EAAMC,OAAO1L,QA2H4BmO,YAhIlC,SAAC1C,GACnBwE,EAAYxE,EAAMC,OAAO1L,QA+HuDoO,eAAgB6B,EAAa5B,KAAMlK,EAAWiN,eAClH,kBAAChF,GAAA,EAAD,CAAQzX,QAzHA,SAAC8W,GACrB8E,KACAzW,QAAQC,IAAI,CACR0B,QAASH,EACTiD,MAAOzF,SAASkX,KAEpB1Q,EAAe,CACXlB,SAAUA,EACV3C,QAASH,EACTiD,MAAOzF,SAASkX,MAgH0B1a,MAAM,WAAxC,0B,qBC7Nd3B,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrCyS,YAAa,CACT1R,OAAQf,EAAMK,QAAQ,GACtBF,WAAY,GAEhBmY,UAAW,CACPpY,UAAWF,EAAMK,QAAQ,GACzBkY,aAAcvY,EAAMK,QAAQ,QAiErByb,GA5DM,SAACnd,GAAW,IACtBod,EAA8Dpd,EAA9Dod,eAAgBC,EAA8Crd,EAA9Cqd,aAAcC,EAAgCtd,EAAhCsd,eAAgBC,EAAgBvd,EAAhBud,aAE/Cld,EAAUZ,KAChB,OACI,6BACI,kBAACuB,EAAA,EAAD,CAAYwc,MAAM,UAAlB,2EACA,kBAAC1C,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,6CACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,YACHmE,aAAa,YACbC,WAAS,EACTH,KAAK,SACLla,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAW6F,EAAe7F,EAAMC,OAAO1L,UAErD,kBAACgP,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,wCACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,UACHmE,aAAa,UACbC,WAAS,EACTH,KAAK,SACLla,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAW8F,EAAa9F,EAAMC,OAAO1L,UAEnD,kBAACgP,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,6CACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,YACHmE,aAAa,YACbC,WAAS,EACTH,KAAK,SACLla,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAW+F,EAAe/F,EAAMC,OAAO1L,UAErD,kBAACgP,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,wCACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,UACHmE,aAAa,UACbC,WAAS,EACTH,KAAK,SACLla,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAWgG,EAAahG,EAAMC,OAAO1L,YC9DzDrM,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrCsY,UAAW,CACP2B,YAAaja,EAAMK,QAAQ,GAC3BkY,aAAcvY,EAAMK,QAAQ,GAC5BH,UAAWF,EAAMK,QAAQ,GACzBoE,MAAO,WAwKA2X,GApKe,SAACzd,GAC3B,IAAMK,EAAUZ,KADqB,EAEH4U,mBAAS,IAFN,mBAE9BC,EAF8B,KAEnBoJ,EAFmB,OAGPrJ,mBAAS,IAHF,mBAG9BE,EAH8B,KAGrBoJ,EAHqB,OAICtJ,mBAAS,IAJV,mBAI9BuJ,EAJ8B,KAIjBN,EAJiB,OAKHjJ,mBAAS,IALN,mBAK9BwJ,EAL8B,KAKnBN,EALmB,KAM/BtN,EAAaqF,yBAAc,SAAAjM,GAAK,OAAIA,EAAMkE,KAAK0C,cAC/C6N,EAA2BvI,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAWvF,wBACzEuT,EAAmBzI,yBAAc,SAAAjM,GAAK,OAAIA,EAAM0G,WAAW3H,gBAC3D6D,EAAsBsJ,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAW9D,uBACpEG,EAAsBmJ,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAW3D,uBACpEG,EAAyBgJ,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAWxD,0BAE7EiJ,qBAAU,WAMN,OALAvJ,EAAoB,CAChB5E,QAASrH,EAAMkK,SACfpF,OAAQ,IAAI3B,KACZ4B,OAAQ,IAAI5B,MAAK,IAAIA,MAAOmV,SAAQ,IAAInV,MAAOG,UAAY,QAExD,eACR,IAwFH,OACI,6BACI,kBAACtC,EAAA,EAAD,mDACA,kBAACwF,EAAA,EAAD,KACCuX,EAAiBtX,KAAI,SAACgG,GACnB,OACI,kBAACzF,EAAA,EAAD,CAAUJ,IAAK+V,gBACX,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC,KAAD,QAGR,kBAACrV,EAAA,EAAD,CAAcC,QAAO,UAAMlE,EAAYkJ,EAAM3H,QAAQmU,eAAhC,eAAqD1V,EAAYkJ,EAAM1H,QAAQkU,kBACpG,kBAAC6D,GAAA,EAAD,KACE9c,EAAMma,KAGY,KAFhB,kBAAC4C,GAAA,EAAD,CAAYC,KAAK,MAAMpC,aAAW,SAASna,QAAS,kBAvB3C,SAACgM,GAC9B7G,QAAQC,IAAI4G,GACZF,EAAuB,CACnBlF,QAASrH,EAAMkK,SACfpF,OAAQ2H,EAAM3H,OACdC,OAAQ0H,EAAM1H,SAkB0DiZ,CAAyBvR,KAC7E,kBAAC,KAAD,aAOpB,kBAACzL,EAAA,EAAD,qCACChB,EAAMma,KAAO,kBAAC,GAAD,CAAciD,eAAgBM,EAAcL,aAAcM,EAC5CL,eAAgBA,EAAgBC,aAAcA,IACxE,oCACF,kBAACzC,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,+BACNoa,UAAQ,EACR3D,GAAG,YACHmE,aAAa,YACbC,WAAS,EACTH,KAAK,SACLla,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAWmG,EAAanG,EAAMC,OAAO1L,UAEnD,kBAACgP,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,+BACNoa,UAAQ,EACR3D,GAAG,UACHmE,aAAa,UACbC,WAAS,EACTH,KAAK,SACLla,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAWoG,EAAWpG,EAAMC,OAAO1L,WAEjD,kBAACoM,GAAA,EAAD,CAAQhX,QAAQ,WAAWE,MAAM,UAAUX,QAxFrB,YA/CR,WAClB,GAAwB,GAApB6T,EAAUgI,QAAiC,GAAlB/H,EAAQ+H,OAEjC,OADAjM,MAAM,6CACC,EAEX,GAAI3M,EAAe4Q,GAAa5Q,EAAe6Q,GAE3C,OADAlE,MAAM,0DACC,EAEX,IAAMrM,EAAkBsQ,KAActQ,EAAkBuQ,GAEpD,OADAlE,MAAM,8DACC,EAEX,GAAI3M,EAAe4Q,GAAa,IAAInR,KAEhC,OADAkN,MAAM,6CACC,EAEX,GAAIJ,EAAWiN,aAAc,CACzB,GAA0B,GAAtBU,EAAYtB,QAAmC,GAApBuB,EAAUvB,OAErC,OADAjM,MAAM,6CACC,EAEX,GAAI3M,EAAeka,GAAela,EAAema,GAE7C,OADAxN,MAAM,0DACC,EAEX,IAAMrM,EAAkB4Z,KAAgB5Z,EAAkB6Z,GAEtD,OADAxN,MAAM,8DACC,EAEX,GAAI3M,EAAeka,GAAe,IAAIza,KAElC,OADAkN,MAAM,6CACC,EAEX,IAAM4N,EAAgBha,EAAqBqQ,EAAWC,GAChD2J,EAAkBja,EAAqB2Z,EAAaC,GAC1D,GAAII,EAAgB,KAAOC,EAAkB,IAEzC,OADA7N,MAAM,gEACC,EAEX,GAAIpM,EAAqBqQ,EAAWuJ,GAAa,IAE7C,OADAxN,MAAM,uEACC,EAGf,OAAO,GAGQ8N,KAIXne,EAAMma,KAEN2D,EAAyB,CACrB5T,SAAUlK,EAAMkK,SAChBC,KAAM,KACNC,IAAK,KACL7C,QAAS,KACT8C,MAAO,KACPI,UAAW6J,EACX5J,UAAW6J,EACX5J,UAAWiT,EACXhT,UAAWiT,IAGfzR,EAAoB,CAChB/E,QAASrH,EAAMkK,SACfpF,OAAQwP,EACRvP,OAAQwP,IAIhBmJ,EAAa,IACbC,EAAW,IACXL,EAAe,IACfC,EAAa,OA2DT,yBC1KN9d,ICEYC,aAAW,SAAC2B,GAAD,MAAY,CACrC+c,WAAY,CACR7c,UAAW,GACXE,QAAS,QDLC/B,aAAW,SAAC2B,GAAD,MAAY,CACrC1B,KAAM,CACJ4B,UAAWF,EAAMK,QAAQ,IAE3B2c,YAAa,CACT9c,UAAW,GACXE,QAAS,IAEbqS,YAAa,CACX1R,OAAQf,EAAMK,QAAQ,GACtBF,WAAY,EACZoY,aAAcvY,EAAMK,QAAQ,SAuHnB4c,GAnHQ,SAACte,GACtB,IAAMK,EAAUZ,KACVgK,EAAmC8L,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAWtG,oCACjFH,EAAoCiM,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAWzG,qCAClFhB,EAAgCgN,yBAAc,SAAAjM,GAAK,OAAIA,EAAM0G,WAAWzH,iCACxEC,EAAiC+M,yBAAc,SAAAjM,GAAK,OAAIA,EAAM0G,WAAWxH,kCACzEgW,EAAYhJ,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAWpG,4BAC1D6U,EAAalJ,yBAAc,SAAAjM,GAAK,OAAIA,EAAM0G,WAAW1H,yBAP3B,EAQNgM,oBAAS,IAAIlR,MAAOE,YARd,mBAQzBS,EARyB,KAQlB2a,EARkB,KAW5BhK,EAAY/P,EAAmBZ,GAGnC0R,qBAAU,WAkBR,OAjBA/L,EAAiC,CAC/BpC,QAASrH,EAAMkK,SACfpF,OAAQJ,EAAmBZ,GAAOgB,OAClCC,OAAQL,EAAmBZ,GAAOiB,SAGpCuE,EAAkC,CAChCjC,QAASrH,EAAMkK,SACfpF,OAAQJ,EAAmBZ,GAAOgB,OAClCC,OAAQL,EAAmBZ,GAAOiB,SAEpCwZ,EAAU,CACRlX,QAASrH,EAAMkK,SACfpF,OAAQ2P,EAAU3P,OAClBC,OAAQ0P,EAAU1P,SAGb,eACN,IAEH,IAAM2Z,EAAiB,yCAAG,WAAOnH,GAAP,UAAA1O,EAAA,sDACxB4V,EAASlH,EAAMC,OAAO1L,OADE,2CAAH,sDAIjB6S,EAAiB,yCAAG,uBAAA9V,EAAA,sEAClBY,EAAiC,CACrCpC,QAASrH,EAAMkK,SACfpF,OAAQJ,EAAmBZ,GAAOgB,OAClCC,OAAQL,EAAmBZ,GAAOiB,SAJZ,uBAOlBuE,EAAkC,CACtCjC,QAASrH,EAAMkK,SACfpF,OAAQJ,EAAmBZ,GAAOgB,OAClCC,OAAQL,EAAmBZ,GAAOiB,SAVZ,2CAAH,qDAyBvB,OACE,kBAACrC,EAAA,EAAD,CAAM/B,UAAWN,EAAQV,MACzB,kBAACqB,EAAA,EAAD,CAAYE,QAAS,MAArB,oCAA4DwD,EAAmBZ,GAAOgB,OAAO8Z,qBAA7F,OAAuHla,EAAmBZ,GAAOiB,OAAO6Z,qBAAxJ,KACE,kBAACzH,EAAA,EAAD,CAAaoD,UAAQ,EAACrZ,QAAQ,WAAWsZ,WAAS,EAAC7Z,UAAWN,EAAQyT,aACpE,kBAACsD,EAAA,EAAD,CAAYqD,QAAQ,gBAApB,gBACE,kBAACpD,EAAA,EAAD,CACEqD,QAAM,EACN5O,MAAOhI,EACP3D,MAAM,eACN0W,SAAU6H,EACV/D,WAAY,CACRxQ,KAAM,QACNyM,GAAI,iBAnEC,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAC9D,OAAQ,SAAU,YAAa,UAAW,WAAY,YAqEtCnQ,KAAI,SAAC3C,EAAO8H,GACpB,OACI,4BAAQhF,IAAK9C,EAAOgI,MAAOlH,SAASgH,IAC/B9H,QAMrB,kBAACoU,GAAA,EAAD,CAAQhX,QAAQ,WAAWT,QAnCR,WACnBke,IACAlK,EAAY/P,EAAmBZ,GAC/Bya,EAAU,CACRlX,QAASrH,EAAMkK,SACfpF,OAAQ2P,EAAU3P,OAClBC,OAAQ0P,EAAU1P,WA6BpB,gBAGE,kBAACvE,EAAA,EAAD,CAAMG,UAAWN,EAAQge,aACnB,kBAACrd,EAAA,EAAD,CAAYE,QAAQ,MAApB,aAAoC2d,WAAWL,GAAYrF,QAAQ,KAEzE,kBAAC3Y,EAAA,EAAD,CAAMG,UAAWN,EAAQge,aACrB,kBAACrd,EAAA,EAAD,CAAYE,QAAQ,MAApB,yBACyC,GAAxCoH,EAA8BgU,OAC3B,kBAACtb,EAAA,EAAD,qCACAsH,EAA8B7B,KAAI,SAAAqY,GAEpC,OADAlZ,QAAQC,IAAIiZ,GACJ,4CAAkBA,EAAOC,SAAzB,0BAA0DD,EAAOE,YAG/E,kBAACxe,EAAA,EAAD,CAAMG,UAAWN,EAAQge,aACrB,kBAACrd,EAAA,EAAD,CAAYE,QAAQ,MAApB,0BACyC,GAAxCoH,EAA8BgU,OAC3B,kBAACtb,EAAA,EAAD,qCACAuH,EAA+B9B,KAAI,SAAAqY,GACrC,OAAQ,0CAAgBA,EAAO5U,SAAvB,0BAAwD4U,EAAOE,cEhHnF,SAASC,GAASjf,GAAQ,IAChBkf,EAA+Clf,EAA/Ckf,SAAUpT,EAAqC9L,EAArC8L,MAAOF,EAA8B5L,EAA9B4L,MAAoBuT,GAAUnf,EAAvBkK,SADT,YACgClK,EADhC,0CAGvB,OACE,uCACEof,KAAK,WACLC,OAAQvT,IAAUF,EAClBgL,GAAE,8BAAyBhL,GAC3B0T,kBAAA,yBAAmC1T,IAC/BuT,GAEHrT,IAAUF,GACT,kBAAC2T,EAAA,EAAD,CAAKC,EAAG,GACN,8BAAON,KAajB,SAASO,GAAU7T,GACjB,MAAO,CACLgL,GAAG,kBAAD,OAAoBhL,GACtB,gBAAgB,uBAAhB,OAAwCA,IAI5C,IAAMnM,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACvC1B,KAAM,CACJ0C,gBAAiBhB,EAAMO,QAAQmE,WAAWhE,MAC1C+D,MAAO,YAII,SAAS4Z,GAAc1f,GACjBA,EAAZkK,SADqC,IAEtC7J,EAAUZ,KACV4B,EAAQse,cAH6B,EAIjBC,IAAMvL,SAAS,GAJE,mBAIpCvI,EAJoC,KAI7B+T,EAJ6B,KAc3C,OACE,yBAAKlf,UAAWN,EAAQV,MACtB,kBAACmgB,EAAA,EAAD,CAAQ9Z,SAAS,SAAS5E,MAAM,WAC9B,kBAAC2e,EAAA,EAAD,CACEjU,MAAOA,EACP+K,SAba,SAACU,EAAOyI,GAC3BH,EAASG,IAaHC,eAAe,UACfC,UAAU,UACVhf,QAAQ,YACR0Z,aAAW,0BACXuF,UAAQ,GAER,kBAACC,EAAA,EAAD,eAAKjgB,MAAM,QAAWsf,GAAU,KAChC,kBAACW,EAAA,EAAD,eAAKjgB,MAAM,uBAA0Bsf,GAAU,KAC/C,kBAACW,EAAA,EAAD,eAAKjgB,MAAM,aAAgBsf,GAAU,OAGzC,kBAAC,IAAD,CACEY,KAA0B,QAApBhf,EAAM6V,UAAsB,YAAc,IAChDtL,MAAOE,EACPwU,cAxBoB,SAAC1U,GACzBiU,EAASjU,KAyBL,kBAACqT,GAAD,CAAUnT,MAAOA,EAAOF,MAAO,EAAG2U,IAAKlf,EAAM6V,WAE3C,kBAAC,GAAD,CAAUhN,SAAUlK,EAAMkK,YAE5B,kBAAC+U,GAAD,CAAUnT,MAAOA,EAAOF,MAAO,EAAG2U,IAAKlf,EAAM6V,WAC3C,kBAAC,GAAD,CAAuBhN,SAAUlK,EAAMkK,SAAUiQ,KAAMna,EAAMma,OAC7D,kBAAC,GAAD,CAASjQ,SAAUlK,EAAMkK,YAE3B,kBAAC+U,GAAD,CAAUnT,MAAOA,EAAOF,MAAO,EAAG2U,IAAKlf,EAAM6V,WAC3C,kBAAC,GAAD,CAAauE,SAAS,KAAKvR,SAAUlK,EAAMkK,c,kCC9F/CzK,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrCmf,iBAAkB,CACdpe,OAAQ,mBAEZgZ,MAAO,CACHtV,MAAO,MACPyN,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXzN,SAAU,WACV3D,gBAAiBhB,EAAMO,QAAQmE,WAAWhE,MAC1C2R,OAAQ,iBACRC,UAAWtS,EAAMuS,QAAQ,GACzBnS,QAASJ,EAAMK,QAAQ,EAAG,EAAG,QAoHtB+e,GA/GU,WACrB,IAAMpgB,EAAUZ,KADW,EAEW4U,oBAAS,GAFpB,mBAEpBqM,EAFoB,KAEPC,EAFO,OAGetM,mBAAS,YAHxB,mBAGpBuM,EAHoB,KAGLC,EAHK,OAIGxM,mBAAS,IAJZ,mBAIpBjN,EAJoB,KAIX0S,EAJW,OAKKzF,mBAAS,GALd,mBAKpByH,EALoB,KAKVC,EALU,OAMW1H,mBAAS,GANpB,mBAMpByM,EANoB,KAMP1D,EANO,OAOO/I,mBAAS,GAPhB,mBAOpB0M,EAPoB,KAOT1D,EAPS,OAQWhJ,mBAAS,GARpB,mBAQpBuJ,EARoB,KAQPN,EARO,OASOjJ,mBAAS,GAThB,mBASpBwJ,EAToB,KASTN,EATS,KAWrBtT,EAAuBsL,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAW9F,wBACrEO,EAAuB+K,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAWvF,wBACrEyF,EAAaqF,yBAAc,SAAAjM,GAAK,OAAIA,EAAMkE,KAAK0C,cAC/CE,EAAUoF,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ4E,KAAK4C,WAClDQ,EAAmB4E,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ4E,KAAKoD,oBAM3DqQ,EAAe,SAACzJ,GAClBuC,EAAWvC,EAAMC,OAAO1L,QAGtBmV,EAAe,SAAC1J,GAClBwE,EAAYxE,EAAMC,OAAO1L,QAGvBoV,EAAoB,WACtBP,GAAgBD,IAGdS,EAAe,yCAAG,uBAAAtY,EAAA,yDACpBjD,QAAQC,IAAI,CACRqE,SAAU+F,EAAW/F,SACrBC,KAAM8F,EAAWQ,UACjBrG,IAAK6F,EAAW7F,IAChB7C,QAASH,EACTiD,MAAOzF,SAASkX,KAEC,YAAjB8E,EARgB,gCASV3W,EAAqB,CACvBC,SAAU+F,EAAW/F,SACrBC,KAAM8F,EAAWQ,UACjBrG,IAAK6F,EAAW7F,IAChB7C,QAASH,EACTiD,MAAOzF,SAASkX,KAdJ,OAgBhB3L,EAAQF,EAAW/F,UACnByG,EAAiBV,EAAW/F,UAjBZ,0BAmBM,YAAjB0W,EAnBW,kCAoBVpW,EAAqB,CACnBN,SAAU+F,EAAW/F,SACrBC,KAAM8F,EAAWQ,UACjBrG,IAAK6F,EAAW7F,IAChB7C,QAASH,EACTiD,MAAOzF,SAASkX,GAChBrR,UAAWqW,EACXpW,UAAWqW,EACXpW,UAAWiT,EACXhT,UAAWiT,IA7BH,QA+BhB1N,EAAQF,EAAW/F,UACnByG,EAAiBV,EAAW/F,UAhCZ,QAkCpBgX,IAlCoB,4CAAH,qDAqCrB,OAEI,kBAACxe,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACjC,UAAWN,EAAQmgB,iBAAkB3d,GAAM,IAClD,kBAAC7B,EAAA,EAAD,iCAGA,kBAACkX,GAAA,EAAD,CAAQ9W,MAAQ,UAAUF,QAAS,YAAYT,QAAWygB,GAA1D,gBAGA,kBAAClgB,EAAA,EAAD,gEAIJ,kBAACwb,GAAA,EAAD,CACId,KAAMgF,EACNjE,QAASyE,GACT,kBAAC1gB,EAAA,EAAD,CAAMG,UAAWN,EAAQ+a,OACrB,kBAACjE,EAAA,EAAD,CAAahW,UAAU,YACnB,kBAACiY,EAAA,EAAD,CAAWjY,UAAU,UAArB,qBACA,kBAACigB,GAAA,EAAD,CAAYtV,MAAO8U,EAAe/J,SAzExB,SAACU,GAC3BsJ,EAAiBtJ,EAAMC,OAAO1L,SAyEV,kBAACwN,EAAA,EAAD,CAAkBxN,MAAM,WAAWyN,QAAS,kBAAC8H,GAAA,EAAD,MAAWlhB,MAAM,cAC7D,kBAACmZ,EAAA,EAAD,CAAkBxN,MAAM,WAAWyN,QAAS,kBAAC8H,GAAA,EAAD,MAAWlhB,MAAM,eAEjE,kBAACmhB,GAAA,EAAD,mCAEgB,aAAlBV,EACF,oCACA,kBAAC,GAAD,CAAc5G,WAAcgH,EAAc/G,YAAagH,EAAc/G,eAAgB6B,EAAa5B,KAAqB,YAAfyG,EAA2BzgB,MAAQ,uCAC3I,kBAAC,GAAD,CAAcid,eAAgBA,EAAgBC,aAAcA,EAAcC,eAAgBA,EAAgBC,aAAcA,KAExH,oCACA,kBAAC,GAAD,CAAcvD,WAAcgH,EAAc/G,YAAagH,EAAc/G,eAAgB6B,EAAa5b,MAAQ,wCAE1G,kBAAC+X,GAAA,EAAD,CAAQ9W,MAAM,UAAUX,QAAS0gB,GAAjC,yBCpHd1hB,GAAYC,YAAW,CACzBC,KAAM,CACFyC,OAAQ,mBAEZmf,OAAQ,CACJvf,QAAS,eACTI,OAAQ,QACRqR,UAAW,cAEf3S,MAAO,CACH0gB,SAAU,IAEdC,IAAK,CACD7H,aAAc,IAElBrX,OAAQ,CACJqX,aAAc,GACdpY,WAAY,OACZ8Z,YAAa,OACbxV,MAAO,OACPnE,UAAW,YAyCJ+f,GArCQ,WACnB,IAAMrhB,EAAUZ,KAGVyK,EAFSyX,cAESzX,SAClB0X,EAAgBrM,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ4E,KAAK4C,WACxDF,EAAaqF,yBAAc,SAAAjM,GAAK,OAAIA,EAAMkE,KAAK0C,cAOrD,OALAuF,qBAAU,WAEN,OADAoM,EAAc1X,GACP,eACR,IAEC+F,EAAW4R,SAEP,6BACI,kBAACnf,EAAA,EAAD,CAAMC,WAAS,EAAChC,UAAWN,EAAQV,MACnC,kBAACa,EAAA,EAAD,CAAMG,UAAWN,EAAQkC,QACrB,kBAACxB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYE,QAAQ,KAAKC,UAAU,MAAnC,mBACqB8O,EAAWiN,aAAe,sBAAwB,yBAI3E,kBAACxa,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAAC,GAAD,CAAUqH,SAAYA,EAAUiQ,KAAMlK,EAAWiN,kBAO7D,kBAAC,GAAD,OC3DG4E,GARC,WACZ,OACI,kBAAC9gB,EAAA,EAAD,CAAYE,QAAQ,MAApB,aCGFzB,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrC0gB,KAAM,CACFxgB,UAAWF,EAAMK,QAAQ,GACzBkY,aAAcvY,EAAMK,QAAQ,IAEhC7B,MAAO,CACHC,OAAQ,KAEZ6C,UAAW,CACPpB,UAAWF,EAAMK,QAAQ,GACzBM,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBvC,KAAM,CACF8B,QAAS,UACTO,QAAS,OACTE,WAAY,SACZ4D,MAAO,KAEXkc,MAAO,CACHxgB,WAAYH,EAAMK,QAAQ,GAC1BugB,KAAM,GAEVC,WAAY,CACRzgB,QAAS,IAEb0gB,QAAS,CACLriB,OAAQ,GACRsC,OAAQ,GAEZggB,UAAW,CACPhgB,OAAQf,EAAMK,QAAQ,QAuDf2gB,GAnDM,WACjB,IAAMhiB,EAAUZ,KAIV6iB,EAAmB,CACzB,CACInY,KAAM,sBACNoY,WAAW,EACXC,KAAM,oBACNpiB,YAAa,uCACbqiB,UAAW,qFAEf,CACItY,KAAM,qBACNoY,WAAW,EACXC,KAAM,UAbGlN,yBAAc,SAAAjM,GAAK,OAAIA,EAAMkE,KAAK0C,cAapB/F,SAAW,mBAClC9J,YAAa,8BACbqiB,UAAW,gGAIf,OACI,kBAAC/f,EAAA,EAAD,CAAMC,WAAS,EAACjB,QAAS,GACpB4gB,EAAiB7b,KAAI,SAACic,GAAD,OAClB,kBAAChgB,EAAA,EAAD,CAAMkE,IAAK+V,eAAM/Z,MAAI,EAACC,GAAI,GACtB,kBAACrC,EAAA,EAAD,CAAMG,UAAWN,EAAQ0hB,KAAM7gB,QAAQ,WAAW4E,MAAO,GACrD,kBAAClF,EAAA,EAAD,CAAgBO,UAAWwhB,IAAMC,GAAIF,EAAgBF,KAAMK,MAAO,CAAEC,eAAgB,SAChF,kBAACjiB,EAAA,EAAD,CACIF,UAAWN,EAAQR,MACnBK,MAAOwiB,EAAgBD,YAE3B,kBAAC1hB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC3CuhB,EAAgBvY,MAErB,kBAACnJ,EAAA,EAAD,CAAYE,QAAQ,QAAQC,UAAU,KACjCuhB,EAAgBtiB,aAErB,kBAAC8X,GAAA,EAAD,CAAQ6K,KAAK,QAAQ3hB,MAAM,WAA3B,uB,UC7E1B3B,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrC0gB,KAAM,CACFxgB,UAAWF,EAAMK,QAAQ,GACzBkY,aAAcvY,EAAMK,QAAQ,IAEhC7B,MAAO,CACHC,OAAQ,KAEZ6C,UAAW,CACPpB,UAAWF,EAAMK,QAAQ,IACzBM,QAAS,OACTC,cAAe,SACfC,WAAY,cAcL8gB,GAVE,WACb,IAAM3iB,EAAUZ,KAChB,OACI,kBAACwjB,GAAA,EAAD,CAAW9hB,UAAU,OAAOvB,SAAS,KAAKe,UAAWN,EAAQsC,WACzD,kBAAC,GAAD,MACA,kBAAC,GAAD,QCdGugB,GAVI,SAACljB,GACD2hB,cAAP/K,GAER,OACI,yBAAKjW,UAAU,eAAf,wBCIOwiB,GARI,WACf,OACI,6BACI,kBAAC,GAAD,Q,uECCN1jB,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACvC1B,KAAM,CAEJ4B,UAAW,KAEb1B,MAAO,CACLC,OAAQ,KAEV6C,UAAW,CACTpB,UAAWF,EAAMK,QAAQ,IACzBM,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdkZ,MAAO,CACLrH,SAAU,IACV/R,QAAS,OACTP,QAASJ,EAAMK,QAAQ,GACvBQ,WAAY,SACZkhB,eAAgB,UAGlBrhB,MAAO,CACL+D,MAAO,IACPzD,gBAAiBhB,EAAMO,QAAQmE,WAAWhE,MAC1C2R,OAAQ,iBACRC,UAAWtS,EAAMuS,QAAQ,GACzBnS,QAASJ,EAAMK,QAAQ,EAAG,EAAG,IAE/BiY,UAAW,CACTvX,OAAQf,EAAMK,QAAQ,GACtBF,WAAY,OA0ID6hB,GAtIM,WACnB,IAAMhjB,EAAUZ,KACV2O,EAAgBkH,yBAAc,SAAAjM,GAAK,OAAIA,EAAM8B,KAAKiD,iBAClDe,EAAmBoG,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQwC,KAAKgE,oBAC3DE,EAAiBkG,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQwC,KAAKkE,kBACzDG,EAAkB+F,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQwC,KAAKqE,mBALvC,EAOD6E,oBAAS,GAPR,mBAOlBqH,EAPkB,KAOZC,EAPY,OAQuBtH,oBAAS,GARhC,mBAQlBiP,EARkB,KAQAC,EARA,OASmBlP,mBAAS,IAT5B,mBASlBmP,EATkB,KASFC,EATE,OAUqBpP,mBAAS,GAV9B,mBAUlBqP,EAVkB,KAUDC,EAVC,KAYzBnO,qBAAU,WAER,OADArG,IACO,eACN,IAEH,IAYMgF,EAAa,WACjBwH,GAAQ,IA+BV,OACE,6BACE,kBAACsH,GAAA,EAAD,CAAW9hB,UAAU,OAAOvB,SAAS,KAAKe,UAAWN,EAAQsC,WAC3D,kBAAC3B,EAAA,EAAD,CAAYE,QAAQ,KAAK0V,GAAG,cAA5B,mBACA,kBAACsB,GAAA,EAAD,CAAQhX,QAAQ,YAAYE,MAAM,UAAUX,QAhD7B,WACnBgjB,EAAkB,IAClBF,GAAoB,GACpB5H,GAAQ,KA6CJ,kBACA,kBAACiI,GAAA,EAAD,CAAOhJ,aAAW,qBAChB,kBAACiJ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KA9DqB,CAAC,WAAY,aAAc,QA+DtBrd,KAAI,SAACsd,GAAD,OAC1B,kBAACC,GAAA,EAAD,KAAYD,QAIlB,kBAACE,GAAA,EAAD,KACG7V,EAAc3H,KAAI,SAACoU,GAAD,OACjB,kBAACiJ,GAAA,EAAD,CAAUld,IAAKiU,EAAKtT,SAClB,kBAACyc,GAAA,EAAD,KACGnJ,EAAKtT,SAER,kBAACyc,GAAA,EAAD,KACGnJ,EAAKtL,YAER,kBAACyU,GAAA,EAAD,KACE,kBAACjH,GAAA,EAAD,CAAYC,KAAK,MAAMpC,aAAW,OAAOna,QAAS,kBA7D3C8G,EA6D+DsT,EAAKtT,QA5DzFkc,EAAkBlc,GAClBgc,GAAoB,QACpB5H,GAAQ,GAHY,IAACpU,IA8DL,kBAAC,KAAD,eASd,kBAACiV,GAAA,EAAD,CACEd,KAAMA,EACNe,QAAStI,EACTxT,UAAWN,EAAQ+a,OACnB,kBAAC5a,EAAA,EAAD,CAAMG,UAAWN,EAAQ0B,OACvB,kBAACf,EAAA,EAAD,CAAY4V,GAAG,qBAAqB1V,QAAQ,MAAMoiB,EAAmB,iBAAmB,mBACxF,kBAACxI,GAAA,EAAD,CACE5Z,QAAQ,WACRf,MAAM,WACNoa,UAAQ,EACRC,WAAS,EACTS,UAAWqI,EACX1M,GAAG,iBACHmE,aAAa,iBACbC,WAAS,EACTkJ,aAAcV,EACd7iB,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAWkM,EAAkBlM,EAAMC,OAAO1L,UAEtD,kBAACgP,GAAA,EAAD,CACE5Z,QAAQ,WACRf,MAAM,aACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,kBACHmE,aAAa,kBACbC,WAAS,EACTra,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAWoM,EAAmBpM,EAAMC,OAAO1L,UAEtDwX,EACG,kBAACpL,GAAA,EAAD,CAAQhX,QAAQ,YAAYE,MAAM,UAAUX,QA5FvC,SAAC2I,GAChBiG,EAAe,CACb,SAAYmU,EACZ,WAAcE,IAEb7Y,MAAK,SAACC,GACLqJ,IACAhF,OAEDnB,OAAM,SAACsC,GACN1K,QAAQC,IAAIyK,QAkFN,OACA,kBAAC4H,GAAA,EAAD,CAAQhX,QAAQ,YAAYE,MAAM,UAAUX,QA/ErC,SAAC2I,GAClBoG,EAAgB,CACd,SAAYgU,EACZ,WAAcE,IAEb7Y,MAAK,SAACC,GACLqJ,IACAhF,OAEDnB,OAAM,SAACsC,GACN1K,QAAQC,IAAIyK,QAqEN,YCpKR7Q,GAAYC,YAAW,CACzBykB,QAAS,CACLre,MAAO,IACPhG,OAAQ,IACRsC,OAAQ,eACR2D,WAAY,SAEhBlG,MAAO,CACHC,OAAQ,OACRgG,MAAO,UAiBAse,GAbI,SAACpkB,GAChB,IAAMK,EAAUZ,KAChB,OACI,6BACI,kBAACod,GAAA,EAAD,CAAQlc,UAAWN,EAAQ8jB,SACvB,uBAAGE,KAAMrkB,EAAMqkB,MACX,yBAAK1jB,UAAWN,EAAQR,MAAOykB,IAAKtkB,EAAMukB,U,qBCjBxD9kB,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrCsY,UAAW,CACPpY,UAAWF,EAAMK,QAAQ,GACzBkY,aAAcvY,EAAMK,QAAQ,IAEhCuF,OAAQ,CACJ7E,OAAQf,EAAMK,QAAQ,QAsGf8iB,GAlGG,SAACxkB,GAAW,IACrBmU,EAAcnU,EAAdmU,WACD9T,EAAUZ,KACV+Q,EAAW+E,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ4E,KAAKiD,YACnDP,EAAaqF,yBAAc,SAAAjM,GAAK,OAAIA,EAAMkE,KAAK0C,cAJ1B,EAKeoE,mBAASpE,EAAWQ,WALnC,mBAKpBgU,EALoB,KAKLC,EALK,OAMGrQ,mBAASpE,EAAW7F,KANvB,mBAMpBua,EANoB,KAMXC,EANW,KAQrBnJ,EAAWxL,EAAW4U,aAAe5U,EAAW4R,SAAW,OAAS5R,EAAW4R,SAAW,YAAc,WAsC9G,OACE,8BACI,kBAAC/G,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,4CACNoa,UAAQ,EACRC,WAAS,EACTS,UAAQ,EACRrE,GAAG,WACHmE,aAAa,WACbmJ,aAAcjU,EAAW/F,SACzB4a,WAAS,EACT9J,WAAS,EACTra,UAAWN,EAAQsZ,YAEvB,kBAACmB,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,kBACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,gBACHmE,aAAa,gBACbmJ,aAAcjU,EAAWQ,UACzBuK,WAAS,EACTra,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAWmN,EAAiBnN,EAAMC,OAAO1L,UAGvD,kBAACgP,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,WACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,UACHmE,aAAa,UACbF,KAAK,SACLqJ,aAAcjU,EAAW7F,IACzB4Q,WAAS,EACTra,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAWqN,EAAWrN,EAAMC,OAAO1L,UAEjD,kBAACoM,GAAA,EAAD,CAAQvX,UAAWN,EAAQ4G,OACvB/F,QAAQ,YACRE,MAAM,UACNX,QAAS,iBA7EA,aAAbgb,EACAjL,EAAS,CACLtG,SAAU+F,EAAW/F,SACrBuG,UAAWgU,EACXra,IAAKua,EACLjU,SAAU,aAEM,cAAb+K,EACPjL,EAAS,CACLtG,SAAU+F,EAAW/F,SACrBuG,UAAWgU,EACXra,IAAKua,EACLjU,SAAU,eAGdF,EAAS,CACLtG,SAAU+F,EAAW/F,SACrBuG,UAAWgU,EACXra,IAAKua,EACLjU,SAAU,cAEdF,EAAS,CACLtG,SAAU+F,EAAW/F,SACrBuG,UAAWgU,EACXra,IAAKua,EACLjU,SAAU,mBAIlByD,MA6CI,2BC3FF1U,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrC1B,KAAM,CACFia,aAAc,GACdnY,QAAS,GACTyE,UAAW,KAGf6e,gBAAiB,CACb3iB,OAAQ,gBAEZ4iB,YAAa,CACTpL,aAAc,IAElBwB,MAAO,CACHtV,MAAO,MACPyN,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXzN,SAAU,WACV3D,gBAAiBhB,EAAMO,QAAQmE,WAAWhE,MAC1C2R,OAAQ,iBACRC,UAAWtS,EAAMuS,QAAQ,GACzBnS,QAASJ,EAAMK,QAAQ,EAAG,EAAG,QA6GtBujB,GA1GE,SAACjlB,GACd,IAAMK,EAAUZ,KAEVyK,EAAWlK,EAAMkK,SAIjByG,EAAmB4E,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ4E,KAAKoD,oBAC3DT,EAAgBoF,yBAAc,SAAAjM,GAAK,OAAIA,EAAMkE,KAAK2C,iBAElDgV,GADa5P,yBAAc,SAAAjM,GAAK,OAAIA,EAAMkE,KAAK0C,cAC/BsF,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAWlD,cAC9D3E,EAAaoN,yBAAc,SAAAjM,GAAK,OAAIA,EAAM0G,WAAW7H,cAG3DsN,qBAAU,WAGN,OAFA7E,EAAiBzG,GACjBgb,EAAchb,GACP,eACR,IAlBqB,MAoBAmK,oBAAS,GApBT,mBAoBjBqH,EApBiB,KAoBXC,EApBW,KAsBlBwJ,EAAc,WAChBxJ,GAASD,IAKb,MAAsB,aAAlB1b,EAAMgC,QAEF,6BACI,kBAACxB,EAAA,EAAD,CAAMC,QAAS,kBAAM0kB,KAAexkB,UAAWN,EAAQV,MACnD,kBAAC+C,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAAC,GAAD,CAAY0hB,IAAKa,QAErB,kBAAC1iB,EAAA,EAAD,CAAME,MAAI,EAACjC,UAAWN,EAAQ0kB,iBAC1B,wBAAIpkB,UAAWN,EAAQ2kB,aAAvB,IAAsC9U,EAAchG,UACpD,wBAAIvJ,UAAWN,EAAQ2kB,aAAvB,KAAuC9U,EAAcO,UAArD,KACA,qCAAWP,EAAc9F,KACzB,6EAKZ,kBAACoS,GAAA,EAAD,CACQd,KAAMA,EACNe,QAAS0I,GACT,kBAAC3kB,EAAA,EAAD,CAAMG,UAAWN,EAAQ+a,OACrB,kBAAC,GAAD,CAAWjH,WAAYgR,OAMrB,wBAAlBnlB,EAAMgC,QAEF,6BACI,kBAACxB,EAAA,EAAD,CAAMG,UAAWN,EAAQV,MACrB,kBAAC+C,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAAC,GAAD,CAAY0hB,IAAKa,QAErB,kBAAC1iB,EAAA,EAAD,CAAME,MAAI,EAACjC,UAAWN,EAAQ0kB,iBAC1B,wBAAIpkB,UAAWN,EAAQ2kB,aAAvB,IAAsC9U,EAAchG,SAApD,KAAgEgG,EAAcO,UAA9E,KACA,qCAAWP,EAAc9F,KACzB,gDAAsB8F,EAAcgN,aAAe,aAAe,cAClE,wCAAgC,MAAlBhV,EAAWmd,IAAc,mBAAqBxG,WAAW3W,EAAWmd,KAAKlM,QAAQ,GAA/F,SAQhB,6BACI,kBAAC3Y,EAAA,EAAD,CAAMC,QAAS,kBAAM0kB,KAAexkB,UAAWN,EAAQV,MACnD,kBAAC+C,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAAC,GAAD,CAAY0hB,IAAKa,QAErB,kBAAC1iB,EAAA,EAAD,CAAME,MAAI,EAACjC,UAAWN,EAAQ0kB,iBAC1B,wBAAIpkB,UAAWN,EAAQ2kB,aAAvB,IAAsC9U,EAAchG,SAApD,KAAgEgG,EAAcO,UAA9E,KACA,qCAAWP,EAAc9F,KACzB,gDAAsB8F,EAAcgN,aAAe,aAAe,cAClE,wCAAgC,MAAlBhV,EAAWmd,IAAc,mBAAqBxG,WAAW3W,EAAWmd,KAAKlM,QAAQ,GAA/F,KACA,6EAKZ,kBAACqD,GAAA,EAAD,CACQd,KAAMA,EACNe,QAAS0I,GACT,kBAAC3kB,EAAA,EAAD,CAAMG,UAAWN,EAAQ+a,OACrB,kBAAC,GAAD,CAAWjH,WAAYgR,QCzHvD,SAASlG,GAASjf,GAAQ,IAChBkf,EAAqClf,EAArCkf,SAAUpT,EAA2B9L,EAA3B8L,MAAOF,EAAoB5L,EAApB4L,MAAUuT,EADZ,YACsBnf,EADtB,8BAGvB,OACE,uCACEof,KAAK,WACLC,OAAQvT,IAAUF,EAClBgL,GAAE,4BAAuBhL,GACzB0T,kBAAA,uBAAiC1T,IAC7BuT,GAEHrT,IAAUF,GACT,kBAAC2T,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACxe,EAAA,EAAD,KAAake,KAoBvB,IAAMzf,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACvC1B,KAAM,CACJ2B,SAAU,EACVe,gBAAiBhB,EAAMO,QAAQmE,WAAWhE,MAC1CC,QAAS,OACTlC,OAAQuB,EAAMK,QAAQ,KAExB4jB,KAAM,CACJC,YAAY,aAAD,OAAelkB,EAAMO,QAAQugB,cAI7B,SAASqD,KACtB,IAAMnlB,EAAUZ,KAD+B,EAErBmgB,IAAMvL,SAAS,GAFM,mBAExCvI,EAFwC,KAEjC+T,EAFiC,OAGrBxL,oBAAS,IAAIlR,MAAOE,YAHC,mBAIzCwE,GAJyC,UAI5ByN,yBAAc,SAAAjM,GAAK,OAAIA,EAAM0G,WAAWlI,eACrDiC,EAAgByL,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAWjG,iBAChE8B,EAAQ,EACR6Z,EAAW,EAWf,OALAjQ,qBAAU,WAER,OADA1L,IACO,eACN,IAGD,yBAAKnJ,UAAWN,EAAQV,MACtB,kBAACogB,EAAA,EAAD,CACE2F,YAAY,WACZxkB,QAAQ,aACR4K,MAAOA,EACP+K,SAfe,SAACU,EAAOyI,GAC3BH,EAASG,IAeLpF,aAAW,wBACXja,UAAWN,EAAQilB,MAEpBzd,EAAWpB,KAAI,SAACkf,GACf,OACE,kBAACvF,EAAA,EAAD,eAAKxZ,IAAK+e,EAAUzb,SAAU/J,MAAOwlB,EAAUzb,UAjDzD,SAAmB0B,GACjB,MAAO,CACLgL,GAAG,gBAAD,OAAkBhL,GACpB,gBAAgB,qBAAhB,OAAsCA,IA8C6B6T,CAAU7T,WAI1E/D,EAAWpB,KAAI,SAACkf,GACf,OACE,kBAAC,GAAD,CAAU/e,IAAK+e,EAAUzb,SAAU4B,MAAOA,EAAOF,MAAO6Z,KAClD,kBAAC,GAAD,CAAUzjB,QAAS,YAAakI,SAAUyb,EAAUzb,WACpD,kBAAC,GAAD,CAAauR,SAAS,QAAQvR,SAAUyb,EAAUzb,WAElD,kBAAC,GAAD,CAASA,SAAUyb,EAAUzb,gB,WCxFvCzK,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrC+c,WAAY,CACR3c,QAASJ,EAAMK,QAAQ,IAE3BoS,YAAa,CACT1R,OAAQf,EAAMK,QAAQ,GACtBF,WAAY,EACZoY,aAAcvY,EAAMK,QAAQ,IAEhCkkB,aAAc,CACVnkB,QAASJ,EAAMK,QAAQ,QAiJhBmkB,GA7IO,WAClB,IAAMxlB,EAAUZ,KADQ,EAEI4U,mBAAS,kBAFb,mBAEjByR,EAFiB,KAETC,EAFS,OAGE1R,oBAAS,IAAIlR,MAAOE,YAHtB,mBAGjBS,EAHiB,KAGV2a,EAHU,OAIcpK,mBAAS,GAJvB,mBAIjB2R,EAJiB,KAIJC,EAJI,KAKpB3T,EAAkBgD,yBAAc,SAAAjM,GAAK,OAAIA,EAAMgJ,MAAMC,mBACrDC,EAAkB+C,yBAAc,SAAAjM,GAAK,OAAIA,EAAMgJ,MAAME,mBACnDQ,EAAqBwC,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ0J,MAAMU,sBAC9DG,EAAqBqC,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ0J,MAAMa,sBAC9DgT,EAAiB,CACnBC,IAAK,iBACLC,SAAU,uBACVC,SAAU,wBAMd7Q,qBAAU,WAIN,OAHAzC,EAAmBrO,EAAmBZ,IACtCoP,EAAmBxO,EAAmBZ,IACtCwiB,EAAkBJ,EAAeC,KAC1B,eACR,IAEH,IAAMG,EAAoB,SAACzL,GACvB,IAAI0L,EAAY,EACZ1L,GAAQqL,EAAeE,UAAYvL,GAAQqL,EAAeC,KAC1D7T,EAAgBzG,SAAQ,SAAS2a,GAC7BD,GAAa1H,WAAW2H,EAAG3c,WAG/BgR,GAAQqL,EAAeG,UAAYxL,GAAQqL,EAAeC,KAC1D5T,EAAgB1G,SAAQ,SAAS2a,GAC7BD,GAAa1H,WAAW2H,EAAG3c,WAGnCoc,EAAeM,IASb7H,EAAiB,yCAAG,WAAOnH,GAAP,UAAA1O,EAAA,sDACtB4V,EAASlH,EAAMC,OAAO1L,OACtBwa,EAAkBR,GAFI,2CAAH,sDAKjBW,EAAc,yCAAG,uBAAA5d,EAAA,sEACbkK,EAAmBrO,EAAmBZ,IADzB,uBAEboP,EAAmBxO,EAAmBZ,IAFzB,OAGnByO,EAAkB1E,GAAM2I,WAAWnE,MAAME,gBACzCD,EAAkBzE,GAAM2I,WAAWnE,MAAMC,gBAEzCgU,EAAkBR,GANC,2CAAH,qDAUpB,OACI,6BACI,kBAACpjB,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACrC,EAAA,EAAD,CAAMG,UAAWN,EAAQ+d,YACrB,kBAACpd,EAAA,EAAD,CAAYE,QAAQ,MAApB,kBAGA,kBAACiW,EAAA,EAAD,CAAaoD,UAAQ,EAACrZ,QAAQ,WAAWsZ,WAAS,EAAC7Z,UAAWN,EAAQyT,aAClE,kBAACsD,EAAA,EAAD,CAAYqD,QAAQ,gBAApB,gBACI,kBAACpD,EAAA,EAAD,CACIqD,QAAM,EACN5O,MAAOhI,EACP3D,MAAM,uBACN0W,SAAU6H,EACV/D,WAAY,CACRxQ,KAAM,QACNyM,GAAI,iBAhErB,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAC5D,OAAQ,SAAU,YAAa,UAAW,WAAY,YAkElBnQ,KAAI,SAAC3C,EAAO8H,GACpB,OACI,4BAAQhF,IAAK9C,EAAOgI,MAAOlH,SAASgH,IAC/B9H,QAMzB,kBAACoU,GAAA,EAAD,CAAQhX,QAAQ,WAAWT,QAASgmB,GAApC,gBAGA,kBAACtP,EAAA,EAAD,CAAaoD,UAAQ,EAACrZ,QAAQ,WAAWsZ,WAAS,EAAC7Z,UAAWN,EAAQyT,aAClE,kBAACsD,EAAA,EAAD,CAAYqD,QAAQ,yBAApB,yBACI,kBAACpD,EAAA,EAAD,CACIqD,QAAM,EACN5O,MAAOga,EACP3lB,MAAM,wBACN0W,SA5DP,SAACU,GACtB,IAAMsD,EAAOtD,EAAMC,OAAO1L,MAC1Bia,EAAUlL,GACVyL,EAAkBzL,IA0DUF,WAAY,CACRxQ,KAAM,SACNyM,GAAI,0BAGPgB,OAAO8O,KAAKR,GAAgBzf,KAAI,SAASkgB,EAASC,GAC/C,OACI,4BAAQhgB,IAAK+f,EAAS7a,MAAOoa,EAAeS,IACvCT,EAAeS,SAMxC,kBAACngB,EAAA,EAAD,CAAMqc,MAAO,CAAC3c,UAAU,IAAKD,SAAU,SAClC6f,GAAUI,EAAeE,UAAYN,GAAUI,EAAeC,IAE9D7T,EAAgB7L,KAAI,SAAC+f,GAClB,OACI,kBAAChmB,EAAA,EAAD,CAAMoG,IAAK4f,EAAGnf,QAAS1G,UAAWN,EAAQulB,cACrCY,EAAGnf,QADR,MACoBwX,WAAW2H,EAAG3c,QAAQsP,QAAQ,OAGrD,KACJ2M,GAAUI,EAAeG,UAAYP,GAAUI,EAAeC,IAC5D5T,EAAgB9L,KAAI,SAAC+f,GACpB,OACI,kBAAChmB,EAAA,EAAD,CAAMoG,IAAK4f,EAAGnf,QAAS1G,UAAWN,EAAQulB,cACrCY,EAAGnf,QADR,MACoBwX,WAAW2H,EAAG3c,QAAQsP,QAAQ,OAGrD,MAET,kBAACnY,EAAA,EAAD,CAAYE,QAAS,MAArB,mBAA2C8kB,EAA3C,UCrJlBvmB,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrC1B,KAAM,CACF4B,UAAWF,EAAMK,QAAQ,SAclB4c,GAVC,WACZ,IAAMje,EAAUZ,KAEhB,OACI,yBAAKkB,UAAWN,EAAQV,MACpB,kBAAC,GAAD,QCVNF,GAAYC,YAAW,CACzB8gB,iBAAkB,CACdpe,OAAQ,qBAeDykB,GAXY,WACzB,IAAMxmB,EAAUZ,KAEhB,OACE,yBAAKkB,UAAWN,EAAQmgB,kBACtB,kBAACgF,GAAD,Q,yCCXA/lB,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrCsY,UAAW,CACPpY,UAAWF,EAAMK,QAAQ,GACzBkY,aAAcvY,EAAMK,QAAQ,IAEhCuF,OAAQ,CACJ7E,OAAQf,EAAMK,QAAQ,QAKxBolB,GAAS,SAAC9mB,GAC0DA,EAA/Dmb,eAA+Dnb,EAA/C+mB,WADA,IACY5S,EAAmCnU,EAAnCmU,WAAY6S,EAAuBhnB,EAAvBgnB,UACzC3mB,GAFgB,YACgDL,EADhD,0DAENP,MAFM,EAGQ4U,mBAAS,IAHjB,mBAGflN,EAHe,KAGN8f,EAHM,OAIQ5S,mBAAS,IAJjB,mBAIfjN,EAJe,KAIN0S,EAJM,OAKMzF,mBAAS,GALf,mBAKf6S,EALe,KAKPC,EALO,OAMwB9S,mBAAS,IANjC,mBAMf+S,EANe,KAMEC,EANF,KAOhBlY,EAAmBoG,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQwC,KAAKgE,oBAC3Df,EAAgBkH,yBAAc,SAAAjM,GAAK,OAAIA,EAAM8B,KAAKiD,iBAWlDkZ,EAAoB,SAACle,IATV,SAACA,GACdpJ,EAAMmb,eAAe,CACjB,QAAWhU,EACX,QAAWC,EACX,OAAU8f,EACV,gBAAmBE,GACpBhe,GAIHme,CAASne,GACT+K,KAYJ,OATAqB,qBAAU,WAMN,OALArG,IACA8X,EAAWjnB,EAAM+mB,WAAW5f,SAC5B2S,EAAW9Z,EAAM+mB,WAAW3f,SAC5B+f,EAAUnnB,EAAM+mB,WAAWG,QAC3BG,EAAmBrnB,EAAM+mB,WAAWK,iBAC7B,eACR,IAGC,8BACI,kBAACtM,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,WACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,UACHmE,aAAa,UACbmJ,aAAclkB,EAAM+mB,WAAW5f,QAC/B2d,WAAS,EACT7J,SC9DD,UD8DW+L,EACVhM,WAAS,EACTra,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAW0P,EAAW1P,EAAMC,OAAO1L,UAEjD,kBAACqL,EAAA,EAAD,CAAaoD,UAAQ,EAACrZ,QAAQ,WAAWsZ,WAAS,EAAC7Z,UAAWN,EAAQyT,aAClE,kBAACsD,EAAA,EAAD,CAAYqD,QAAQ,4BAApB,YACI,kBAACpD,EAAA,EAAD,CACIqD,QAAM,EACN5O,MAAO1E,EACPjH,MAAM,WACN0W,SAAU,SAACU,GAAD,OAAWuC,EAAWvC,EAAMC,OAAO1L,QAC7C6O,WAAY,CACRxQ,KAAM,UACNyM,GAAI,6BAGR,4BAAQgE,aAAW,OAAO9O,MAAM,KAC/BsC,EAAc3H,KAAI,SAACoU,GAAD,OACX,4BAAQjU,IAAKiU,EAAKtT,QAASuE,MAAO+O,EAAKtT,SAClCsT,EAAKtT,cAK9B,kBAACuT,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,UACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,SACHmE,aAAa,SACbF,KAAK,SACLqJ,aAAclkB,EAAM+mB,WAAWG,OAC/BlM,WAAS,EACTra,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAW4P,EAAU5P,EAAMC,OAAO1L,UAGhD,kBAACgP,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,uBACNqa,WAAS,EACT5D,GAAG,kBACHmE,aAAa,kBACbmJ,aAAclkB,EAAM+mB,WAAWK,gBAC/BtC,WAAS,EACT9J,WAAS,EACTra,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAW8P,EAAmB9P,EAAMC,OAAO1L,UAEzD,kBAACoM,GAAA,EAAD,CAAQvX,UAAWN,EAAQ4G,OACvB/F,QAAQ,YACRE,MAAM,UACNX,QAAS,kBAAM6mB,EAAkBtnB,EAAMgnB,aAH3C,wBChHC,QDuHAhnB,EAAMgnB,UACH,kBAAC9O,GAAA,EAAD,CAAQvX,UAAWN,EAAQ4G,OACvB/F,QAAQ,YACRE,MAAM,YACNX,QAAS,kBAAM6mB,EC1HpB,YDuHC,cAMY,OAa5BR,GAAO5L,aAAe,CAClBC,eAAgB,WACZvV,QAAQC,IAAI,iDAEhBsO,WAAY,WACRvO,QAAQC,IAAI,uDAEhBkhB,WAAY,CACR5f,QAAS,GACTC,QAAS,GACT8f,OAAQ,EACRE,gBAAiB,IAErBJ,UCzJW,UD2JAF,UE7ITrnB,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrC1B,KAAM,CACF8B,QAAS,GACTyE,UAAW,IACXshB,SAAU,OACVpE,eAAgB,eAChBnd,SAAU,SACV5D,gBAAiBhB,EAAMO,QAAQmE,WAAWhE,OAE9C0lB,UAAW,CACPrlB,OAAQ,IAEZgZ,MAAO,CACHtV,MAAO,MACPyN,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXzN,SAAU,WACV3D,gBAAiBhB,EAAMO,QAAQmE,WAAWhE,MAC1C2R,OAAQ,iBACRC,UAAWtS,EAAMuS,QAAQ,GACzBnS,QAASJ,EAAMK,QAAQ,EAAG,EAAG,IAEjCyF,QAAS,CACLxF,UAAW,UAEf+lB,SAAU,CACN5hB,MAAO,OACPhG,OAAQ,SAwID6nB,GApIC,SAAC3nB,GAAW,IAAD,EACC4f,IAAMvL,UAAS,GADhB,mBAChBqH,EADgB,KACVC,EADU,OAEaiE,IAAMvL,SAAS,IAF5B,mBAEhBuT,EAFgB,KAEJC,EAFI,OAGWjI,IAAMvL,SDjD7B,UC8CY,mBAGhB2S,EAHgB,KAGLc,EAHK,KAKjBra,GADuBzN,EAAtBkK,SAJgB,YAIMlK,EAJN,cAKHuV,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQqH,UAAUvC,gBAC3DwC,EAAaqF,yBAAc,SAAAjM,GAAK,OAAIA,EAAMkE,KAAK0C,cAC/CE,EAAUoF,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ4E,KAAK4C,WAClDQ,EAAmB4E,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ4E,KAAKoD,oBAC3DoX,EAAcxS,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQwC,KAAKqD,gBACtDwZ,EAAYzS,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQwC,KAAKyD,UACpDE,EAAUyG,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQwC,KAAK2D,WAClDG,EAAYsG,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQwC,KAAK8D,aACtD9D,EAAOmK,yBAAc,SAAAjM,GAAK,OAAIA,EAAM8B,KAAKgD,qBACvC9N,EAAUZ,KAGVwoB,EAAY,WACdtM,GAAQ,IAGNxH,EAAU,yCAAG,uBAAAtL,EAAA,sDACf8S,GAAQ,GACRkM,EAAc,IAFC,2CAAH,qDAqEhB,OALArS,qBAAU,WAEN,OADAuS,EAAY/nB,EAAMkK,UACX,eACR,IAGC,6BACA,kBAAC1J,EAAA,EAAD,CAAMG,UAAWN,EAAQV,MACrB,4CACA,kBAACuoB,GAAA,EAAD,CAAUC,KAAM,EAAGC,WAAY,IAAKznB,UAAWN,EAAQqnB,UAClDvc,EAAK1E,KAAI,SAACoI,GACP,OACI,kBAACwZ,GAAA,EAAD,CAAczhB,IAAK+V,eAAMhc,UAAWN,EAAQonB,UAAWU,KAAM,EAAG1nB,QAAS,kBAlEzE0J,EAkE0F0E,EAAIvH,QAlExFuT,EAkEiGhM,EAAItH,QAlE/F6C,EAkEwGyE,EAAIlB,OAlEvG2a,EAkE+GzZ,EAAIjB,aAjEpJqa,IACAH,ED9EK,aC+ELD,EAAc,CACV1gB,QAASgD,EACT/C,QAASyT,EACTqM,OAAQ9c,EACRgd,gBAAiBkB,IAPN,IAACne,EAAM0Q,EAAMzQ,EAAKke,IAmEb,kBAAC,GAAD,CAAY/D,IAAKgE,KAAQlE,KAAK,MAC9B,wBAAI1jB,UAAWN,EAAQ8G,SAAvB,IAAkC0H,EAAIvH,QAAtC,UAIhB,kBAACkV,GAAA,EAAD,CACId,KAAMA,EACNe,QAAStI,GACT,kBAAC3T,EAAA,EAAD,CAAMG,UAAWN,EAAQ+a,OACrB,kBAAC,GAAD,CAAQ2L,WAAYa,EAAYzM,eAjElB,SAACqN,EAASpf,GACpC,GDzFO,UCyFHA,EAAkB,CAClB,IAAK6G,EAAW4U,YAaZ,OAZApX,EAAY,CACRvD,SAAU+F,EAAW/F,SACrBwD,UAAWuC,EAAWQ,UACtBrG,IAAK6F,EAAW7F,IAChB7C,QAASihB,EAAQphB,QACjBE,QAASkhB,EAAQrhB,QACjBwG,OAAQ6a,EAAQtB,OAChBtZ,aAAc4a,EAAQpB,kBAG1BjX,EAAQF,EAAW/F,eACnByG,EAAiBV,EAAW/F,UAIhC8d,EAAU,CACN9d,SAAUlK,EAAMkK,SAChB5C,QAASkhB,EAAQrhB,QACjBI,QAASihB,EAAQphB,QACjBuG,OAAQ6a,EAAQtB,OAChBtZ,aAAc4a,EAAQpB,kBD9GzB,QCiHDhe,GACA0F,EAAQ,CACJ5E,SAAUlK,EAAMkK,SAChB5C,QAASkhB,EAAQrhB,QACjBI,QAASihB,EAAQphB,QACjBuG,OAAQ6a,EAAQtB,OAChBtZ,aAAc4a,EAAQpB,kBDtHvB,UCyHHhe,GACA6F,EAAU,CACN/E,SAAUlK,EAAMkK,SAChB5C,QAASkhB,EAAQrhB,WA2B0DgN,WAAYA,EAAY6S,UAAWA,OAItH,kBAAChgB,EAAA,EAAD,CAAUC,QAAM,EAACxG,QArFG,WACpBwnB,IACAH,ED1EO,YC8JK,kBAAClL,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC,KAAD,QAGd5M,EAAW4U,YAKP,oCACF,kBAACrd,EAAA,EAAD,CACIC,QAAQ,0BANhB,oCACI,kBAACD,EAAA,EAAD,CACIC,QAAQ,oDC/JtBhI,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrC1B,KAAM,CACF8B,QAASJ,EAAMK,QAAQ,GACvBoE,MAAO,QAEXsV,MAAO,CACHtV,MAAO,MACPyN,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXzN,SAAU,WACV3D,gBAAiBhB,EAAMO,QAAQmE,WAAWhE,MAC1C2R,OAAQ,iBACRC,UAAWtS,EAAMuS,QAAQ,GACzBnS,QAASJ,EAAMK,QAAQ,EAAG,EAAG,IAEjCiY,UAAW,CACPpY,UAAWF,EAAMK,QAAQ,GACzBkY,aAAcvY,EAAMK,QAAQ,QAoIrB+mB,GAhIG,SAACzoB,GAAW,IACnBkK,EAAYlK,EAAZkK,SACD7J,EAAUZ,KAFS,EAGa4U,oBAAS,GAHtB,mBAGlBqU,EAHkB,KAGLC,EAHK,OAIOtU,mBAAS,IAJhB,mBAIlBuU,EAJkB,KAIRC,EAJQ,OAKGxU,mBAAS,GALZ,mBAKlBtH,EALkB,KAKV+b,EALU,OAMGzU,mBAAS,IANZ,mBAMlB5C,EANkB,KAMVsX,EANU,KAOnBjX,EAAkByD,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQpC,KAAKuL,mBAC1DN,EAAiB+D,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQpC,KAAKiL,kBACzDW,EAAcoD,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQpC,KAAK4L,eACtDf,EAAekE,yBAAc,SAAAjM,GAAK,OAAIA,EAAM9C,KAAK6K,gBAGvDoE,qBAAU,WAEN,OADA1D,EAAgB5H,GACT,eACR,IAEH,IAeM8e,EAAmB,WACrBL,GAAe,IAYnB,OACI,6BACI,kBAACnoB,EAAA,EAAD,CAAMqiB,MAAO,CAAC/c,MAAO,QAASnF,UAAWN,EAAQV,MAC7C,kBAAC6G,EAAA,EAAD,CAAMqc,MAAO,CAAC3c,UAAU,IAAKD,SAAU,SAC9BmL,EAAa3K,KAAI,SAACM,GACf,OAAQ,kBAACrE,EAAA,EAAD,CAAMkE,IAAK+V,gBACf,kBAAC3b,EAAA,EAAD,aACU+F,EAAIO,SAEd,kBAACtG,EAAA,EAAD,mBACgB+F,EAAIM,SAEpB,kBAACrG,EAAA,EAAD,kBACeuC,EAAYwD,EAAIjC,QAAQ8Z,qBADvC,OACiErb,EAAYwD,EAAIhC,QAAQ6Z,sBAEzF,kBAAC5d,EAAA,EAAD,aACwB,MAAd+F,EAAImL,OAAiB,UAAYnL,EAAImL,OAAS,WAAa,YAEpEnL,EAAImL,OACD,oCACA,kBAAClR,EAAA,EAAD,oBACiBuC,EAAYwD,EAAIhC,QAAU,IAAI5B,KAAS,YAAc,cAEtE,kBAACnC,EAAA,EAAD,sBACmB+F,EAAI2K,WAAa,oBAAsB,mBAEzD3K,EAAI2K,WACEnO,EAAYwD,EAAIhC,QAAU,IAAI5B,KACb,MAAd4D,EAAI0K,OACA,kBAACyG,GAAA,EAAD,CAAQ9W,MAAM,UAAUF,QAAQ,YAAYT,QAAS,kBA9C3E,SAACsG,GACrB4hB,GAAe,GACfE,EAAY9hB,GA4CwFkiB,CAAgBliB,KAA1E,iBACA,mBACJ,KACJ,kBAACmR,GAAA,EAAD,CAAQ9W,MAAM,UAAUF,QAAQ,YAAYT,QAAS,WA5DjE,IAACsY,EACvB5G,EAAY,CACRjL,SAFmB6R,EA4DwFhS,GA1D1FG,QACjBI,QAASyR,EAAQzR,QACjBC,QAASwR,EAAQxR,QACjBF,QAAS0R,EAAQ1R,QACjBvC,OAAQiU,EAAQjU,OAChBC,OAAQgU,EAAQhU,WAqDc,mBAEJ,KAEN,kBAAC/D,EAAA,EAAD,qFAOpB,kBAACwb,GAAA,EAAD,CACId,KAAMgN,EACNjM,QAASuM,GACT,kBAACxoB,EAAA,EAAD,CAAMG,UAAWN,EAAQ+a,OACrB,kBAACjE,EAAA,EAAD,CAAaoD,UAAQ,EAACrZ,QAAQ,WAAWsZ,WAAS,GAC9C,kBAACpD,EAAA,EAAD,CAAYqD,QAAQ,UAApB,UACA,kBAACpD,EAAA,EAAD,CACIqD,QAAM,EACN5O,MAAOiB,EACP5M,MAAM,SACN0W,SAAU,SAACU,GAAD,OAAWuR,EAAUvR,EAAMC,OAAO1L,SAE3C,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGrF,KAAI,SAACsG,GAAD,OACX,4BAAQnG,IAAKmG,EAAQjB,MAAOiB,GACvBA,QAKrB,kBAAC+N,GAAA,EAAD,CACIlE,GAAG,SACHzW,MAAM,oBACN2kB,WAAS,EACToE,KAAM,EACN1O,WAAS,EACTtZ,QAAQ,WACRP,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAWwR,EAAUxR,EAAMC,OAAO1L,UAEhD,kBAACoM,GAAA,EAAD,CAAQhX,QAAQ,WAAWT,QAAS,kBAhFhD+Q,EAAe,CACXzK,IAAK6hB,EACL7b,OAAQA,EACR0E,OAAQA,SAEZuX,MA2EY,qBC3GFtpB,aAAW,SAAC2B,GAAD,MAAY,CACvC1B,KAAM,CACJ0C,gBAAiBhB,EAAMO,QAAQmE,WAAWhE,MAC1C+D,MAAO,SChCX,IAAMrG,GAAYC,YAAW,CACzB8gB,iBAAkB,CACdpe,OAAQ,qBA8BD+mB,GA1BK,WAChB,IAAM9oB,EAAUZ,KAIVyK,EAHSyX,cAGSzX,SAExB,OACI,kBAACxH,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACjC,UAAWN,EAAQmgB,iBAAkB3d,GAAI,GAChD,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAAC,GAAD,CAAUqH,SAAUA,EAAUlI,QAAS,cAE3C,kBAACU,EAAA,EAAD,CAAME,MAAI,GACN,kBAAC,GAAD,CAASsH,SAAUA,MAG3B,kBAACxH,EAAA,EAAD,CAAME,MAAI,EAACjC,UAAWN,EAAQmgB,iBAAkB3d,GAAI,GAEhD,kBAAC7B,EAAA,EAAD,CAAYE,QAAQ,KAAKsc,MAAM,UAA/B,cACA,kBAAC,GAAD,CAAWtT,SAAUA,OCFtBkf,GAzBK,SAACppB,GACjB,IAAM0M,EAAiB6I,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAWrD,kBAC/DzE,EAAcqN,yBAAc,SAAAjM,GAAK,OAAIA,EAAM0G,WAAW9H,eAK5D,OAJAuN,qBAAU,WAEN,OADA9I,EAAe1M,EAAMkK,UACd,eACR,IAEC,kBAAC1J,EAAA,EAAD,CAAMqiB,MAAO,CAAC/c,MAAO,SACjB,kBAACU,EAAA,EAAD,CAAMqc,MAAO,CAAC3c,UAAU,IAAKD,SAAU,SACtBgC,EAAYxB,KAAI,SAAC7D,GACd,OAAQ,kBAACoE,EAAA,EAAD,CAAUJ,IAAK+V,gBACnB,kBAACnV,EAAA,EAAD,CACAC,QAAO,UAAO7E,EAAKsE,QAAZ,aAAwBtE,EAAK6O,UACpC,kBAACqL,GAAA,EAAD,KACI,kBAACtV,EAAA,EAAD,CACAC,QAAO,kBAAa7E,EAAKmK,OAAlB,gBCbzCtN,GAAYC,YAAW,CACzB8gB,iBAAkB,CACdpe,OAAQ,mBAEZ2f,KAAM,CACFxgB,UAAW,MAyEJ8nB,GArEU,SAACrpB,GACtB,IAAMK,EAAUZ,KAIVyK,EAHSyX,cAGSzX,SAElByG,EAAmB4E,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ4E,KAAKoD,oBAE3DT,GADgBqF,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ4E,KAAKqU,iBACxCtM,yBAAc,SAAAjM,GAAK,OAAIA,EAAMkE,KAAK2C,kBAClDD,EAAaqF,yBAAc,SAAAjM,GAAK,OAAIA,EAAMkE,KAAK0C,cASrD,OALAuF,qBAAU,WAEN,OADA7E,EAAiBzG,GACV,eACR,IAECgG,EAAchG,UAAY+F,EAAW/F,SAEjC,6BACI,kBAACxH,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACjC,UAAWN,EAAQmgB,iBAAkB3d,GAAI,IAChD,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAAC,GAAD,CAAUb,QAAS,sBAAuBkI,SAAUA,KAExD,kBAACxH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACrC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAaib,SAAS,KAAKvR,SAAUA,MAG7C,kBAACxH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIlC,UAAWN,EAAQ0hB,MAClC,kBAAC/gB,EAAA,EAAD,CAAYE,QAAQ,MAApB,aACA,kBAAC,GAAD,CAAagJ,SAAUA,QAOZ,GAA1BgG,EAAc2R,SAEf,6BACI,kBAACnf,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACjC,UAAWN,EAAQmgB,iBAAkB3d,GAAI,IAChD,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAAC,GAAD,CAAUb,QAAS,YAAakI,SAAUA,KAE9C,kBAACxH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACrC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAaib,SAAS,KAAKvR,SAAUA,MAG7C,kBAACxH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIlC,UAAWN,EAAQ0hB,MAClC,kBAAC/gB,EAAA,EAAD,CAAYE,QAAQ,MAApB,aACA,kBAAC,GAAD,CAAagJ,SAAUA,QAQvC,kBAAC,GAAD,OC7ENzK,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrCU,MAAO,CACLR,UAAWF,EAAMK,QAAQ,GACzBM,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQf,EAAMK,QAAQ,GACtBW,gBAAiBhB,EAAMO,QAAQE,UAAUQ,MAE3CgnB,KAAM,CACJxjB,MAAO,OACPvE,UAAWF,EAAMK,QAAQ,IAE3B6nB,OAAQ,CACNnnB,OAAQf,EAAMK,QAAQ,EAAG,EAAG,GAC5BW,gBAAiB,WAEnBM,UAAW,CACPpB,UAAWF,EAAMK,QAAQ,IACzBM,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhByX,UAAW,CACPpY,UAAWF,EAAMK,QAAQ,GACzBkY,aAAcvY,EAAMK,QAAQ,QAsJrB8nB,GAlJD,WACV,IAAMnpB,EAAUZ,KADA,EAEgB4U,mBAAS,IAFzB,mBAETnK,EAFS,KAECuf,EAFD,OAGgBpV,mBAAS,IAHzB,mBAGCqV,GAHD,aAIwBrV,mBAAS,IAJjC,mBAITsV,EAJS,KAIKC,EAJL,KAKVzZ,EAAUoF,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ4E,KAAK4C,WAClDQ,EAAmB4E,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ4E,KAAKoD,oBAC3DgC,EAAa4C,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ0J,MAAMM,cACtD9C,EAAY0F,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ+G,OAAOG,aAEtDga,EAAqB,WACvB,IAAMC,EAAejc,GAAM2I,WAAWnE,MAAMG,cAE5C,OAAoB,MAAhBsX,GAA+C,GAAvBA,EAAaxN,SACrCsN,EAAgB,4BACT,IAWTtpB,EAAUC,cAGVwpB,EAAW,yCAAG,WAAOxS,GAAP,UAAA1O,EAAA,sEACV8J,EAAWzI,GADD,WAEQ2f,IAFR,sBAPKhc,GAAM2I,WAAWnE,MAAMG,cACxBwX,SAMJ,iCAON7Z,EAAQjG,GAPF,wBAQNyG,EAAiBzG,GARX,QAUZ2F,EACI,CACI,CACIF,KAAM,IACNC,YAAa,SAEjB,CACID,KAAM,UACNC,YAAa,UAEjB,CACID,KAAM,YACNC,YAAa,YAEjB,CACID,KAAM,UAAYzF,EAClB0F,YAAa,oBAEjB,CACID,KAAM,UAAYzF,EAAW,aAC7B0F,YAAa,qBAEjB,CACID,KAAM,UAAYzF,EAAW,mBAC7B0F,YAAa,sBAEjB,CACID,KAAM,oBACNC,YAAa,yBAQzBtP,EAAQI,KAAK,YA9CD,wBAgDZmP,EACI,CACI,CACIF,KAAM,IACNC,YAAa,SAEjB,CACID,KAAM,UACNC,YAAa,UAEjB,CACID,KAAM,SACNC,YAAa,gCAIzBtP,EAAQI,KAAK,UAhED,4CAAH,sDAqEjB,OACI,6BACI,kBAACuiB,GAAA,EAAD,CAAW9hB,UAAU,OAAOvB,SAAS,KAAKe,UAAWN,EAAQsC,WAC7D,kBAAC3B,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAKE,MAAM,cAAcoc,MAAM,UAAlE,SAGA,0BAAM7c,UAAWN,EAAQipB,KAAMW,YAAU,GACrC,kBAACnP,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,WACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,WACHmE,aAAa,WACbC,WAAS,EACTra,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAWkS,EAAYlS,EAAMC,OAAO1L,UAElD,kBAACgP,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,WACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,WACHmE,aAAa,WACbC,WAAS,EACTra,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAASmS,EAAYnS,EAAMC,OAAO1L,UAEhD,kBAACoM,GAAA,EAAD,CACIzX,QAAS,SAAC8W,GAAD,OAAWwS,EAAYxS,IAEhCiD,WAAS,EACTtZ,QAAQ,YACRE,MAAM,UACNT,UAAWN,EAAQkpB,QANvB,SAUA,kBAACvoB,EAAA,EAAD,CAAYE,QAAQ,MACfyoB,O,oBCtKflqB,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrCU,MAAO,CACHR,UAAWF,EAAMK,QAAQ,GACzBM,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQf,EAAMK,QAAQ,GACtBW,gBAAiBhB,EAAMO,QAAQE,UAAUQ,MAE7CgnB,KAAM,CACFxjB,MAAO,OACPvE,UAAWF,EAAMK,QAAQ,IAE7B6nB,OAAQ,CACJnnB,OAAQf,EAAMK,QAAQ,EAAG,EAAG,GAC5BW,gBAAiB,WAErBM,UAAW,CACPpB,UAAWF,EAAMK,QAAQ,IACzBM,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhByX,UAAW,CACPpY,UAAWF,EAAMK,QAAQ,GACzBkY,aAAcvY,EAAMK,QAAQ,IAEhCoS,YAAa,CACT1R,OAAQf,EAAMK,QAAQ,QAmTfwoB,GA9SA,WACX,IAAM7pB,EAAUZ,KACVa,EAAUC,cAFC,EAGe8T,mBAAS,IAHxB,mBAGVnK,EAHU,KAGAuf,EAHA,OAIepV,mBAAS,IAJxB,mBAIAqV,GAJA,aAKiBrV,mBAAS,IAL1B,mBAKV8V,EALU,KAKCC,EALD,OAMa/V,mBAAS,IANtB,mBAMVjN,EANU,KAMD0S,EANC,OAOezF,mBAAS,GAPxB,mBAOVyH,EAPU,KAOAC,EAPA,OAQK1H,mBAAS,GARd,mBAQVjK,EARU,KAQLigB,EARK,OASiBhW,oBAAS,GAT1B,mBASViW,EATU,KASEhd,EATF,OAUyB+G,oBAAS,GAVlC,mBAUVkW,EAVU,KAUMC,EAVN,OAWyBnW,mBAAS,YAXlC,mBAWVuM,EAXU,KAWKC,EAXL,OAY2BxM,mBAAS,IAZpC,mBAYVoW,EAZU,KAYMC,EAZN,OAaqBrW,mBAAS,GAb9B,oBAaVyM,GAbU,MAaG1D,GAbH,SAciB/I,mBAAS,GAd1B,qBAcV0M,GAdU,MAcC1D,GAdD,SAeqBhJ,mBAAS,GAf9B,qBAeVuJ,GAfU,MAeGN,GAfH,SAgBiBjJ,mBAAS,GAhB1B,qBAgBVwJ,GAhBU,MAgBCN,GAhBD,SAiBSlJ,oBAAS,GAjBlB,qBAiBV/D,GAjBU,MAiBHqa,GAjBG,SAkBuBtW,mBAAS,sBAlBhC,qBAkBVsV,GAlBU,MAkBIC,GAlBJ,MA6BXgB,GAAwB,SAACrT,GAC3BsJ,EAAiBtJ,EAAMC,OAAO1L,QAG5BkV,GAAe,SAACzJ,GAClBuC,EAAWvC,EAAMC,OAAO1L,QAGtBmV,GAAe,SAAC1J,GAClBwE,EAAYxE,EAAMC,OAAO1L,QAIvB7B,GAAuBsL,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAW9F,wBACrEO,GAAuB+K,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAWvF,wBACrEiD,GAAc8H,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQqH,UAAUvC,eAC3DkF,GAAa4C,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ0J,MAAMM,cA2CtDkY,GAAiB,WACnB,GAzCmB,WACnB,IAAMf,EAAejc,GAAM2I,WAAWnE,MAAMG,cAC5C,OAAoB,MAAhBsX,GAA+C,GAAvBA,EAAaxN,OAuCrCwO,GAGA,OAFAlB,GAAgB,qBAChBe,IAAS,IACF,EAEX,IAAML,IAAcC,EAGhB,OAFAX,GAAgB,+CAChBe,IAAS,IACF,EAEX,GAAiB,IAAbR,GAA0B,GAAP/f,EAGnB,OAFAwf,GAAgB,mCAChBe,IAAS,IACF,EAEX,GAAIJ,EAAgB,CAChB,GAAe,IAAXnjB,EAGA,OAFAwiB,GAAgB,8CAChBe,IAAS,IACF,EAEX,GAAgB,GAAZ7O,EAGA,OAFA8N,GAAgB,sCAChBe,IAAS,IACF,EAEX,GAAqB,YAAjB/J,IA1DU,WAClB,GAA0B,GAAtBE,GAAYxE,QAAmC,GAApByE,GAAUzE,QAAqC,GAAtBsB,GAAYtB,QAAmC,GAApBuB,GAAUvB,OAEzF,OADAjM,MAAM,6CACC,EAEX,GAAI3M,EAAeod,IAAepd,EAAeqd,KAAcrd,EAAeka,IAAela,EAAema,IAExG,OADAxN,MAAM,0DACC,EAEX,IAAMrM,EAAkB8c,MAAgB9c,EAAkB+c,MAAiB/c,EAAkB4Z,MAAgB5Z,EAAkB6Z,IAE3H,OADAxN,MAAM,8DACC,EAEX,GAAI3M,EAAeod,IAAe,IAAI3d,MAAUO,EAAeka,IAAe,IAAIza,KAE9E,OADAkN,MAAM,6CACC,EAEX,IAAM4N,EAAgBha,EAAqB6c,GAAaC,IAClD7C,EAAkBja,EAAqB2Z,GAAaC,IAC1D,OAAII,EAAgB,KAAOC,EAAkB,KACzC7N,MAAM,gEACC,KAEPpM,EAAqB6c,GAAajD,IAAa,OAC/CxN,MAAM,uEACC,GAkCE8N,GAGD,OAFAyL,GAAgB,wBAChBe,IAAS,IACF,EAInB,GAAIL,EAAY,CACZ,GAA2C,IAAvC1S,OAAO8O,KAAK+D,GAAgBnO,OAG5B,OAFAsN,GAAgB,mDAChBe,IAAS,IACF,EAEX,GAA8B,IAA1BF,EAAetjB,SAA2C,IAA1BsjB,EAAerjB,QAG/C,OAFAwiB,GAAgB,4CAChBe,IAAS,IACF,EAGf,OAAO,GAELpB,GAAM,yCAAG,uBAAA1gB,EAAA,sEACL8J,GAAWzI,GADN,UAGN2gB,KAHM,iDAMXE,KACAC,KAPW,2CAAH,qDASND,GAAU,WACRT,GACA7c,GAAY,CACRvD,SAAUA,EACVwD,UAAWyc,EACX/f,IAAKA,EACL7C,QAASkjB,EAAerjB,QACxBE,QAASmjB,EAAetjB,QACxBwG,OAAQ8c,EAAevD,OACvBtZ,aAAc6c,EAAerD,kBAGjCmD,IACmB,YAAf3J,EACA3W,GAAqB,CACjBC,SAAUA,EACVC,KAAMggB,EACN/f,IAAKxF,SAASwF,GACd7C,QAASH,EACTiD,MAAOzF,SAASkX,KAGE,YAAjB8E,GACLpW,GAAqB,CACjBN,SAAUA,EACVC,KAAMggB,EACN/f,IAAKxF,SAASwF,GACd7C,QAASH,EACTiD,MAAOzF,SAASkX,GAChBrR,UAAWqW,GACXpW,UAAWqW,GACXpW,UAAWiT,GACXhT,UAAWiT,OAMrBmN,GAAmB,WACrB1qB,EAAQI,KAAK,MAOjB,OACI,6BACI,kBAACuiB,GAAA,EAAD,CAAW9hB,UAAU,OAAOvB,SAAS,KAAKe,UAAWN,EAAQsC,WACzD,kBAAC3B,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAKE,MAAM,cAAcoc,MAAM,UAAlE,UAGA,0BAAM7c,UAAWN,EAAQipB,KAAMW,YAAU,GACrC,kBAACnP,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,WACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,WACHmE,aAAa,WACbC,WAAS,EACTra,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAWkS,EAAYlS,EAAMC,OAAO1L,UAElD,kBAACgP,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,WACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,WACHmE,aAAa,WACbC,WAAS,EACTra,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAWmS,EAAYnS,EAAMC,OAAO1L,UAElD,kBAACgP,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,aACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,YACHmE,aAAa,YACbC,WAAS,EACTra,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAW6S,EAAa7S,EAAMC,OAAO1L,UAEnD,kBAACgP,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,MACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,MACHmE,aAAa,MACbC,WAAS,EACTH,KAAK,SACLla,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAW8S,EAAO9S,EAAMC,OAAO1L,UAG7C,kBAACqL,EAAA,EAAD,CAAahW,UAAU,WAAWR,UAAWN,EAAQyT,aACjD,kBAACsF,EAAA,EAAD,CAAWjY,UAAU,UAArB,iBACA,kBAAC8pB,GAAA,EAAD,KACI,kBAAC3R,EAAA,EAAD,CACIC,QAAS,kBAAC2R,GAAA,EAAD,CAAUzR,QAAS6Q,EAAYzT,SApOrC,WAC3BvJ,GAAY,SAAAgd,GAAU,OAAKA,MAoOHngB,KAAK,aACLhK,MAAM,YACNyW,GAAG,eAEP,kBAAC0C,EAAA,EAAD,CACIC,QAAS,kBAAC2R,GAAA,EAAD,CAAUzR,QAAS8Q,EAAgB1T,SAtOrC,WAC/B2T,GAAgB,SAAAD,GAAc,OAAKA,MAqOuEpgB,KAAK,iBACvFhK,MAAM,gBACNyW,GAAG,oBAGX,kBAAC0K,GAAA,EAAD,mCAEFiJ,GAAoC,aAAlB3J,EACpB,oCACA,kBAACzJ,EAAA,EAAD,CAAahW,UAAU,WAAWR,UAAWN,EAAQyT,aACjD,kBAACsF,EAAA,EAAD,CAAWjY,UAAU,UAArB,qBACA,kBAACigB,GAAA,EAAD,CAAYtV,MAAO8U,EAAe/J,SAAU+T,IACxC,kBAACtR,EAAA,EAAD,CAAkBxN,MAAM,WAAWyN,QAAS,kBAAC8H,GAAA,EAAD,MAAWlhB,MAAM,cAC7D,kBAACmZ,EAAA,EAAD,CAAkBxN,MAAM,WAAWyN,QAAS,kBAAC8H,GAAA,EAAD,MAAWlhB,MAAM,eAEjE,kBAACmhB,GAAA,EAAD,mCAEJ,kBAAC,GAAD,CAActH,WAAcgH,GAAc/G,YAAagH,GAAc/G,eAAgB6B,EAAa5B,KAAuB,YAAjByG,EAA6BzgB,MAAQ,uCAC7I,kBAAC,GAAD,CAAcid,eAAgBA,GAAgBC,aAAcA,GAAcC,eAAgBA,GAAgBC,aAAcA,KAVxH,KAWEgN,EACF,wCAAG,kBAACpT,EAAA,EAAD,CAAahW,UAAU,WAAWR,UAAWN,EAAQyT,aACpD,kBAACsF,EAAA,EAAD,CAAWjY,UAAU,UAArB,qBACA,kBAACigB,GAAA,EAAD,CAAYtV,MAAO8U,EAAe/J,SAAU+T,IACxC,kBAACtR,EAAA,EAAD,CAAkBxN,MAAM,WAAWyN,QAAS,kBAAC8H,GAAA,EAAD,MAAWlhB,MAAM,cAC7D,kBAACmZ,EAAA,EAAD,CAAkBxN,MAAM,WAAWyN,QAAS,kBAAC8H,GAAA,EAAD,MAAWlhB,MAAM,eAEjE,kBAACmhB,GAAA,EAAD,mCAEJ,kBAAC,GAAD,CAActH,WAAcgH,GAAc/G,YAAagH,GAAc/G,eAAgB6B,EAAa5B,KAAuB,YAAjByG,EAA6BzgB,MAAQ,uCAR7I,KAQ0L,KACvLmqB,EAAa,kBAAC,GAAD,CAAQnP,eAhGjB,SAACgQ,GACpBT,EAAkBS,MA+FyD,KAC/D,kBAACjT,GAAA,EAAD,CAEIsC,WAAS,EACTtZ,QAAQ,YACRE,MAAM,UACNT,UAAWN,EAAQkpB,OACnB9oB,QAAW,kBAAM8oB,OANrB,UAUCjZ,GAAQ,kBAACtP,EAAA,EAAD,SAAc2oB,GAAd,KAA4C,S,iFCpVpDyB,G,2KAEjB,OACE,yBAAKzqB,UAAU,UACb,yBAAKA,UAAU,iBAAiB0qB,KAAKrrB,MAAMgf,MAA3C,0BACA,yBAAKre,UAAU,eACb,4BAAQmL,MAAOuf,KAAKrrB,MAAMsrB,UAAWzU,SAAUwU,KAAKrrB,MAAMurB,gBAExD,4BAAQzf,MAAM,WAAd,kBACA,4BAAQA,MAAM,UAAd,wB,GATwB0f,a,UCe9B/rB,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrC0gB,KAAM,CACFxgB,UAAWF,EAAMK,QAAQ,GACzBkY,aAAcvY,EAAMK,QAAQ,GAC5BoE,MAAO,QAEXjG,MAAO,CACHC,OAAQ,KAEZ6C,UAAW,CACPpB,UAAWF,EAAMK,QAAQ,GACzBM,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhB6K,OAAQ,CACJ/K,QAAS,OACTC,cAAe,SACf,YAAa,CACTV,UAAWF,EAAMK,QAAQ,KAGjC/B,KAAM,CACF8B,QAAS,UACTO,QAAS,OACTE,WAAY,SACZ4D,MAAO,KAEXkc,MAAO,CACHxgB,WAAYH,EAAMK,QAAQ,GAC1BugB,KAAM,GAEVC,WAAY,CACRzgB,QAAS,IAEb0gB,QAAS,CACLriB,OAAQ,GACRsC,OAAQ,GAEZggB,UAAW,CACPhgB,OAAQf,EAAMK,QAAQ,IAE1B0Z,MAAO,CACHtV,MAAO,MACPyN,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXzN,SAAU,WACV3D,gBAAiBhB,EAAMO,QAAQmE,WAAWhE,MAC1C2R,OAAQ,iBACRC,UAAWtS,EAAMuS,QAAQ,GACzBnS,QAASJ,EAAMK,QAAQ,EAAG,EAAG,IAEjCuF,OAAQ,CACJ7E,OAAQf,EAAMK,QAAQ,IAE1BgmB,SAAU,CACN5hB,MAAO,OACPhG,OAAQ,SAyOD2rB,GArOQ,WACnB,IAAMprB,EAAUZ,KACVa,EAAUC,cAFS,EAGG8T,mBAAS,IAHZ,mBAGlBqX,EAHkB,KAGVC,EAHU,OAIWtX,oBAAS,GAJpB,mBAIlBuX,EAJkB,KAINC,EAJM,OAK2BxX,mBAAS,IALpC,mBAKlByX,EALkB,KAKEC,EALF,OAMS1X,mBAAS,WANlB,mBAMlBiX,EANkB,KAMPU,EANO,OAOS3X,mBAAS,CACvC,CACIC,UAAW,IAAInR,KACfoR,QAAS,IAAIpR,KACbyD,IAAK,eAXY,mBAOlB6N,EAPkB,KAOPC,EAPO,KAcnBC,EAAU,IAAIxR,KACdyR,EAAUC,aAASF,EAAS,GAG5B7K,EAAgByL,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAWjG,iBAC9DwB,EAAiBiK,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAWzE,kBAC/D0B,EAAsBuI,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAW/C,uBACpEX,EAAyBkJ,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAW1D,0BACvEa,EAA0BqI,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQoH,WAAW7C,2BAE9EsI,qBAAU,WAIN,OAHA1L,IACAwB,IACA0B,IACO,eACR,IAGH,IAAM+C,EAAauF,yBAAc,SAAAjM,GAAK,OAAIA,EAAM0G,WAAWlI,cACrDokB,EAAW3W,yBAAc,SAAAjM,GAAK,OAAIA,EAAM0G,WAAWhI,eACnDI,EAAmBmN,yBAAc,SAAAjM,GAAK,OAAIA,EAAM0G,WAAW5H,oBAC3D8H,EAAaqF,yBAAc,SAAAjM,GAAK,OAAIA,EAAMkE,KAAK0C,cAErDF,EAAWtJ,KAAI,SAAAkf,GAAS,OAAIA,EAAUna,SAAW,aAAIygB,GAAUnlB,QAAO,SAAAS,GAAO,OAAIA,EAAQF,UAAYse,EAAUzb,eAC/G6F,EAAWtJ,KAAI,SAAAkf,GAAS,OAAIA,EAAUna,SAAWma,EAAUna,SAAS/E,KAAI,SAAAc,GAAO,OAAIA,EAAQA,WAAS2kB,KAAK,SACzGnc,EAAWtJ,KAAI,SAAAkf,GAAS,OAAIA,EAAU5Y,OAAS,aAAI5E,GAAkBrB,QAAO,SAAAiG,GAAM,OAAIA,EAAO1F,UAAYse,EAAUzb,eACnH6F,EAAWtJ,KAAI,SAAAkf,GACqB,IAA5BA,EAAU5Y,OAAOuP,OACjBqJ,EAAU5Y,OAAS,KAEnB4Y,EAAU5Y,OAAS4Y,EAAU5Y,OAAO,GAAGof,cAI/C3W,qBAAU,WACNuW,EACIhc,EAAWjJ,QAAO,SAAA6e,GACd,OAAOA,EAAUna,SAAS4gB,cAAcC,SAASX,EAAOU,qBAGjE,CAACV,EAAQ3b,IAEZ,IA+BM0G,EAAY,yCAAG,+BAAA5N,EAAA,sEACXwD,EAAuB,CACzBvH,OAAQ2P,EAAU,GAAGH,UACrBvP,OAAQ0P,EAAU,GAAGF,UAHR,OAKX+X,EAAkBze,GAAM2I,WAAWzG,WAAW/H,oBAC9CukB,EAAuBD,EAAgB7lB,KAAI,SAAAkf,GAAS,OAAIA,EAAUte,WAExEzB,QAAQC,IAAI4O,GACZsX,EAAsBhc,GACtBgc,EACIhc,EAAWjJ,QAAO,SAAA6e,GAAS,OAAI4G,EAAqBF,SAAS1G,EAAUzb,cAE3E2hB,GAAc,GAbG,2CAAH,qDAgBZW,EAAmB,yCAAG,+BAAA3jB,EAAA,sEAClBqE,EAAwB,CAC1BhD,SAAU+F,EAAW/F,SACrBpF,OAAQ2P,EAAU,GAAGH,UACrBvP,OAAQ0P,EAAU,GAAGF,UAJD,OAKlB+X,EAAkBze,GAAM2I,WAAWzG,WAAW/H,oBAC9CukB,EAAuBD,EAAgB7lB,KAAI,SAAAkf,GAAS,OAAIA,EAAUte,WAExE0kB,EAAsBhc,GACtBgc,EACIhc,EAAWjJ,QAAO,SAAA6e,GAAS,OAAI4G,EAAqBF,SAAS1G,EAAUzb,cAE3E2hB,GAAc,GAZU,2CAAH,qDAmBnBY,EAAY,SAAC,GAAoB,IAAnB7gB,EAAkB,EAAlBA,MAAOiX,EAAW,EAAXA,MACjB8C,EAAYmG,EAAmBlgB,GACrC,OACI,kBAACpL,EAAA,EAAD,CAAMoG,IAAK+V,eAAMhc,UAAWN,EAAQ0hB,KAAM7gB,QAAQ,WAAW2hB,MAAOA,GAEhE,kBAACjiB,EAAA,EAAD,CAAgBH,QAAS,kBARPyJ,EAQkCyb,EAAUzb,cAPtE5J,EAAQI,KAAR,iBAAuBwJ,EAAvB,eADyB,IAACA,IASd,kBAACnJ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC3CwkB,EAAUzb,SAAV,YAA0Byb,EAAU/U,UAApC,MAEL,kBAAC5P,EAAA,EAAD,CAAYE,QAAQ,QAAQC,UAAU,KAAtC,kBACoBwkB,EAAUvb,KAE9B,yBAAKzJ,UAAWN,EAAQ0M,QACpB,kBAAC2f,GAAA,EAAD,CAAQ5gB,MAAO6Z,EAAU5Y,OAAQ4f,UAAW,GAAKC,UAAQ,KAE7D,kBAAC5rB,EAAA,EAAD,CAAYE,QAAQ,QAAQC,UAAU,KAAtC,kBACoBwkB,EAAUna,UAG9B,kBAAC0M,GAAA,EAAD,CAAQ6K,KAAK,QAAQ3hB,MAAM,WAA3B,kBASpB,OACI,6BACI,kBAAC6hB,GAAA,EAAD,CAAW9hB,UAAU,OAAOvB,SAAS,KAAKe,UAAWN,EAAQsC,WACzD,kBAAC3B,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAKE,MAAM,cAAcoc,MAAM,QAAlE,cAGA,kBAAC1C,GAAA,EAAD,CACIjE,SAAU,SAACU,GAAD,OAAWoU,EAAUpU,EAAMC,OAAO1L,QAC5CnL,UAAWN,EAAQ+B,OACnBjC,MAAM,kBACN0sB,WAAY,CACRC,eACI,kBAACC,GAAA,EAAD,CAAgB/mB,SAAS,SACrB,kBAAC,KAAD,QAIZ9E,QAAQ,WACRsZ,WAAS,IAEb,kBAAC,GAAD,CAAQwE,MAAO8M,EAAmBxP,OAC1BgP,UAAWA,EACXC,eA5GG,SAAChU,GACpByU,EAAazU,EAAMC,OAAO1L,OAC1BigB,EACID,EAAmBkB,MAAK,SAACnkB,EAAEokB,GAAH,MACN,WAAd3B,EACEziB,EAAEkE,OAASkgB,EAAElgB,OAAU,GAAI,EACf,YAAdue,EACEziB,EAAEkE,OAASkgB,EAAElgB,OAAU,GAAI,EAC7BlE,EAAEuB,IAAM6iB,EAAE7iB,IAAM,GAAI,SAqGpB,kBAAC8N,GAAA,EAAD,CAAQvX,UAAWN,EAAQ4G,OACvB/F,QAAQ,WACRT,QAjGO,WACnBorB,GAAc,KA8FN,6CAMA,kBAAC,KAAD,CAAe/rB,OAAQ,IAAKgG,MAAO,IAAKonB,SAAU,IAAKC,UAAWrB,EAAmBxP,OAAQuG,MAAO,CAAC5c,SAAU,OAAQH,MAAO,SACzH2mB,IAGT,kBAACjQ,GAAA,EAAD,CACId,KAAMkQ,EACNnP,QAvGY,WACpBoP,GAAc,KAuGN,kBAACrrB,EAAA,EAAD,CAAMG,UAAaN,EAAQ+a,OACvB,kBAAC1Y,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAAC,mBAAD,CACI+T,GAAG,kBACHC,SAAU,SAAAjU,GACNgD,QAAQC,IAAIjD,GACZ8R,EAAa,CAAC,CACVJ,UAAW1R,EAAKkU,UAAUxC,UAC1BC,QAAS3R,EAAKkU,UAAUvC,QACxB3N,IAAKhE,EAAKkU,UAAUlQ,QAM5BmQ,sBAAsB,EACtBC,2BAA2B,EAC3BC,OAAQxC,EACRyC,UAAU,aACVvC,QAAWA,EACXC,QAASA,KAGb,kBAACsD,GAAA,EAAD,CAAQvX,UAAWN,EAAQ4G,OACvB/F,QAAQ,WACRsZ,WAAS,EACTpZ,MAAM,UACNX,QAAS,kBAAMgW,MAJnB,0CAOA,kBAACyB,GAAA,EAAD,CAAQvX,UAAWN,EAAQ4G,OACvB/F,QAAQ,WACRsZ,WAAS,EACT/Z,QAAS+rB,GAHb,8F,6DCvRd/sB,GAAYC,aAAW,SAAC2B,GAAD,OACzB+rB,aAAa,CACTztB,KAAM,CACF2B,SAAU,GAEd+rB,WAAY,CACR/R,YAAaja,EAAMK,QAAQ,IAE/BZ,MAAO,CACHQ,SAAU,GAEdgsB,OAAQ,CACJxnB,MAAO,KAEXynB,SAAU,CACNznB,MAAO,QAEXvD,OAAQ,CACJF,gBAAiB,gBAiEdmrB,gBA5DA,SAACxtB,GAEZ,IAAMytB,EAASnY,yBAAc,SAAAjM,GAAK,OAAIA,EAAMqG,OAAOA,UAC7CrP,EAAUZ,KAHM,EAIM4U,oBAAS,GAJf,mBAIfqZ,EAJe,KAIPC,EAJO,KAKhBC,EAAe,SAAClS,GAAD,OAAU,SAC3BnE,IAGmB,YAAfA,EAAMsD,MACa,QAAdtD,EAAM3Q,KACO,UAAd2Q,EAAM3Q,MAId+mB,EAAUjS,KAOd,OACI,6BACI,yBAAK/a,UAAWN,EAAQV,MACpB,kBAACmgB,EAAA,EAAD,CAAQnf,UAAWN,EAAQkC,QACvB,kBAACsrB,GAAA,EAAD,KACI,kBAAC9Q,GAAA,EAAD,CAAYC,KAAK,QAAQrc,UAAWN,EAAQgtB,WAAYjsB,MAAM,UAAUwZ,aAAW,OAAOna,QAASmtB,GAAa,IAC5G,kBAAC,KAAD,OAEJ,kBAAC5sB,EAAA,EAAD,CAAYE,QAAQ,KAAKP,UAAWN,EAAQS,OAA5C,gBAMZ,kBAACgtB,GAAA,EAAD,CAAQztB,QAAS,CAAC0B,MAAM1B,EAAQitB,QAAS5R,KAAMgS,EAAQjR,QAASmR,GAAa,IACzE,yBACIjtB,UAAWN,EAAQktB,SACnBnO,KAAK,eACL3e,QAASmtB,GAAa,GACtBG,UAAWH,GAAa,IAExB,kBAACI,GAAA,EAAD,KACKP,EAAOhnB,KAAI,SAACwnB,EAAMrnB,GACf,OACI,kBAAC,IAAD,CAASgc,GAAIqL,EAAKte,KAAMkT,MAAO,CAACC,eAAgB,QAASlc,IAAKA,GAC1D,kBAAC+Q,EAAA,EAAD,CAAUuW,UA7BrBC,EA6B2CF,EAAKte,KA5B1D3P,EAAMouB,SAASC,WAAaF,IA6BH,kBAAC3mB,EAAA,EAAD,CAAcC,QAASwmB,EAAKre,gBA9B5C,IAACue,YCnDnB1uB,GAAYC,aAAW,SAAC2B,GAAD,MAAY,CACrCioB,KAAM,CACFxjB,MAAO,OACPvE,UAAWF,EAAMK,QAAQ,IAE7B6nB,OAAQ,CACJnnB,OAAQf,EAAMK,QAAQ,EAAG,EAAG,IAEhCiB,UAAW,CACPpB,UAAWF,EAAMK,QAAQ,IACzBM,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhByX,UAAW,CACPpY,UAAWF,EAAMK,QAAQ,GACzBkY,aAAcvY,EAAMK,QAAQ,IAEhCoS,YAAa,CACT1R,OAAQf,EAAMK,QAAQ,IAE1Ba,OAAQ,CACJH,OAAQf,EAAMK,QAAQ,GACtBC,UAAW,cAoEJ2sB,GAhEE,WACb,IAAMjuB,EAAUZ,KADG,EAEa4U,mBAAS,IAFtB,mBAEZnK,EAFY,KAEFuf,EAFE,OAGepV,mBAAS,IAHxB,mBAGZvB,EAHY,KAGDyb,EAHC,KAIb1b,EAAW0C,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ0J,MAAMQ,YACpDJ,EAAqB8C,2BAAgB,SAAA5M,GAAO,OAAIA,EAAQ0J,MAAMI,sBAE9D8W,EAAM,yCAAG,WAAOiF,GAAP,UAAA3lB,EAAA,6DAEX2lB,EAAEC,iBAFS,SAGLhc,EAAmBvI,GAHd,OAKX2I,EAAS,CACP3I,SAAUA,EACV4I,UAAWA,IAGb2W,EAAY,IACZ8E,EAAa,IAXF,2CAAH,sDAcZ,OACI,yBAAK5tB,UAAWN,EAAQsC,WACxB,kBAAC3B,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAKE,MAAM,cAAcoc,MAAM,UAAlE,0BAGA,0BAAM7c,UAAWN,EAAQipB,KAAMW,YAAU,GACvC,kBAACnP,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,iBACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,gBACHmE,aAAa,gBACbC,WAAS,EACTra,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAWkS,EAAYlS,EAAMC,OAAO1L,UAElD,kBAACgP,GAAA,EAAD,CACI5Z,QAAQ,WACRf,MAAM,aACNoa,UAAQ,EACRC,WAAS,EACT5D,GAAG,YACHmE,aAAa,YACbC,WAAS,EACTra,UAAWN,EAAQsZ,UACnB9C,SAAU,SAACU,GAAD,OAAWgX,EAAahX,EAAMC,OAAO1L,UAEnD,kBAACoM,GAAA,EAAD,CACI2C,KAAK,SACLL,WAAS,EACTtZ,QAAQ,YACRE,MAAM,UACNT,UAAWN,EAAQkpB,OACnB9oB,QAAW,SAAC+tB,GAAD,OAAOjF,EAAOiF,KAN7B,aCjEJE,GAAM,WACR,OACI,yBAAK/tB,UAAU,aACX,kBAAC,IAAD,KACI,kBAAC,GAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOguB,OAAK,EAAChf,KAAK,IAAIxO,UAAWqoB,KACjC,kBAAC,IAAD,CAAOmF,OAAK,EAAChf,KAAK,SAASxO,UAAWsB,IACtC,kBAAC,IAAD,CAAOksB,OAAK,EAAChf,KAAK,mBAAmBxO,UAAWkiB,KAChD,kBAAC,IAAD,CAAOsL,OAAK,EAAChf,KAAK,iBAAiBxO,UAAWmd,KAC9C,kBAAC,IAAD,CAAOqQ,OAAK,EAAChf,KAAK,yBAAyBxO,UAAW0lB,KACtD,kBAAC,IAAD,CAAO8H,OAAK,EAAChf,KAAK,mBAAmBxO,UAAWmtB,KAChD,kBAAC,IAAD,CAAOK,OAAK,EAAChf,KAAK,oBAAoBxO,UAAWsqB,KACjD,kBAAC,IAAD,CAAOkD,OAAK,EAAChf,KAAK,0BAA0BxO,UAAWgiB,KACvD,kBAAC,IAAD,CAAOwL,OAAK,EAAChf,KAAK,mBAAmBxO,UAAWgoB,KAChD,kBAAC,IAAD,CAAOwF,OAAK,EAAChf,KAAM,mCAAmCxO,UAAWugB,KACjE,kBAAC,IAAD,CAAOiN,OAAK,EAAChf,KAAM,6BAA6BxO,UAAWkoB,KAC3D,kBAAC,IAAD,CAAOsF,OAAK,EAAChf,KAAK,YAAYxO,UAAW6hB,KACzC,kBAAC,IAAD,CAAO2L,OAAK,EAAChf,KAAK,UAAUxO,UAAW+oB,SC7B3D,SAAS0E,GAAT,GAAgD,IAAb1P,EAAY,EAAZA,SAC3B2P,EAAeC,+BAGrB,OAFAlpB,QAAQC,IAAIgpB,GACZjpB,QAAQC,IAAIqZ,GACL2P,EAAe3P,EAAW,KAGnC6P,IAASC,OACT,kBAAC,gBAAD,CAAenhB,MAAOA,IACpB,kBAAC+gB,GAAD,KACE,kBAAC,GAAD,QAEcK,SAASC,eAAe,W","file":"static/js/main.9d98c2fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/userProfile.f9f26790.png\";","module.exports = __webpack_public_path__ + \"static/media/pet.fb90d3e6.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nconst AdminCard = (props) => {\n    const { route, image, label, description } = props;\n    const classes = useStyles();\n    const history = useHistory();\n    const handleClick = () => {\n    history.push(route);\n  }\n\n  return (\n<Card onClick={handleClick} className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={image}\n          title={label}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {label}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  )\n}\n\nexport default AdminCard\n","import React, { useState, useEffect } from 'react'\nimport AdminCard from \"../components/admin/AdminCard\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 150,\n    marginLeft: 100\n  },\n  component: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n  },\n  avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n  },\n  header: {\n      margin: theme.spacing(3),\n      textAlign: 'center'\n  },\n  summarycard: {\n      marginTop: theme.spacing(3),\n  }\n}));\n\nconst Adminpage = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <AdminCard \n            route='/admin/view-caretakers' \n            image= \"https://storage.googleapis.com/petbacker/images/blog/2018/pet-care-dog-sitting-services.jpg\"\n            label= \"View All Caretakers\"\n            description= \"Our Caretakers are amazing with animals\"/>\n        </Grid>\n        <Grid item xs={6}>\n          <AdminCard \n              route= \"/admin/set-price\"\n              image= \"https://mrpetapp.com/wp-content/uploads/2016/11/pets_big.png\"\n              label= \"Set Pet Prices\"\n              description= \"Set base prices for pet categories here\"/>\n        </Grid>\n        <Grid className={classes.summarycard} item xs={6} marginTop={20}>\n          <AdminCard \n                route= '/admin/summary'\n                image= \"https://api.time.com/wp-content/uploads/2014/03/dog-money.jpg\"\n                label= \"View Salary Details\"\n                description= \"View salary details of caretakers\"/>\n        </Grid>\n        <Grid className={classes.summarycard} item xs={6} marginTop={20}>\n          <AdminCard \n                route= '/admin/add-admin'\n                image= \"https://i2-prod.mirror.co.uk/incoming/article16509270.ece/ALTERNATES/s615/1_Business-dog-at-work.jpg\"\n                label= \"Add New Admin\"\n                description= \"Create a new admin account here\"/>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Adminpage\n","function appendLeadingZeroes(n){\n    if(n <= 9){\n      return \"0\" + n;\n    }\n    return n\n  }\n\nfunction convertDate(passedDate) {\n    const date = new Date(passedDate)\n    let formatted_date = '' + date.getFullYear() + appendLeadingZeroes((date.getMonth() + 1)) + appendLeadingZeroes(date.getDate())\n    return formatted_date\n}\n\nfunction sqlToJsDate(date) {\n    let dateSplit = date.split('T');\n    return new Date(date.replace(' ', 'T'));    ;\n}\n\nfunction stringToJsDate(dateString) {\n  var year = dateString.substring(0,4);\n  var month = dateString.substring(4,6);\n  var day = dateString.substring(6,8);\n  return new Date(year, month-1, day);\n}\n\nfunction isValidStringDate(dateString) {\n  var year = dateString.substring(0,4);\n  var month = dateString.substring(4,6);\n  var day = dateString.substring(6,8);\n  if (month > 12 || month < 1) {\n      return false;\n  }\n  if (day > 31 || day < 1) {\n    return false;\n  }\n  return true;\n}\nfunction differenceInTwoDates(s_date, e_date){\n  const date1 = stringToJsDate(s_date);\n  const date2 = stringToJsDate(e_date);\n  const diffTime = Math.abs(date2 - date1);\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \n  return diffDays;\n\n}\n\nfunction getPrevMonths(months_ago) {\n  const curr_month = new Date().getMonth()\n  var resultDate = new Date();\n  resultDate.setMonth(curr_month-months_ago);\n  resultDate.setDate(1);\n  return resultDate;\n}\n\nfunction getStartEndOfMonth(month) {\n  const intMonth = parseInt(month);\n  const currDate = new Date();\n  let startDate = new Date(currDate.getFullYear(), intMonth, 1);\n  let endDate = new Date(currDate.getFullYear(), intMonth+1, 0);\n  const result = {\n    s_time: startDate,\n    e_time: endDate\n  }\n  return result;\n}\n\nfunction dateStringtoSqlDate(date) {\n  let jsDate = stringToJsDate(date);\n  let pad = function(num) { return ('00'+num).slice(-2) };\n  let newDate = jsDate.getUTCFullYear()        + '-' +\n        pad(jsDate.getUTCMonth() + 1) + '-' +\n        pad(jsDate.getUTCDate())       + ' ' +\n        pad(jsDate.getUTCHours())      + ':' +\n        pad(jsDate.getUTCMinutes())    + ':' +\n        pad(jsDate.getUTCSeconds())    \n  console.log(newDate);\n  return newDate;\n}\nexport {convertDate, sqlToJsDate, stringToJsDate, differenceInTwoDates, isValidStringDate, getPrevMonths, getStartEndOfMonth, dateStringtoSqlDate }","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { sqlToJsDate } from '../../utils';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto',\n    maxHeight: 400\n  },\n  listSection: {\n    backgroundColor: 'inherit',\n  },\n  ul: {\n    backgroundColor: 'inherit',\n    padding: 0,\n  },\n}));\n\nexport default function BidList(props) {\n    const { subheader, bids, onClick, ...other } = props;\n    const classes = useStyles();\n\n\n    return (\n    <List className={classes.root} subheader={<li />}>\n        {subheader.map((sectionId, sectionIndex) => (\n        <li key={`section-${sectionId}`} className={classes.listSection}>\n            <ul className={classes.ul}>\n            <ListSubheader>{`${sectionId}`}</ListSubheader>\n            {bids\n              .filter((bid) => sqlToJsDate(bid.s_time).getMonth() == sectionIndex || sqlToJsDate(bid.e_time).getMonth() == sectionIndex)\n              .filter((bid) => sqlToJsDate(bid.e_time).getFullYear() == new Date().getFullYear())\n              .map((bid) => (\n                <ListItem \n                  button\n                  key={`item-${sectionId}-${bid.pouname}-${bid.petName}-${bid.petType}-${bid.ctuname}-${bid.s_time}-${bid.e_time}`}\n                  onClick={() => onClick(\n                    {\n                      pouname: bid.pouname,\n                      petname: bid.petname,\n                      pettype: bid.pettype,\n                      ctuname: bid.ctuname,\n                      s_time: bid.s_time,\n                      e_time: bid.e_time\n                    }\n                  )}\n                >\n                  <ListItemText primary={`${bid.petname} (${bid.pettype})`} />\n                </ListItem>\n            ))}\n            </ul>\n        </li>\n        ))}\n    </List>\n  );\n}","import React, { useState } from 'react'\nimport { Grid, Typography } from '@material-ui/core'\nimport Calendar from 'react-calendar'\nimport { makeStyles } from '@material-ui/core/styles'\nimport 'react-calendar/dist/Calendar.css'\nimport BidList from \"./BidList\"\n\nconst useStyles = makeStyles({\n    calendar: {\n        width: \"100%\",\n        height: \"100%\",\n        padding: \"30px 20px 50px\"\n    },\n    list: {\n        height: 600\n    }\n})\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nconst CalendarView = () => {\n    const classes = useStyles();\n    const [date, setDate] = useState(new Date());\n\n    return (\n        <Grid container>\n            <Grid item xs={8}>\n                <Calendar className={classes.calendar} \n                    onChange={(res) => setDate(res)}\n                />\n            </Grid>\n            <Grid item xs={4}>\n            </Grid>\n\n        </Grid>\n    )\n}\n\nexport default CalendarView;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nconst ViewAllCaretakers = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const handleClick = () => {\n    history.push('/admin/view-caretakers');\n  }\n\n  return (\n<Card onClick={handleClick} className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image=\"https://storage.googleapis.com/petbacker/images/blog/2018/pet-care-dog-sitting-services.jpg\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            View All Caretakers\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Our Caretakers are amazing with animals\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default ViewAllCaretakers\n","import { action, thunk } from 'easy-peasy';\nimport axios from 'axios';\nimport { serverUrl } from './serverUrl';\nimport { convertDate, sqlToJsDate, dateStringtoSqlDate } from '../../utils';\nimport store from \"../store\"\n\nconst careTakersModel = {\n    caretakers: [],\n    petCareList: [],\n    petTypeList: [],\n    availableCaretakers: [],\n    userReviews: [],\n    userRating: [],\n    careTakerRatings: [],\n    availability: [],\n    singleCaretakerSalary: [],\n    singleCaretakerPettypeSummary: [],\n    singleCaretakerPetownerSummary: [],\n    mostLucrativeCategories: [],\n\n    getMostLucrativeCategories: thunk(async (actions, payload) => {\n      const {ctuname, s_time, e_time} = {...payload};\n      const url = serverUrl + \"/api/v1/caretaker/summary/\" + ctuname + \"/\" + convertDate(s_time) + \"/\" + convertDate(e_time) + \"/lucrative\";\n      const {data} = await axios.get(url);\n\n      actions.setMostLucrativeCategories(data.data.categories);\n    }),\n    \n    setMostLucrativeCategories: action((state, payload) => {\n      state.mostLucrativeCategories = payload;\n    }),\n\n    getSingleCaretakerPetownerSummary: thunk(async (actions, payload) => {\n      const {ctuname, s_time, e_time} = {...payload};\n      // console.log(payload);\n      const url = serverUrl + \"/api/v1/caretaker/summary/\" + ctuname + \"/\" + convertDate(s_time) + \"/\" + convertDate(e_time) + '/petowner';\n      const {data} = await axios.get(url);\n      // console.log(data);\n      actions.setSingleCaretakerPetownerSummary(data.data.petdays);\n    }),\n\n    setSingleCaretakerPetownerSummary: action((state, payload) => {\n      state.singleCaretakerPetownerSummary = payload;\n    }),\n\n    getSingleCaretakerPettypeSummary: thunk(async (actions, payload) => {\n      const {ctuname, s_time, e_time} = {...payload};\n      // console.log(payload);\n      const url = serverUrl + \"/api/v1/caretaker/summary/\" + ctuname + \"/\" + convertDate(s_time) + \"/\" + convertDate(e_time) + '/pettype';\n      const {data} = await axios.get(url);\n      // console.log(data);\n      actions.setSingleCaretakerPettypeSummary(data.data.petdays);\n    }),\n\n    setSingleCaretakerPettypeSummary: action((state, payload) => {\n      state.singleCaretakerPettypeSummary = payload;\n    }),\n\n    getSingleCaretakerSalary: thunk(async (actions, payload) => {\n      const { ctuname, s_time, e_time } ={ ...payload };\n      // console.log(payload)\n      const url = serverUrl + \"/api/v1/admin/salary/\" + ctuname + \"/\" + convertDate(s_time) + \"/\" + convertDate(e_time);\n      // console.log(url)\n      const {data} = await axios.get(url);\n      // console.log(data)\n      actions.setSingleCaretakerSalary(data.data); \n    }), \n\n    setSingleCaretakerSalary: action((state, payload) => { // action\n      if (payload.salary !== null ) {\n          state.singleCaretakerSalary = payload.salary;\n      }\n    }),\n  \n    getCareTakers: thunk(async (actions, payload) => {\n      const {data} = await axios.get(serverUrl + \"/api/v1/caretaker\");\n      actions.setUsers(data.data.users); \n    }),\n\n    setUsers: action((state, payload) => {\n      state.caretakers = [...payload];\n    }),\n    addPartTimeCareTaker: thunk(async (actions, payload) => {\n      const {username, name, age, pettype, price} = {...payload};\n      const url = serverUrl + \"/api/v1/parttimer\";\n      const {data} = await axios.post(url, {\n          username: username,\n          name: name,\n          age: age,\n          pettype: pettype,\n          price: price\n      })\n\n      return data.status;\n      \n    }),\n    addFullTimeCareTaker: thunk(async (actions, payload) => {\n      const {username, name, age, pettype, price, period1_s, period1_e, period2_s, period2_e} = {...payload};\n      const url = serverUrl + \"/api/v1/fulltimer\";\n      console.log({\n        username: username,\n        name: name, \n        age: age,\n        pettype: pettype,\n        price: price,\n        period1_s: period1_s,\n        period1_e: period1_e,\n        period2_s: period2_s,\n        period2_e: period2_e\n      })\n      const data = await axios.post(url, {\n          username: username,\n          name: name, \n          age: age,\n          pettype: pettype,\n          price: price,\n          period1_s: period1_s,\n          period1_e: period1_e,\n          period2_s: period2_s,\n          period2_e: period2_e\n      }).then((res) => {\n          actions.addAvailability({\n            ctuname: username,\n            s_time: dateStringtoSqlDate(period1_s),\n            e_time: dateStringtoSqlDate(period1_e)\n          });\n          actions.addAvailability({\n            ctuname: username,\n            s_time: dateStringtoSqlDate(period2_s),\n            e_time: dateStringtoSqlDate(period2_e)\n          })\n      }).then((err) => {\n        console.log(err);\n      })\n    }),\n    getPetCareList: thunk(async(actions, payload) => {\n      const username = payload;\n      const url = serverUrl + \"/api/v1/categories/\" + username;\n      const {data} = await axios.get(url);\n      actions.setPetCareList(data.data.pets);\n    }), \n    setPetCareList: action((state, payload) => {\n      state.petCareList = [...payload];\n    }),\n    addPetCareItem: thunk(async(actions, payload) => {\n      const {username, pettype, price} = payload;\n      const url = serverUrl + \"/api/v1/categories/\" + username;\n      const {data} = await axios.post(url, {\n          pettype: pettype,\n          price: price\n      });\n      actions.addPetCareList(data.data.pets);\n    }), \n    addPetCareList: action((state, payload) => {\n      state.petCareList.push(payload);\n    }),\n\n    getPetTypeList: thunk(async(actions, payload) => {\n      const url = serverUrl + \"/api/v1/pettype\";\n      const {data} = await axios.get(url);\n      console.log(data);\n      actions.setPetTypeList(data.data.pettypes);\n    }),\n    setPetTypeList: action((state, payload) => {\n      state.petTypeList = [...payload];\n    }),\n\n    deletePetType: thunk(async(actions, payload) => {\n      const {username, pettype } = payload;\n      const url = serverUrl + \"/api/v1/categories/\" + username + \"/\" + pettype;\n      const {data} = await axios.delete(url);\n      actions.deleteUserPetType(payload.pettype);\n    }),\n    deleteUserPetType: action((state, payload) => {\n        var index = null;\n        state.petCareList.forEach(function(value, i) {\n          console.log(value.pettype)\n            if (value.pettype === payload) {\n\n                index = i;\n            }\n        })\n        state.petCareList.splice(index, 1);\n        \n    }),\n\n    getUserAvailability: thunk(async(actions, payload) => {\n      const { ctuname, s_time, e_time } = payload;\n      const url = serverUrl + \"/api/v1/availability/\" + ctuname + \"/\" + convertDate(s_time) + \"/\" + convertDate(e_time);\n      console.log(url);\n\n      const { data } = await axios.get(url);\n      // console.log(data)\n      actions.setUserAvailability(data.data.availabilities)\n    }),\n    setUserAvailability: action((state, payload) => {\n      state.availability = [...payload];\n    }),\n\n    addUserAvailability: thunk(async(actions, payload) => {\n      const { ctuname, s_time, e_time } = payload;\n      const url = serverUrl + \"/api/v1/availability/\" + ctuname;\n      console.log(url);\n\n      const { data } = await axios.post(url, {\n        s_time: s_time,\n        e_time: e_time\n      });\n      // console.log(data)\n      actions.addAvailability(data.data.availability)\n    }),\n    addAvailability: action((state, payload) => {\n      state.availability.push(payload);\n    }),\n    getAvailableCaretakers: thunk(async(actions, payload) => {\n      console.log(payload);\n      const {s_time, e_time} = payload;\n      const url = serverUrl + \"/api/v1/availability/\" + convertDate(s_time) + \"/\" + convertDate(e_time);\n      const {data} = await axios.get(url);\n      actions.setAvailableCaretakers(data.data.availabilities);\n    }),\n      setAvailableCaretakers: action((state, payload) => {\n        state.availableCaretakers = payload;\n      }),\n    deleteUserAvailability: thunk(async(actions, payload) => {\n      const { ctuname, s_time, e_time } = payload;\n      const url = serverUrl + \"/api/v1/availability/\" + ctuname + \"/\" + convertDate(sqlToJsDate(s_time)) + \"/\" + convertDate(sqlToJsDate(e_time))\n      console.log(url);\n      console.log({\n        s_time: convertDate(sqlToJsDate(s_time)),\n        e_time: convertDate(sqlToJsDate(e_time))\n      });\n      const { data } = await axios.delete(url);\n      console.log(data)\n      actions.deleteAvailability(payload)\n    }),\n    deleteAvailability: action((state, payload) => {\n      let index = null;\n      state.availability.forEach(function(avail, i) {\n        if (payload.s_time === avail.s_time &&\n            payload.e_time === avail.e_time) {\n              index = i;\n            }\n      })\n      state.availability.splice(index, 1);\n    }),\n    getUserReviews: thunk(async(actions, payload) => {\n        const ctuname = payload;\n        const url = serverUrl + \"/api/v1/review/\" + ctuname;\n        const { data } = await axios.get(url);\n        actions.setUserReviews(data.data.reviews);\n    }),\n    setUserReviews: action((state, payload) => {\n      state.userReviews = [...payload];\n    }),\n    getRating: thunk(async(actions, payload) => {\n        const ctuname = payload;\n        const url = serverUrl + \"/api/v1/rating/\" + ctuname;\n        const { data } = await axios.get(url);\n        actions.setUserRating(data.data.rating);\n    }),\n    setUserRating: action((state, payload) => {\n      state.userRating = payload;\n    }),\n\n    getCareTakerRatings: thunk(async(actions, payload) => {\n      const url = serverUrl + \"/api/v1/rating\";\n      const {data} = await axios.get(url);\n      actions.setCareTakerRatings(data.data.rating);\n    }),\n    setCareTakerRatings: action((state, payload) => {\n      state.careTakerRatings = payload;\n    }),\n    getCaretakersForAllPets: thunk(async(actions, payload) => {\n      const { username, s_time, e_time } = payload;\n      const url = serverUrl + \"/api/v1/petowner/\" + username + \"/all_ct/\" + convertDate(s_time) + \"/\" + convertDate(e_time)\n      const { data } = await axios.get(url);\n      actions.setAvailableCaretakers(data.data.caretakers);\n    })\n\n\n\n  }\n\nexport default careTakersModel;","import { action, thunk, debug } from 'easy-peasy';\nimport {serverUrl} from \"./serverUrl\"\nimport axios from 'axios';\nimport store from \"../store\"\n\nconst petOwnersModel = {\n    singlePetOwner: null,\n    getPetOwner: thunk(async (actions, payload) => {\n        const username = payload;\n        const url = serverUrl + \"/api/v1/petowner/\" + username;\n        const {data} = await axios.get(url);\n        actions.setPetOwner(data.data); \n        return data.status;\n      }), \n      setPetOwner: action((state, payload) => { // action\n        console.log(payload);\n        if (payload.user !== null ) {\n            state.singlePetOwner = payload.user;\n        }\n        console.log(debug(state));\n\n      }),\n\n    addPetOwner: thunk(async (actions, payload) => {\n        const {username, ownername, age, pettype, petname, petage, requirements} = {...payload};\n        const data = await axios.post(serverUrl + \"/api/v1/petowner\", {\n            username: username,\n            ownername: ownername,\n            age: age,\n            pettype: pettype,\n            petname: petname,\n            petage: petage,\n            requirements: requirements\n        }).then((res) => {\n          store.getActions().pets.addAPet({\n            pouname: ownername,\n            pettype: pettype,\n            petname: petname,\n            petage: petage,\n            requirements: requirements\n          })\n        }).catch((err) => {\n          console.log(err);\n        })\n      }),\n\n}\n\nexport default petOwnersModel;\n","import { action, thunk } from 'easy-peasy';\nimport axios from 'axios';\nimport {serverUrl} from \"./serverUrl\"\n\nconst petsModel = {\n  allPets: [],\n  ownerSpecificPets: [],\n  petCategories: [],\n  biddablePets: [],\n\n  getAllPets: thunk(async (actions, payload) => {\n      const {data} = await axios.get(serverUrl + \"/api/v1/pet\"); // get all pets\n      actions.setAllPets(data.data.pets); \n    }),\n  setAllPets: action((state, payload) => { // action\n    state.allPets = [...payload];\n  }),\n\n  getOwnerPets: thunk(async (actions, payload) => {\n      const username = payload;\n      const url = serverUrl + \"/api/v1/pet/\" + username;\n      const {data} = await axios.get(url); \n      actions.setOwnerPets(data.data.pets); \n    }),\n  setOwnerPets: action((state, payload) => {\n    state.ownerSpecificPets = [...payload];\n  }),\n\n  getOwnerPetsOfType: thunk(async (actions, payload) => {\n    const { username, pettype } = payload;\n    const url = serverUrl + \"/api/v1/pet/\" + username + \"/\" + pettype;\n    console.log(url);\n    const {data} = await axios.get(url); \n    actions.setBiddablePets(data.data.pets); \n  }),\n  setBiddablePets: action((state, payload) => {\n    state.biddablePets = [...payload];\n  }),\n\n  addPet: thunk(async (actions, payload) => {\n      const {username, petname, pettype, petage, requirements} = {...payload};\n      const data = await axios.post(serverUrl + \"/api/v1/pet\", {\n        username: username,\n        petname: petname,\n        pettype: pettype,\n        petage: petage,\n        requirements: requirements\n      }).then((res) => {\n        actions.addAPet(res.data.data.pet); \n      }).catch((err) => {\n        console.log(err);\n      })\n    }),\n    addAPet: action((state, payload) => {\n      state.ownerSpecificPets.push(payload);\n    }),\n\n  editPet: thunk(async (actions, payload) => {\n    const{username, petname, pettype, petage, requirements} = {...payload};\n    const url = serverUrl + \"/api/v1/pet/\" + username + \"/\" + petname;\n    const data = await axios.put(url, {\n      pettype: pettype,\n      petage: petage,\n      requirements: requirements\n    }).then((res) => {\n      actions.editAPet(res.data.data.pet);\n    }).catch((err) => {\n      console.log(err);\n    })\n  }),\n  editAPet: action((state, payload) => {\n    state.ownerSpecificPets.map((pet) => {\n      if (pet.petname == payload.petname) {\n        pet.pettype = payload.pettype;\n        pet.petage = payload.petage;\n        pet.requirements = payload.requirements;\n      }\n    }\n  )}),\n\n  deletePet: thunk(async (actions,payload) => {\n    const { username, petname } = {...payload};\n    const url = serverUrl + \"/api/v1/pet/\" + username + \"/\" + petname;\n    console.log(url)\n    const data = await axios.delete(url)\n      .then((res) => {\n        actions.deleteAPet(petname)\n      }).catch((err) => {\n        console.log(err);\n      })\n  }),\n  deleteAPet: action((state, payload) => {\n    state.ownerSpecificPets.forEach(function(pet, index) {\n      if(pet.petname == payload) {\n        state.ownerSpecificPets.splice(index, 1);\n      }\n    })\n  }),\n\n  getPetCategories: thunk(async (actions,payload) => {\n    const url = serverUrl + \"/api/v1/categories\";\n    const {data} = await axios.get(url);\n    actions.getAllCategories(data.data.pets);\n  }), \n  getAllCategories: action((state, payload) => {\n    state.petCategories = [...payload];\n  }),\n\n  addPetCategory: thunk(async (actions, payload) => {\n    const { category, base_price } = {...payload};\n    const url = serverUrl + \"/api/v1/admin/category\";\n    const {data} = await axios.post(url, {\n      category: category,\n      base_price: base_price\n    });\n  }),\n  editPetCategory: thunk(async (actions, payload) => {\n    const { category, base_price } = {...payload};\n    const url = serverUrl + \"/api/v1/admin/category/\" + category;\n    const {data} = await axios.put(url, {\n      category: category,\n      base_price: base_price\n    })\n  }),\n}\n\nexport default petsModel;","import { action } from 'easy-peasy';\n\nconst routesModel = {\n  routes: [ // updated after login\n    {\n        path: '/',\n        sidebarName: 'Login',\n    },\n    {\n        path: '/signup',\n        sidebarName: 'Signup',\n    }\n  ],\n  setRoutes: action((state, payload) => {\n    state.routes = payload;\n  })\n}\n\nexport default routesModel;","import { createStore, persist } from 'easy-peasy';\nimport careTakersModel from './models/careTakersModel';\nimport petOwnersModel from './models/petOwnersModel'\nimport petsModel from './models/petsModel';\nimport routesModel from './models/routesModel';\nimport userModel from './models/userModel';\nimport bidModel from \"./models/bidModel\"\nimport adminModel from \"./models/adminModel\"\n\n\nconst storeModel = {\n  careTakers: careTakersModel,\n  petOwners: petOwnersModel,\n  pets: petsModel,\n  user: userModel, \n  routes: routesModel,\n  bids: bidModel,\n  admin: adminModel\n};\n\nconst store = createStore(persist(storeModel, {mergeStrategy: 'mergeShallow'}));\n// const store = createStore(storeModel);\n\nexport default store;","import { action, thunk, debug } from 'easy-peasy';\nimport {serverUrl} from \"./serverUrl\"\nimport axios from 'axios';\n\nconst userModel = {\n    singleUser: [],\n    displayedUser: [],\n\n    getUser: thunk(async (actions, payload) => {\n        const username = payload;\n        const url = serverUrl + \"/api/v1/users/\" + username;\n        const data = await axios.get(url).then(response => {\n          // console.log(response);\n          if (response.data.status === \"success\") {\n            return response.data.data.user;\n          } else {\n            alert(`Username does not exist in the database!`);\n          }\n        }).catch((error) => {\n          alert(\"Please choose a different username!\");\n        });\n\n        console.log(data);\n        actions.setUser(data); \n      }), \n      setUser: action((state, payload) => { // action\n        // console.log(payload);\n        if (payload !== null ) {\n            state.singleUser = payload;\n        }\n        // console.log(debug(state));\n      }),\n    editUser: thunk(async (actions, payload) => {\n      const {username, firstname, age, usertype} = {...payload};\n      console.log({...payload});\n      let url = \"\";\n      if (usertype === 'petowner') {\n        url = serverUrl + '/api/v1/petowner/' + username;\n        const {data} = await axios.put(url, {\n          username: username,\n          ownername: firstname,\n          age: age\n        });\n\n        actions.getUser(username);\n        actions.getDisplayedUser(username);\n      } else if (usertype === \"caretaker\") {\n        url = serverUrl + '/api/v1/caretaker/' + username;\n        const {data} = await axios.put(url, {\n          username: username,\n          carername: firstname,\n          age: age\n        });\n        actions.getUser(username);\n        actions.getDisplayedUser(username);\n      } else {\n        const url_po = serverUrl + '/api/v1/petowner/' + username;\n        const url_ct = serverUrl + '/api/v1/caretaker/' + username;\n        await axios.put(url_po, {\n          username: username,\n          ownername: firstname,\n          age: age\n        });\n        await axios.put(url_ct, {\n          username: username,\n          carername: firstname,\n          age: age\n        });\n\n        actions.getUser(username);\n        actions.getDisplayedUser(username);\n      }\n    }),\n\n    getDisplayedUser: thunk(async (actions, payload) => {\n      const username = payload;\n      const url = serverUrl + \"/api/v1/users/\" + username;\n      const {data} = await axios.get(url);\n      actions.setDisplayedUser(data.data); \n    }), \n      setDisplayedUser: action((state, payload) => { // action\n        if (payload.user !== null ) {\n            state.displayedUser = payload.user;\n        }\n        // console.log(debug(state));\n      }),\n\n    allUsers: [],\n    getAllUsers: thunk(async (actions, payload) => {\n      const url = serverUrl + \"/api/v1/users\"\n      const {data} = await axios.get(url);\n      actions.setAllUsers(data.data);\n    }),\n    setAllUsers: action((state, payload) => {\n      if(payload.users !== null) {\n        state.allUsers = payload.users;\n      }\n    })\n\n}\n\nexport default userModel;\n","import { action, thunk, debug } from 'easy-peasy';\nimport {serverUrl} from \"./serverUrl\"\nimport axios from 'axios';\nimport { convertDate, sqlToJsDate } from '../../utils';\n\n\nconst bidModel = {\n    userBids: [],\n    petOwnerBids: [],\n\n    addBid: thunk(async (actions, payload) => {\n      const {pouname, petname, pettype, ctuname, s_time, e_time, pay_type, pet_pickup} = {...payload};\n      const url = serverUrl + \"/api/v1/bid\";\n      const data = await axios.post(url, {\n        pouname: pouname,\n        petname: petname,\n        pettype: pettype,\n        ctuname: ctuname,\n        s_time: s_time,\n        e_time: e_time,\n        pay_type: pay_type,\n        pet_pickup: pet_pickup\n      }).then((res) => {\n        console.log(res)\n        alert(\"Bid successful\");\n      }).catch((err) => {\n        alert(\"Bid unsuccessful\");\n        console.log(err);\n      })\n    }),\n\n    addReviewToBid: thunk(async(actions, payload) => {\n      const { bid, rating, review } = {... payload};\n      const url = serverUrl + \"/api/v1/bid\";\n      const { data } = await axios.put(url, {\n        pouname: bid.pouname,\n        petname: bid.petname,\n        pettype: bid.pettype,\n        ctuname: bid.ctuname,\n        s_time: convertDate(sqlToJsDate(bid.s_time)),\n        e_time: convertDate(sqlToJsDate(bid.e_time)),\n        pay_type: bid.pay_type,\n        pet_pickup: bid.pet_pickup,\n        rating: rating,\n        review: review,\n        pay_status: bid.pay_status\n      });\n      actions.modifyBidReview(payload);\n    }),\n    modifyBidReview: action((state, payload) => {\n      state.petOwnerBids.map((bid) => {\n        if (bid.pouname == payload.bid.pouname &&\n            bid.petname == payload.bid.petname &&\n            bid.pettype == payload.bid.pettype &&\n            bid.ctuname == payload.bid.ctuname &&\n            bid.s_time == payload.bid.s_time &&\n            bid.e_time == payload.bid.e_time) {\n              bid.rating = payload.rating;\n              bid.review = payload.review;\n            }\n      })\n    }), \n\n    // Get bids for a caretaker\n    getUserBids: thunk(async(actions, payload) => {\n        const ctuname = payload;\n        const url = serverUrl + \"/api/v1/bid/\" + ctuname + \"/ct\";\n        console.log(url)\n        const {data} = await axios.get(url);\n        actions.setUserBids(data.data.bids);\n    }),\n    setUserBids: action((state, payload) => { // action\n        state.userBids = [...payload];\n    }),\n\n    getPetOwnerBids: thunk(async(actions, payload) => {\n      const pouname = payload;\n      const url = serverUrl + \"/api/v1/bid/\" + pouname + \"/po\";\n      console.log(url)\n      const {data} = await axios.get(url);\n      actions.setPetOwnerBids(data.data.bids);\n  }),\n  setPetOwnerBids: action((state, payload) => { // action\n      state.petOwnerBids = [...payload];\n  }),\n\n    \n    acceptBid: thunk(async(actions, payload) => {\n      const {pouname, petname, pettype, ctuname, s_time, e_time, pay_type, pet_pickup} = {...payload};\n      const url = serverUrl + \"/api/v1/bid/\" + ctuname + \"/\" + pouname + \"/mark\";\n      console.log(url);\n      console.log({\n        petname: petname,\n        pettype: pettype,\n        s_time: convertDate(sqlToJsDate(s_time)),\n        e_time: convertDate(sqlToJsDate(e_time))\n    });\n      const { data } = await axios.put(url, {\n          petname: petname,\n          pettype: pettype,\n          s_time: convertDate(sqlToJsDate(s_time)),\n          e_time: convertDate(sqlToJsDate(e_time))\n      });\n      actions.modifyBidStatus(payload);\n    }),\n    modifyBidStatus: action((state, payload) => {\n      console.log(payload);\n      state.userBids.map((bid) => {\n        if (bid.pouname == payload.pouname &&\n            bid.petname == payload.petname &&\n            bid.pettype == payload.pettype &&\n            bid.ctuname == payload.ctuname &&\n            bid.s_time == payload.s_time &&\n            bid.e_time == payload.e_time) {\n              bid.is_win = true;\n            }\n      })\n    }), \n    makePayment: thunk(async(actions, payload) => {\n      const {pouname, petname, pettype, ctuname, s_time, e_time, pay_type, pet_pickup} = {...payload};\n      const url = serverUrl + \"/api/v1/bid/\" + ctuname + \"/\" + pouname + \"/pay\";\n      console.log(url);\n      console.log({\n        petname: petname,\n        pettype: pettype,\n        s_time: convertDate(sqlToJsDate(s_time)),\n        e_time: convertDate(sqlToJsDate(e_time))\n    });\n      const { data } = await axios.put(url, {\n          petname: petname,\n          pettype: pettype,\n          s_time: convertDate(sqlToJsDate(s_time)),\n          e_time: convertDate(sqlToJsDate(e_time))\n      });\n      actions.modifyPayStatus(payload);\n    }),\n    modifyPayStatus: action((state, payload) => {\n      console.log(payload);\n      state.petOwnerBids.map((bid) => {\n        if (bid.pouname == payload.pouname &&\n            bid.petname == payload.petname &&\n            bid.pettype == payload.pettype &&\n            bid.ctuname == payload.ctuname &&\n            bid.s_time == payload.s_time &&\n            bid.e_time == payload.e_time) {\n              bid.pay_status = true;\n            }\n      })\n    }), \n    \n}\n\nexport default bidModel;\n","import { action, thunk, debug } from 'easy-peasy';\nimport { serverUrl } from \"./serverUrl\"\nimport axios from 'axios';\nimport {convertDate} from \"../../utils\"\n\nconst adminModel = {\n    singleCaretakerSalary: [],\n    partTimerSalary: [],\n    fullTimerSalary: [],\n    singleAccount: [],\n\n    getNewAdminAccount: thunk(async (actions, payload) => {\n      const username = payload;\n      const url = serverUrl + \"/api/v1/accounts/\" + username;\n      await axios.get(url).then(response => {\n        // console.log(response.data.data);\n        if (response.data.data.account != null) {\n          alert('Username already exists in the database!')\n        } else {\n          // console.log(\"here\");\n          return response.data.data.account;\n        }\n      }).catch((error) => {\n        alert(\"Please choose a different username!\");\n      })\n    }),\n    getAccount: thunk(async (actions, payload) => {\n    const username = payload;\n    const url = serverUrl + \"/api/v1/accounts/\" + username;\n    const data = await axios.get(url).then(response => {\n      // console.log(response);\n      if (response.data.status === \"success\") {\n        return response.data.data.account;\n      } else {\n        alert('Username does not exist in the database!');\n      }\n    }).catch((error) => {\n      alert(\"Please choose a different username!\");\n    });\n\n    console.log(data);\n    actions.setAccount(data); \n    }), \n    setAccount: action((state, payload) => { // action\n      // console.log(payload);\n      if (payload !== null ) {\n          state.singleAccount = payload;\n      }\n      // console.log(debug(state));\n    }),\n    addAdmin: thunk(async (actions, payload) => {\n      // console.log(payload);\n      const {username, adminname} = {...payload};\n      const data = await axios.post(serverUrl + \"/api/v1/pcsadmin\", {\n          username: username,\n          adminname: adminname,\n      }).then(response => {\n        alert(\"Admin added!\");\n      })\n    }),\n\n    getSingleCaretakerSalary: thunk(async (actions, payload) => {\n        const { ctuname, s_time, e_time } = { ...payload };\n        const url = serverUrl + \"/api/v1/admin/salary/\" + ctuname + \"/\" + convertDate(s_time) + \"/\" + convertDate(e_time);\n        const {data} = await axios.get(url);\n        actions.setSingleCaretakerSalary(data.data); \n      }), \n      setSingleCaretakerSalary: action((state, payload) => { // action\n        if (payload.salary !== null ) {\n            state.singleCaretakerSalary = payload.salary;\n        }\n      }),\n      getPartTimerSalary: thunk(async (actions, payload) => {\n        const { s_time, e_time } = { ...payload };\n        const url = serverUrl + \"/api/v1/admin/salary/parttimers/\" + convertDate(s_time) + \"/\" + convertDate(e_time);\n        const {data} = await axios.get(url);\n        console.log(url)\n        actions.setPartTimerSalary(data.data); \n      }), \n      setPartTimerSalary: action((state, payload) => { // action\n        if (payload.salaries !== null ) {\n            state.partTimerSalary = payload.salaries;\n        }\n      }),\n      getFullTimerSalary: thunk(async (actions, payload) => {\n        const { s_time, e_time } = { ...payload };\n        const url = serverUrl + \"/api/v1/admin/salary/fulltimers/\" + convertDate(s_time) + \"/\" + convertDate(e_time);\n        const {data} = await axios.get(url);\n        actions.setFullTimerSalary(data.data); \n      }), \n      setFullTimerSalary: action((state, payload) => { // action\n        if (payload.salaries !== null ) {\n            state.fullTimerSalary = payload.salaries;\n        }\n      }),\n}\n\nexport default adminModel;\n","import React, { useState, useEffect } from 'react'\nimport { Button, Typography, InputLabel, Select, MenuItem, FormControl, FormControlLabel, Switch } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport { DateRangePicker } from 'react-date-range';\nimport { addDays, addYears, eachDayOfInterval, toDate } from 'date-fns';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport {convertDate} from '../../../utils';\nimport ViewAllCaretakers from '../../admin/ViewAllCaretakers';\nimport store from \"../../../store/store\"\n\nconst handleSelect = (ranges) => {\n    console.log(ranges);\n}\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: 'absolute',\n        width: 650,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    buttonRow: {\n        left: \"50%\",\n        transform: \"translateX(60%)\",\n    },\n    button: {\n        marginLeft: 10\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\n\nconst paymentTypes = {\n    'Credit Card': 'credit card',\n    'Cash': 'cash',\n}\n\nconst pickupTypes = {\n    'Delivery by Owner': 'poDeliver',\n    'Caretaker Pickup': 'ctPickup',\n    'Transfer Pet': 'transfer'\n}\n\nconst BidModal = (props) => {\n    const classes = useStyles();\n    const { closeModal, submitData, petType, ctuname, ...other } = props\n    const [dateRange, setDateRange] = useState([\n        {\n            startDate: new Date(),\n            endDate: addDays(new Date(), 7),\n            key: 'selection'\n        }\n    ]);\n    const minDate = new Date();\n    const maxDate = addYears(minDate, 2);\n    const [petChoice, setPetChoice] = useState(\"\")\n    const [paymentType, setPaymentType] = useState(\"\")\n    const [pickupType, setPickupType] = useState(\"\")\n    const [disabledDates, setDisabledDates] = useState([]);\n    const singleUser = useStoreState(state => state.user.singleUser);\n    const getOwnerPetsOfType = useStoreActions(actions => actions.pets.getOwnerPetsOfType);\n    const biddablePets = useStoreState(state => state.pets.biddablePets);\n    const getUserAvailability = useStoreActions(actions => actions.careTakers.getUserAvailability);\n    const userAvailability = useStoreState(state => state.careTakers.availability);\n    const addBid = useStoreActions(actions => actions.bids.addBid);\n    // console.log(props.petType)\n    // console.log(props.ctuname);\n\n    const findDisabledDates = (enabledRanges) => {\n        var tempDisabledDates = eachDayOfInterval({ start: minDate, end: maxDate });\n        var allEnabledDates = []\n        for (var enabledRange of enabledRanges) {\n            // console.log(enabledRange.s_time);\n            // console.log(enabledRange.e_time);\n            var daysOfInterval = eachDayOfInterval({ start: new Date(enabledRange.s_time), end: new Date(enabledRange.e_time)})\n            allEnabledDates = allEnabledDates.concat(daysOfInterval);\n        }\n        // console.log(allEnabledDates)\n        tempDisabledDates = tempDisabledDates.filter(function(x) {return !allEnabledDates.find(y => y.getTime() === x.getTime())})\n        setDisabledDates(tempDisabledDates);\n    }\n\n    useEffect(() => {\n        getOwnerPetsOfType({\n            username: singleUser.username,\n            pettype: props.petType\n        })\n        getUserAvailability({\n            ctuname: props.ctuname,\n            s_time: minDate,\n            e_time: maxDate\n        }).then((result) => {\n                // console.log(userAvailability)\n                const currAvailability = store.getState().careTakers.availability;\n                findDisabledDates(currAvailability)\n            })\n        return () => {};\n    }, [])\n\n    const paramsIsValid = () => {\n        if (petChoice == \"\") {\n            alert(\"Please select a pet\");\n            return false;\n        }\n        if (paymentType == \"\") {\n            alert(\"Please choose a payment type.\");\n            return false;\n        }\n        if (pickupType == \"\") {\n            alert(\"Please choose a pickup type\");\n            return false;\n        }\n        return true;\n    }\n\n    const handleSubmit = () => {\n        const startDateInt = convertDate(dateRange[0].startDate);\n        const endDateInt = convertDate(dateRange[0].endDate);\n        if (!paramsIsValid()) {\n            return;\n        }\n        addBid({\n            pouname: singleUser.username,\n            petname: petChoice,\n            pettype: props.petType,\n            ctuname: props.ctuname,\n            s_time: startDateInt,\n            e_time: endDateInt,\n            pay_type: paymentType,\n            pet_pickup: pickupType\n        })\n        closeModal();\n       \n    }\n    return (\n        <div className={classes.paper}>\n            <Typography id=\"simple-modal-title\" variant=\"h5\">Select desired dates</Typography>\n            <DateRangePicker\n                id=\"form-datepicker\"\n                onChange={item => setDateRange([item.selection])}\n                showSelectionPreview={true}\n                moveRangeOnFirstSelection={false}\n                ranges={dateRange}\n                direction=\"horizontal\"\n                minDate = {minDate}\n                maxDate={maxDate}\n                disabledDates={disabledDates}\n            />\n\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"form-pet-choice-label\">Pet for Care</InputLabel>\n                <Select\n                    labelId=\"form-pet-choice-label\"\n                    id=\"form-pet-choice-select\"\n                    value={petChoice}\n                    onChange={(event) => setPetChoice(event.target.value)}\n                    autoWidth\n                >\n                    {biddablePets.map((choiceOfPet) => {\n                        return <MenuItem value={choiceOfPet.petname}>{choiceOfPet.petname}</MenuItem>\n                    })}\n                </Select>\n            </FormControl>\n\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"form-payment-type-choice-label\">Payment Type</InputLabel>\n                <Select\n                    labelId=\"form-payment-type-choice-label\"\n                    id=\"form-payment-type-choice-select\"\n                    value={paymentType}\n                    onChange={(event) => setPaymentType(event.target.value)}\n                    autoWidth\n                >\n                    {Object.entries(paymentTypes)\n                        .map(([choiceOfPaymentKey, choiceOfPaymentValue]) => {\n                            return <MenuItem value={choiceOfPaymentValue}>{choiceOfPaymentKey}</MenuItem>\n                        })}\n                </Select>\n            </FormControl>\n\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"form-pickup-type-choice-label\">Pickup Type</InputLabel>\n                <Select\n                    labelId=\"form-pickup-type-choice-label\"\n                    id=\"form-pickup-type-choice-select\"\n                    value={pickupType}\n                    onChange={(event) => setPickupType(event.target.value)}\n                    autoWidth\n                >\n                    {Object.entries(pickupTypes)\n                        .map(([choiceOfPickupKey, choiceOfPickupValue]) => {\n                            return <MenuItem value={choiceOfPickupValue}>{choiceOfPickupKey}</MenuItem>\n                        })}\n                </Select>\n            </FormControl>\n\n            {/* <Typography>\n                {userAvailability || \"hello\" }\n            </Typography> */}\n\n            <div className={classes.buttonRow}>\n                <Button className={classes.button}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() => handleSubmit()}>\n                    Confirm\n                </Button>\n                <Button className={classes.button}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    onClick={props.closeModal}>\n                    Cancel\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default BidModal\n","import React, { useState, useEffect } from 'react'\nimport { Card, Typography, Grid, Modal, Button, FormControl, FormControlLabel, FormLabel, Switch } from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport BidList from \"./BidList\"\nimport { isEmpty } from \"lodash\"\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport BidModal from '../userProfile/careTakerProfile/BidModal';\nimport { sqlToJsDate, convertDate } from '../../utils';\n\nconst useStyles = makeStyles({\n    root: {\n        padding: 30,\n        marginTop: 20\n    },\n    calendar: {\n        width: \"100%\",\n        height: \"100%\",\n        padding: \"30px 20px 50px\"\n    },\n    list: {\n        height: 600\n    }, \n    sectionHeader:{\n        marginLeft: 12\n    }\n})\n\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nconst BidPanel = (props) => {\n    const classes = useStyles()\n    const [date, setDate] = useState(new Date());\n    const [selectedBid, setSelectedBid] = useState({});\n    const [open, setOpen] = useState(false);\n    const getUserBids = useStoreActions(actions => actions.bids.getUserBids);\n    const bidList = useStoreState(state => state.bids.userBids);\n    const acceptBid = useStoreActions(actions => actions.bids.acceptBid);\n\n    const openModal = () => {\n        setOpen(true);\n    }\n\n    const closeModal = () => {\n        setOpen(false);\n    }\n\n    const submitData = (selectedVals) => {\n        console.log(selectedVals);\n        setOpen(false);\n    }\n\n    const handleSelectedBid = (newSelectedBid) => {\n        setSelectedBid(newSelectedBid)\n    }\n\n    const updateBidStatus = (bidInfo) => {\n        console.log(\"Changing bid status on backend!\")\n        acceptBid({\n            pouname: bidInfo.pouname,\n            petname: bidInfo.petname,\n            pettype: bidInfo.pettype,\n            ctuname: bidInfo.ctuname,\n            s_time: bidInfo.s_time,\n            e_time: bidInfo.e_time\n        })\n        \n    }\n\n    const dateHasBid = (date) => {\n        let result = false;\n        bidList.forEach(function(bid) {\n            if(sqlToJsDate(bid.s_time) <= date && sqlToJsDate(bid.e_time) >= date) {\n                result = true;\n            }\n        })\n        return result;\n    }\n\n    useEffect(() => {\n        getUserBids(props.username);\n        return () => {};\n    }, [])\n\n\n    return (\n        <div>\n            <Grid container>\n                <Grid item xs={8}>\n                    <Calendar className={classes.calendar}\n                        tileDisabled={({activeStartDate, date, view }) => !dateHasBid(date)}\n                        onChange={(res) => {\n                            setSelectedBid({})\n                            setDate(res)\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    <Typography variant='h6' className={classes.sectionHeader}>Current year bids</Typography>\n                    <BidList\n                        subheader={months}\n                        bids={bidList}\n                        onClick={handleSelectedBid}\n                    />\n                </Grid>\n            </Grid>\n            {bidList\n                .filter((bidInfo) => !isEmpty(selectedBid)\n                    ? (\n                        bidInfo.pouname === selectedBid.pouname &&\n                        bidInfo.petname === selectedBid.petname &&\n                        bidInfo.pettype === selectedBid.pettype &&\n                        bidInfo.ctuname === selectedBid.ctuname &&\n                        bidInfo.s_time === selectedBid.s_time &&\n                        bidInfo.e_time === selectedBid.e_time\n                    )\n                    : (date <= sqlToJsDate(bidInfo.e_time) && date >= sqlToJsDate(bidInfo.s_time)))\n                .map((bidInfo) => (\n                    <Card className={classes.root}>\n                        <Typography variant=\"h4\">\n                            Bid Details\n                        </Typography>\n                        <Typography variant=\"h6\">\n                            User: {bidInfo.pouname}\n                        </Typography>\n                        <Typography variant=\"h6\">\n                            Pet: {bidInfo.petname} ({bidInfo.pettype})\n                        </Typography>\n                        <Typography variant=\"h6\">\n                            Caretaker: {bidInfo.ctuname}\n                        </Typography>\n                        <Typography variant=\"h6\">\n                            Duration: {sqlToJsDate(bidInfo.s_time).toDateString()} to {sqlToJsDate(bidInfo.e_time).toDateString()}\n                        </Typography>\n                        <Typography variant=\"h6\">\n                            Price: ${bidInfo.cost.toFixed(2)}\n                        </Typography>\n                        <Typography variant=\"h6\">\n                            Pickup Method: {bidInfo.pet_pickup == 'poDeliver' ? \"Pet Owner Deliver\" \n                                            : bidInfo.pet_pickup == 'ctPickup' ? \"Caretaker Pickup\" \n                                            : bidInfo.pet_pickup == 'transfer' ? \"Transfer\" : null}\n                        </Typography>\n                        <br />\n\n                        <FormControl>\n                            <FormLabel color=\"primary\" focused>Accept bid?</FormLabel>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={bidInfo.is_win == true ? true : false}\n                                        onChange={(event) => updateBidStatus(bidInfo)}\n                                        color=\"primary\"\n                                    />\n                                }\n                                label={bidInfo.is_win ? \"Bid Accepted\" : \"Pending\"}\n                            />\n                        </FormControl>\n                    </Card>\n                ))}\n            {/* <Button variant=\"contained\" onClick={openModal} color=\"primary\">\n                Create Bid (temp)\n            </Button>\n            <Modal\n                open={open}\n                onClose={closeModal}>\n                <BidModal closeModal={closeModal} submitData={submitData} />\n            </Modal> */}\n        </div>\n    )\n}\n\nexport default BidPanel\n","import { Chip, FormControl, Input, InputLabel, NativeSelect, Select, FormHelperText, TextField, Typography} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(3),\n        marginLeft: 0\n    },\n    textfield: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nconst PetTypeInput = (props) => {\n    const [petType, setPetType] = useState();\n    const [price, setPrice] = useState();\n    const {parentType, parentPrice, setParentPrice, label, isFT, ...other} = props;\n    const getPetCategories = useStoreActions(actions => actions.pets.getPetCategories);\n    const petCategories = useStoreState(state => state.pets.petCategories);\n\n\n    const handleChange = (event) => {\n        const price = retrieveBasePrice(event.target.value)\n        setPetType(event.target.value);\n        setPrice(price);\n        setParentPrice(price);\n        parentType(event);\n    }\n\n    const handlePriceChange = (event) => {\n        setPrice(event.target.value);\n        parentPrice(event);\n    }\n\n    const retrieveBasePrice = (pettype) => {\n        let basePrice = 0\n        petCategories.forEach((petCat) => {\n            if (petCat.pettype == pettype) {\n                console.log(petCat)\n                basePrice = petCat.base_price;\n            }\n        })\n        return basePrice\n    }\n\n    useEffect(() => {\n        getPetCategories();\n        return () => {};\n    }, [])\n\n    const classes = useStyles();\n    return (\n        <div>\n            <FormControl required variant=\"outlined\" fullWidth className={classes.formControl} >\n                <InputLabel htmlFor='select-caretaker-petType'>{props.label}</InputLabel>\n                    <Select\n                        native\n                        value={petType}\n                        label={props.label}\n                        onChange={handleChange}\n                        inputProps={{\n                            name: 'pettype',\n                            id: 'select-caretaker-petType',\n                        }}\n                    >\n                        <option aria-label=\"None\" value=\"\" />\n                        {petCategories.map((type) => (\n                                <option key={type.pettype} value={type.pettype}>\n                                    {type.pettype}\n                                </option>\n                        ))}\n                    </Select>\n            </FormControl>\n            <Typography> Price per day (in $): </Typography>\n            <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                value={price}\n                id=\"price\"\n                autoComplete=\"price\"\n                autoFocus\n                disabled={isFT}\n                type=\"number\"\n                className={classes.textfield}\n                onChange={handlePriceChange}\n            />\n                    \n        </div>\n    )\n}\nPetTypeInput.propTypes = {\n    parentCallback: PropTypes.func,\n    label: PropTypes.string\n};\nPetTypeInput.defaultProps = {\n    parentCallback: function() {\n        console.log(\"There is no parent callback function defined\");\n    },\n    label: \"Pet Types\"\n}\n\nexport default PetTypeInput\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Typography, Button, Grid, Card, Modal, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText} from '@material-ui/core';\nimport store from \"../../store/store\";\nimport { DateRangePicker } from 'react-date-range';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BidModal from '../userProfile/careTakerProfile/BidModal';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport PetTypeInput from '../PetTypeInput';\nimport { v4 } from 'uuid';\nimport { eachDayOfInterval } from 'date-fns';\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        width: \"40%\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: 'absolute',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    priceText: {\n        marginRight: theme.spacing(25),\n        textAlign: \"right\"\n    },\n    lucrativeCard: {\n        marginTop: 30,\n        padding: 20\n    },\n}))\n\nconst PetCareList = (props) => {\n    const { userType, username, ...other} = props;\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [addCareOpen, setCareOpen] = useState(false);\n    const [petType, setPetType] = useState(\"\");\n    const [petPrice, setPetPrice] = useState(\"\");\n    const [bidPetType, setBidPetType] = useState(\"\");\n    const singleUser = useStoreState(state => state.user.singleUser);\n    const getPetCareList = useStoreActions(actions => actions.careTakers.getPetCareList);\n    const addPetCareItem = useStoreActions(actions => actions.careTakers.addPetCareItem);\n    const deletePetCareItem = useStoreActions(actions => actions.careTakers.deletePetType);\n    const petCareList = useStoreState(state => state.careTakers.petCareList);\n    const [openLucativeModal, setOpenLucrativeModal] = useState(false);\n    const [dateRange, setDateRange] = useState([\n        {\n            startDate: new Date(),\n            endDate: new Date(),\n            key: \"selection\"\n        }\n    ]);\n    const getMostLucrativeCategories = useStoreActions(actions => actions.careTakers.getMostLucrativeCategories);\n    const [mostLucrativeCategories, setMostLucrativeCategories] = useState([]);\n\n    const openLucrativeModal = () => {\n        setOpenLucrativeModal(true);\n    }\n    \n    const closeLucrativeModal = () => {\n        setOpenLucrativeModal(false);\n    }\n\n    const handleSubmit = async () => {\n        await getMostLucrativeCategories({\n            ctuname: props.username,\n            s_time: dateRange[0].startDate, \n            e_time: dateRange[0].endDate\n        })\n\n        const mostLucrativeCategories = store.getState().careTakers.mostLucrativeCategories;\n        setMostLucrativeCategories(mostLucrativeCategories);\n        setOpenLucrativeModal(false);\n    }\n\n    const openModal = (bidPet) => {\n        setBidPetType(bidPet);\n        setOpen(true);\n    }\n    \n    const closeModal = () => {\n        setOpen(false);\n    }\n\n    const openCareModal = () => {\n        setCareOpen(true);\n    }\n    const closeCareModal = () => {\n        setCareOpen(false);\n    }\n\n    const onPetPriceSet = (event) => {\n        setPetPrice(event.target.value);\n    }\n\n    const onPetTypeSet = (event) => {\n        setPetType(event.target.value);\n    }\n\n    const handleAddNewPet = (event) => {\n        closeCareModal();\n        console.log({\n            pettype: petType,\n            price: parseInt(petPrice)\n        })\n        addPetCareItem({\n            username: username,\n            pettype: petType,\n            price: parseInt(petPrice)\n        })\n    }\n\n    useEffect(() => {\n        getPetCareList(username)\n        return () => {};\n    }, [])\n\n\n    return (\n        <div>\n            {userType=='ct' ? <>\n            <Button className={classes.button}\n                variant='outlined'\n                onClick={openLucrativeModal}>\n                Click to find most Lucrative Pet Categories in the past! (Select a timeframe)\n            </Button>\n            <Card className={classes.lucrativeCard}>\n                <Typography variant='h5'> Categories and Lucrative Score: \n                {mostLucrativeCategories.length == 0 \n                    ? <Typography>There is no available data! </Typography> \n                    : mostLucrativeCategories.map(category => {\n                    return (<h6>Category of pet: {category.pettype} - Lucrative Score: {category.lucrative_score}</h6>)\n                })}</Typography>\n            </Card>\n            <Modal\n                open={openLucativeModal}\n                onClose={closeLucrativeModal}>\n                <Card className = {classes.modal}>\n                    <Grid item xs={12}>\n                    <DateRangePicker\n                        id=\"form-datepicker\"\n                        onChange={item => {\n                            console.log(item);\n                            setDateRange([{\n                                startDate: item.selection.startDate,\n                                endDate: item.selection.endDate,\n                                key: item.selection.key\n                            }]);\n                         \n                        }}\n                        showSelectionPreview={true}\n                        moveRangeOnFirstSelection={false}\n                        ranges={dateRange}\n                        // disabledDay ={(day) => {return day > new Date()}}\n                        direction=\"horizontal\"\n                    />\n                    </Grid>\n                    <Button className={classes.button}\n                        variant=\"outlined\"\n                        fullWidth\n                        color=\"primary\"\n                        onClick={() => handleSubmit()}>\n                        Look for most Lucrative Pet Categories in this timeframe!\n                    </Button>\n                </Card>\n            </Modal>\n            </> : null }\n            <List>\n                {petCareList.map((careItem) => (\n                <>\n                <ListItem key={v4()}>\n                <ListItemAvatar>\n                    <Avatar>\n                      <PetsIcon />\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={careItem.pettype}\n                />\n                <ListItemText className={classes.priceText}\n                    primary={`$${careItem.price}/day`}\n                />\n                {userType == 'ct' ? \n                <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deletePetCareItem({username: username, pettype: careItem.pettype})}>\n                      <DeleteIcon />\n                    </IconButton>\n                </ListItemSecondaryAction> : null } \n                {userType == 'po' ? \n                <ListItemSecondaryAction>\n                    <IconButton onClick={() => openModal(careItem.pettype)}>\n                        <ListItemText  \n                            primary=\"Bid\"/>\n                    </IconButton>\n                </ListItemSecondaryAction> : null }\n                </ListItem>\n                 </>\n                ))}\n                {userType == 'ct' ?\n                <ListItem button onClick={openCareModal}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <AddIcon/>\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary=\"Click to add new pet\"\n                    />\n                </ListItem> : null }\n            </List>\n            <Modal\n                open={open}\n                onClose={closeModal}>\n                <BidModal ctuname={props.username} petType={bidPetType} closeModal={closeModal}/>\n            </Modal>\n            <Modal\n                open={addCareOpen}\n                onClose={closeCareModal}>\n                <Card className={classes.modal}>\n                    <PetTypeInput parentType={onPetTypeSet} parentPrice={onPetPriceSet} setParentPrice={setPetPrice} isFT={singleUser.is_fulltimer}/>\n                    <Button onClick={handleAddNewPet} color=\"primary\"> Add new pet type </Button>\n                </Card>\n            </Modal>\n        </div>\n    )\n}\n\nexport default PetCareList\n","import { Chip, FormControl, Input, InputLabel, NativeSelect, Select, FormHelperText, TextField, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { convertDate } from '../utils';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(3),\n        marginLeft: 0\n    },\n    textfield: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nconst Availability = (props) => {\n    const {setP1StartDate, setP1EndDate, setP2StartDate, setP2EndDate} = props;\n\n    const classes = useStyles();\n    return (\n        <div>\n            <Typography align=\"center\" >Please enter two periods of 150 days each within a one year time frame.</Typography> \n            <TextField\n                variant=\"outlined\"\n                label=\"Enter your period 1 start date in YYYYMMDD\"\n                required\n                fullWidth\n                id=\"startDate\"\n                autoComplete=\"startdate\"\n                autoFocus\n                type=\"number\"\n                className={classes.textfield}\n                onChange={(event) => setP1StartDate(event.target.value)}\n            />\n            <TextField\n                variant=\"outlined\"\n                label=\"Enter your period 1 end date YYYYMMDD\"\n                required\n                fullWidth\n                id=\"endDate\"\n                autoComplete=\"enddate\"\n                autoFocus\n                type=\"number\"\n                className={classes.textfield}\n                onChange={(event) => setP1EndDate(event.target.value)}\n            />\n            <TextField\n                variant=\"outlined\"\n                label=\"Enter your period 2 start date in YYYYMMDD\"\n                required\n                fullWidth\n                id=\"startDate\"\n                autoComplete=\"startdate\"\n                autoFocus\n                type=\"number\"\n                className={classes.textfield}\n                onChange={(event) => setP2StartDate(event.target.value)}\n            />\n            <TextField\n                variant=\"outlined\"\n                label=\"Enter your period 2 end date YYYYMMDD\"\n                required\n                fullWidth\n                id=\"endDate\"\n                autoComplete=\"enddate\"\n                autoFocus\n                type=\"number\"\n                className={classes.textfield}\n                onChange={(event) => setP2EndDate(event.target.value)}\n            />\n                    \n        </div>\n    )\n}\n\nexport default Availability\n","import React, { useState, useEffect } from 'react'\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { v4 } from 'uuid';\nimport { Avatar, Button, Grid, IconButton, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, TextField, Typography } from '@material-ui/core';\nimport { sqlToJsDate, differenceInTwoDates, stringToJsDate, isValidStringDate } from '../../utils';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Availability from '../Availability';\n\nconst useStyles = makeStyles((theme) => ({\n    textfield: {\n        marginRight: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        marginTop: theme.spacing(3),\n        width: \"40%\"\n    },\n}));\n\nconst CaretakerAvailability = (props) => {\n    const classes = useStyles();\n    const [startDate, setStartDate] = useState(\"\");\n    const [endDate, setEndDate] = useState(\"\");\n    const [p2startDate, setP2StartDate] = useState(\"\");\n    const [p2endDate, setP2EndDate] = useState(\"\");\n    const singleUser = useStoreState(state => state.user.singleUser);\n    const addFulltimerAvailability = useStoreActions(actions => actions.careTakers.addFullTimeCareTaker);\n    const userAvailability = useStoreState(state => state.careTakers.availability);\n    const getUserAvailability = useStoreActions(actions => actions.careTakers.getUserAvailability);\n    const addUserAvailability = useStoreActions(actions => actions.careTakers.addUserAvailability);\n    const deleteUserAvailability = useStoreActions(actions => actions.careTakers.deleteUserAvailability);\n\n    useEffect(() => {\n        getUserAvailability({\n            ctuname: props.username,\n            s_time: new Date(),\n            e_time: new Date(new Date().setDate(new Date().getDate() + 730)), //two years from now\n        });\n        return () => {};\n    }, []);\n\n    const validateDates = () => {\n        if (startDate.length != 8 || endDate.length != 8) {\n            alert(\"Please enter date in the format YYYYMMDD\")\n            return false;\n        }\n        if (stringToJsDate(startDate) > stringToJsDate(endDate)) {\n            alert(\"Please enter a start date that is before the end date\")\n            return false;\n        }\n        if (!(isValidStringDate(startDate) && isValidStringDate(endDate))) {\n            alert(\"Invalid date entered. Please enter in the format YYYYMMDD\")\n            return false;\n        }\n        if (stringToJsDate(startDate) < new Date()) {\n            alert(\"Please enter a start date in the future.\")\n            return false;\n        }\n        if (singleUser.is_fulltimer) {\n            if (p2startDate.length != 8 || p2endDate.length != 8) {\n                alert(\"Please enter date in the format YYYYMMDD\")\n                return false;\n            }\n            if (stringToJsDate(p2startDate) > stringToJsDate(p2endDate)) {\n                alert(\"Please enter a start date that is before the end date\")\n                return false;\n            }\n            if (!(isValidStringDate(p2startDate) && isValidStringDate(p2endDate))) {\n                alert(\"Invalid date entered. Please enter in the format YYYYMMDD\")\n                return false;\n            }\n            if (stringToJsDate(p2startDate) < new Date()) {\n                alert(\"Please enter a start date in the future.\")\n                return false;\n            }\n            const dayDifference = differenceInTwoDates(startDate, endDate)\n            const p2dayDifference = differenceInTwoDates(p2startDate, p2endDate);\n            if (dayDifference < 150 || p2dayDifference < 150) {\n                alert(\"You need to add an availability period of at least 150 days\")\n                return false;\n            }\n            if (differenceInTwoDates(startDate, p2endDate) > 365) {\n                alert(\"The two availabilities need to occur within a one year time frame.\")\n                return false;\n            }\n        }\n        return true;\n    }  \n    const handleAddAvailability = () => {\n        const result = validateDates();\n        if (!result) {\n            return;\n        }\n        if (props.isFT) {\n            //use the add fulltimer instead\n            addFulltimerAvailability({\n                username: props.username,\n                name: null,\n                age: null,\n                pettype: null,\n                price: null,\n                period1_s: startDate,\n                period1_e: endDate,\n                period2_s: p2startDate,\n                period2_e: p2endDate\n            })\n        } else {\n            addUserAvailability({\n                ctuname: props.username,\n                s_time: startDate,\n                e_time: endDate\n            })\n        }\n\n        setStartDate(\"\");\n        setEndDate(\"\");\n        setP2StartDate(\"\");\n        setP2EndDate(\"\");\n    }\n    const handleDeleteAvailability = (avail) => {\n        console.log(avail)\n        deleteUserAvailability({\n            ctuname: props.username,\n            s_time: avail.s_time,\n            e_time: avail.e_time\n        })\n    }\n    return (\n        <div>\n            <Typography> Your availability in the next two years: </Typography>\n            <List>\n            {userAvailability.map((avail) => {\n                return (\n                    <ListItem key={v4()}>\n                        <ListItemAvatar>\n                            <Avatar>\n                                <DateRangeIcon/>\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText primary= {`${sqlToJsDate(avail.s_time).toDateString()} to ${sqlToJsDate(avail.e_time).toDateString()}`}/>\n                        <ListItemSecondaryAction>\n                        {!props.isFT ?\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>handleDeleteAvailability(avail)}>\n                                <DeleteIcon />\n                            </IconButton> : null }\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                )\n            })}\n            </List>\n            <Typography> Add new availability here: </Typography>\n            {props.isFT ? <Availability setP1StartDate={setStartDate} setP1EndDate={setEndDate} \n                                        setP2StartDate={setP2StartDate} setP2EndDate={setP2EndDate}/> \n            : <>\n            <TextField\n                variant=\"outlined\"\n                label=\"Enter start date in YYYYMMDD\"\n                required\n                id=\"startDate\"\n                autoComplete=\"startdate\"\n                autoFocus\n                type=\"number\"\n                className={classes.textfield}\n                onChange={(event) => setStartDate(event.target.value)}\n            />\n            <TextField\n                variant=\"outlined\"\n                label=\"Enter your end date YYYYMMDD\"\n                required\n                id=\"endDate\"\n                autoComplete=\"enddate\"\n                autoFocus\n                type=\"number\"\n                className={classes.textfield}\n                onChange={(event) => setEndDate(event.target.value)}\n            /></>}\n            <Button variant='outlined' color='primary' onClick={handleAddAvailability}>\n                Submit availability\n            </Button>\n        </div>\n    )\n}\n\nexport default CaretakerAvailability\n","import React, { useState, useEffect } from 'react'\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Card, FormControl, Grid, InputLabel, List, Select, Typography } from '@material-ui/core';\nimport { getStartEndOfMonth } from \"../../utils\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      marginTop: theme.spacing(5)\n    }, \n    summaryCard: {\n        marginTop: 30,\n        padding: 20\n    },\n    formControl: {\n      margin: theme.spacing(3),\n      marginLeft: 0,\n      marginBottom: theme.spacing(1) \n    },\n}));\n\nexport const Summary = (props) => {\n  const classes = useStyles();\n  const getSingleCaretakerPettypeSummary = useStoreActions(actions => actions.careTakers.getSingleCaretakerPettypeSummary);\n  const getSingleCaretakerPetownerSummary = useStoreActions(actions => actions.careTakers.getSingleCaretakerPetownerSummary);\n  const singleCaretakerPettypeSummary = useStoreState(state => state.careTakers.singleCaretakerPettypeSummary);\n  const singleCaretakerPetownerSummary = useStoreState(state => state.careTakers.singleCaretakerPetownerSummary);\n  const getSalary = useStoreActions(actions => actions.careTakers.getSingleCaretakerSalary);\n  const userSalary = useStoreState(state => state.careTakers.singleCaretakerSalary);\n  const [month, setMonth] = useState(new Date().getMonth());\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let dateRange = getStartEndOfMonth(month);\n  \n\n  useEffect(() => {\n    getSingleCaretakerPettypeSummary({\n      ctuname: props.username,\n      s_time: getStartEndOfMonth(month).s_time,\n      e_time: getStartEndOfMonth(month).e_time\n    });\n\n    getSingleCaretakerPetownerSummary({\n      ctuname: props.username,\n      s_time: getStartEndOfMonth(month).s_time,\n      e_time: getStartEndOfMonth(month).e_time\n    });\n    getSalary({\n      ctuname: props.username,\n      s_time: dateRange.s_time,\n      e_time: dateRange.e_time, \n  });\n\n    return () => {};\n  }, []);\n\n  const handleChangeMonth = async (event) => {\n    setMonth(event.target.value);\n  }\n\n  const getPetdaysSummary = async () => {\n    await getSingleCaretakerPettypeSummary({\n      ctuname: props.username,\n      s_time: getStartEndOfMonth(month).s_time,\n      e_time: getStartEndOfMonth(month).e_time\n    });\n\n    await getSingleCaretakerPetownerSummary({\n      ctuname: props.username,\n      s_time: getStartEndOfMonth(month).s_time,\n      e_time: getStartEndOfMonth(month).e_time\n    });\n  }\n\n  const handleChange = () => {\n    getPetdaysSummary();\n    dateRange = getStartEndOfMonth(month);\n    getSalary({\n      ctuname: props.username,\n      s_time: dateRange.s_time,\n      e_time: dateRange.e_time, \n  });\n\n  }\n\n  return (\n    <Grid className={classes.root}>\n    <Typography variant ='h5'> Monthly Summary Information for {getStartEndOfMonth(month).s_time.toLocaleDateString()} to {getStartEndOfMonth(month).e_time.toLocaleDateString()} </Typography>\n      <FormControl required variant=\"outlined\" fullWidth className={classes.formControl} >\n        <InputLabel htmlFor='select-month'>Select Month</InputLabel>\n          <Select\n            native\n            value={month}\n            label=\"Select Month\"\n            onChange={handleChangeMonth}\n            inputProps={{\n                name: 'month',\n                id: 'select-month',\n            }}\n        >\n            {monthNames.map((month, index) => {\n                return(\n                    <option key={month} value={parseInt(index)}>\n                        {month}\n                    </option>\n                );\n            })}\n          </Select>\n    </FormControl>\n    <Button variant=\"outlined\" onClick={handleChange}>\n        Change Month\n    </Button>\n      <Card className={classes.summaryCard}>\n            <Typography variant='h6'> Salary: ${parseFloat(userSalary).toFixed(2)}</Typography>\n      </Card>\n      <Card className={classes.summaryCard}>\n          <Typography variant='h6'> Pet-days by Pet Type: \n          {singleCaretakerPettypeSummary.length == 0 \n            ? <Typography>There is no available data! </Typography> \n            : singleCaretakerPettypeSummary.map(petday => {\n            console.log(petday);\n            return (<h6>Type of pet: {petday.pet_type} - Number of pet days: {petday.count}</h6>)\n          })}</Typography>\n      </Card>\n      <Card className={classes.summaryCard}>\n          <Typography variant='h6'> Pet-days by Pet Owner: \n          {singleCaretakerPettypeSummary.length == 0 \n            ? <Typography>There is no available data! </Typography> \n            : singleCaretakerPetownerSummary.map(petday => {\n            return (<h6>Pet owner: {petday.username} - Number of pet days: {petday.count}</h6>)\n          })}</Typography>\n      </Card>\n    </Grid>\n  )\n}\n\nexport default Summary","/* THIS FILE IS NOT BEING USED */ \n\nimport React, { useState, useEffect } from 'react'\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getPrevMonths, getStartEndOfMonth } from '../../utils';\nimport { Card, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    salaryCard: {\n        marginTop: 30,\n        padding: 20\n    }\n}));\n\nconst Salary = (props) => {\n    const classes = useStyles();\n    const getSalary = useStoreActions(actions => actions.careTakers.getSingleCaretakerSalary);\n    const userSalary = useStoreState(state => state.careTakers.singleCaretakerSalary);\n    const dateRange = getStartEndOfMonth(props.month);\n    \n    useEffect(() => {\n        getSalary({\n            ctuname: props.username,\n            s_time: dateRange.s_time,\n            e_time: dateRange.e_time, \n        });\n        return () => {};\n    }, []);\n    return (\n        <Card className={classes.salaryCard}>\n            <Typography variant='h6'> Salary: ${parseFloat(userSalary).toFixed(2)}</Typography>\n        </Card>\n    )\n}\n\nexport default Salary\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport CalendarView from \"./CalendarView\"\nimport BidPanel from \"./BidPanel\"\nimport PetCareList from \"./PetCareList\"\nimport CaretakerAvailability from './CaretakerAvailability';\nimport Salary from './Salary';\nimport Summary from './Summary';\n\nfunction TabPanel(props) {\n  const { children, value, index, username, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <span>{children}</span>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: \"100%\",\n  },\n}));\n\nexport default function FullWidthTabs(props) {\n  const {username} = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n          centered\n        >\n          <Tab label=\"Bids\" {...a11yProps(0)} />\n          <Tab label=\"Availability/Salary\" {...a11yProps(1)} />\n          <Tab label=\"Pet Price\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          {/* <CalendarView/> */}\n          <BidPanel username={props.username}/>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <CaretakerAvailability username={props.username} isFT={props.isFT}/>\n          <Summary username={props.username}/>\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          <PetCareList userType=\"ct\" username={props.username}/>\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n","import React, { useState } from 'react'\nimport { Card, Grid, Typography, Button, Modal, FormControl, FormLabel, RadioGroup, Radio, FormHelperText, FormControlLabel} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\n\nimport PetTypeInput from \"../../PetTypeInput\"\nimport Availability from '../../Availability';\n\nconst useStyles = makeStyles((theme) => ({\n    verticalSections: {\n        margin: \"100px 10px 30px\"\n    },\n    modal: {\n        width: \"40%\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: 'absolute',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}))\n\n\nconst NotCaretakerPage = () => {\n    const classes = useStyles();\n    const [signUpModal, setSignUpModal] = useState(false);\n    const [caretakerType, setCaretakerType] = useState(\"parttime\");\n    const [petType, setPetType] = useState('');\n    const [petPrice, setPetPrice] = useState(0);\n    const [p1startDate, setP1StartDate] = useState(0);\n    const [p1endDate, setP1EndDate] = useState(0);\n    const [p2startDate, setP2StartDate] = useState(0);\n    const [p2endDate, setP2EndDate] = useState(0);\n\n    const addPartTimeCareTaker = useStoreActions(actions => actions.careTakers.addPartTimeCareTaker);\n    const addFullTimeCareTaker = useStoreActions(actions => actions.careTakers.addFullTimeCareTaker);\n    const singleUser = useStoreState(state => state.user.singleUser);\n    const getUser = useStoreActions(actions => actions.user.getUser);\n    const getDisplayedUser = useStoreActions(actions => actions.user.getDisplayedUser);\n\n    const onChangeCaretakerType = (event) => {\n        setCaretakerType(event.target.value);\n    }\n\n    const onSelectType = (event) => {\n        setPetType(event.target.value);\n    }\n    \n    const onInputPrice = (event) => {\n        setPetPrice(event.target.value);\n    }\n\n    const toggleSignUpModal = () => {\n        setSignUpModal(!signUpModal);\n    }\n\n    const signUpCaretaker = async () => {\n        console.log({\n            username: singleUser.username,\n            name: singleUser.firstname,\n            age: singleUser.age,\n            pettype: petType,\n            price: parseInt(petPrice)\n        })\n        if (caretakerType == 'parttime') {\n            await addPartTimeCareTaker({\n                username: singleUser.username,\n                name: singleUser.firstname,\n                age: singleUser.age,\n                pettype: petType,\n                price: parseInt(petPrice)\n            })\n            getUser(singleUser.username);\n            getDisplayedUser(singleUser.username);\n        }\n        else if (caretakerType == 'fulltime') { \n            await addFullTimeCareTaker({\n                    username: singleUser.username,\n                    name: singleUser.firstname,\n                    age: singleUser.age,\n                    pettype: petType,\n                    price: parseInt(petPrice), \n                    period1_s: p1startDate,\n                    period1_e: p1endDate,\n                    period2_s: p2startDate,\n                    period2_e: p2endDate\n                })\n            getUser(singleUser.username);\n            getDisplayedUser(singleUser.username);\n        }\n        toggleSignUpModal()\n    }\n\n    return (\n        \n        <Grid container>\n            <Grid item className={classes.verticalSections} xs = {12}>\n                <Typography>\n                    You are not a caretaker.\n                </Typography>\n                <Button color = 'primary' variant ='contained' onClick = {toggleSignUpModal}>\n                    Sign up here\n                </Button>\n                <Typography>\n                    If you have signed up, please click on the page again.\n                </Typography>\n            </Grid>\n            <Modal\n                open={signUpModal}\n                onClose={toggleSignUpModal}>\n                <Card className={classes.modal}>\n                    <FormControl component=\"fieldset\" >\n                        <FormLabel component=\"legend\">Type of caretaker</FormLabel>\n                        <RadioGroup value={caretakerType} onChange={onChangeCaretakerType}>\n                            <FormControlLabel value=\"parttime\" control={<Radio />} label=\"Part-time\" />\n                            <FormControlLabel value=\"fulltime\" control={<Radio />} label=\"Full-time\" />\n                        </RadioGroup>\n                        <FormHelperText>Choose at least one role!</FormHelperText>\n                    </FormControl>\n                    { caretakerType === 'fulltime' ?\n                    <>\n                    <PetTypeInput parentType = {onSelectType} parentPrice={onInputPrice} setParentPrice={setPetPrice} isFT={caretakerType=='fulltime'} label = \"Choose a pet type you can care for\"/>\n                    <Availability setP1StartDate={setP1StartDate} setP1EndDate={setP1EndDate} setP2StartDate={setP2StartDate} setP2EndDate={setP2EndDate}/>\n                    </> :\n                    <>\n                    <PetTypeInput parentType = {onSelectType} parentPrice={onInputPrice} setParentPrice={setPetPrice} label = \"Choose a pet type you can care for\"/>\n                    </>}\n                    <Button color=\"primary\" onClick={signUpCaretaker}> Confirm sign up </Button>\n                </Card>\n            </Modal>\n        </Grid>\n    )\n}\n\nexport default NotCaretakerPage\n","import React, { useEffect } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams } from 'react-router-dom';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport TabPanel from \"../components/careTakerAdmin/TabPanel\"\nimport NotCaretakerPage from '../components/userProfile/careTakerProfile/NotCaretakerPage';\n\nconst useStyles = makeStyles({\n    root: {\n        margin: \"100px 30px 30px\"\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    header: {\n        marginBottom: 10,\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        width: \"100%\",\n        textAlign: \"center\",\n    }\n})\n\nconst CaretakerAdmin = () => {\n    const classes = useStyles();\n    const params = useParams();\n    // console.log(params)\n    const username = params.username;\n    const getSingleUser = useStoreActions(actions => actions.user.getUser);\n    const singleUser = useStoreState(state => state.user.singleUser);\n\n    useEffect(() => {\n        getSingleUser(username);\n        return () => {};\n    }, []);\n    \n    if (singleUser.is_carer) {\n        return (\n            <div>\n                <Grid container className={classes.root}>\n                <Card className={classes.header}>\n                    <CardContent>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            Caretaker type: {singleUser.is_fulltimer ? \"Full-time Caretaker\" : \"Part-time Caretaker\"}\n                        </Typography>\n                    </CardContent>\n                </Card>\n                    <Grid item xs={12}>\n                        <TabPanel username = {username} isFT={singleUser.is_fulltimer}/>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    } else {\n        return (\n            <NotCaretakerPage/>\n        )\n    }\n}\n\nexport default CaretakerAdmin\n","import React from 'react'\nimport { Typography } from '@material-ui/core';\n\nconst Welcome = () => {\n    return (\n        <Typography variant=\"h2\">\n            Welcome!\n        </Typography>\n    )\n}\n\nexport default Welcome","import React from 'react'\nimport { Card, CardActionArea, CardContent, CardMedia, Typography, Button, Grid } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { v4 } from 'uuid';\nimport { useStoreState } from 'easy-peasy';\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    media: {\n        height: 140,\n    },\n    container: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 400,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n    searchbar: {\n        margin: theme.spacing(1),\n    },\n}));\n\nconst WelcomeCards = () => {\n    const classes = useStyles();\n\n    const user = useStoreState(state => state.user.singleUser);\n\n    const welcomeCardsInfo = [\n    {\n        name: 'Caretaking Services',\n        available: true,\n        link: '/users/caretakers',\n        description: 'Find a caretaker for your pet today!',\n        imageLink: 'https://storage.googleapis.com/petbacker/images/blog/2017/dog-lover-in-autumn.jpg'\n    },\n    {\n        name: 'Caretaker Settings',\n        available: true,\n        link: '/users/' + user.username + '/caretaker-admin',\n        description: 'Edit your caretaker profile',\n        imageLink: 'https://storage.googleapis.com/petbacker/images/blog/2018/pet-care-dog-sitting-services.jpg',\n    },\n    ]\n\n    return (\n        <Grid container spacing={3}>\n            {welcomeCardsInfo.map((welcomeCardInfo) => (\n                <Grid key={v4()} item xs={6}>\n                    <Card className={classes.card} variant=\"outlined\" width={1}>\n                        <CardActionArea component={Link} to={welcomeCardInfo.link} style={{ textDecoration: 'none' }}>\n                            <CardMedia\n                                className={classes.media}\n                                image={welcomeCardInfo.imageLink}\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    {welcomeCardInfo.name}\n                                </Typography>\n                                <Typography variant=\"body2\" component=\"p\">\n                                    {welcomeCardInfo.description}\n                                </Typography>\n                                <Button size=\"small\" color=\"primary\">\n                                    Learn More\n                                </Button>\n                            </CardContent>\n                        </CardActionArea>\n                    </Card>\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n\nexport default WelcomeCards;","import React from 'react'\nimport Welcome from '../components/Welcome';\nimport WelcomeCards from '../components/WelcomeCards'\nimport { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    media: {\n        height: 140,\n    },\n    container: {\n        marginTop: theme.spacing(17),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}))\n\nconst Homepage = () => {\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"xl\" className={classes.container}>\n            <Welcome />\n            <WelcomeCards />\n        </Container>\n    )\n}\n\nexport default Homepage\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\n\nconst UpdateUser = (props) => {\n    const { id } = useParams();\n\n    return (\n        <div className=\"text-center\">\n            Update Userssss UWU\n        </div>\n    )\n}\n\nexport default UpdateUser\n","import React from 'react'\nimport UpdateUser from '../components/UpdateUser'\n\nconst Updatepage = () => {\n    return (\n        <div>\n            <UpdateUser />\n        </div>\n    )\n}\n\nexport default Updatepage\n","import { Container, Button, Modal, Table, TableBody, TableCell, TableHead, TableRow, Typography, TextField, IconButton, Icon, Card } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport React, { useEffect, useState } from 'react';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // maxWidth: 680,\n    marginTop: 200\n  },\n  media: {\n    height: 140,\n  },\n  container: {\n    marginTop: theme.spacing(15),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  modal: {\n    minWidth: 1000,\n    display: 'flex',\n    padding: theme.spacing(1),\n    alignItems: 'center',\n    justifyContent: 'center',\n\n  },\n  paper: {\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  textfield: {\n    margin: theme.spacing(3),\n    marginLeft: 0\n  }\n}));\n\nconst SetPricepage = () => {\n  const classes = useStyles();\n  const petCategories = useStoreState(state => state.pets.petCategories);\n  const getPetCategories = useStoreActions(actions => actions.pets.getPetCategories);\n  const addPetCategory = useStoreActions(actions => actions.pets.addPetCategory);\n  const editPetCategory = useStoreActions(actions => actions.pets.editPetCategory);\n  const basePricesTableHeaders = ['Pet Type', 'Base Price', 'Edit']\n  const [open, setOpen] = useState(false);\n  const [isAddPetCategory, setIsAddPetCategory] = useState(false);\n  const [newPetCategory, setNewPetCategory] = useState('');\n  const [newPetBasePrice, setNewPetBasePrice] = useState(0);\n\n  useEffect(() => {\n    getPetCategories();\n    return () => { };\n  }, [])\n\n  const openAddModal = () => {\n    setNewPetCategory(\"\");\n    setIsAddPetCategory(true);\n    setOpen(true);\n  }\n\n  const openEditModal = (pettype) => {\n    setNewPetCategory(pettype);\n    setIsAddPetCategory(false);\n    setOpen(true);\n  }\n\n  const closeModal = () => {\n    setOpen(false);\n  }\n\n  const sendData = (action) => {\n    addPetCategory({\n      \"category\": newPetCategory,\n      \"base_price\": newPetBasePrice\n    })\n      .then((res) => {\n        closeModal();\n        getPetCategories();\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  const updateData = (action) => {\n    editPetCategory({\n      \"category\": newPetCategory,\n      \"base_price\": newPetBasePrice\n    })\n      .then((res) => {\n        closeModal();\n        getPetCategories();\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  return (\n    <div>\n      <Container component=\"main\" maxWidth=\"ml\" className={classes.container}>\n        <Typography variant=\"h2\" id=\"tableTitle\">Set Base Prices</Typography>\n        <Button variant=\"contained\" color=\"primary\" onClick={openAddModal}>Add Base Price</Button>\n        <Table aria-label=\"base-prices-table\">\n          <TableHead>\n            <TableRow>\n              {basePricesTableHeaders.map((tableHeader) => (\n                <TableCell>{tableHeader}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {petCategories.map((type) => (\n              <TableRow key={type.pettype}>\n                <TableCell>\n                  {type.pettype}\n                </TableCell>\n                <TableCell>\n                  {type.base_price}\n                </TableCell>\n                <TableCell>\n                  <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => openEditModal(type.pettype)}>\n                    <EditIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n      </Container>\n      <Modal\n        open={open}\n        onClose={closeModal}\n        className={classes.modal}>\n        <Card className={classes.paper}>\n          <Typography id=\"simple-modal-title\" variant=\"h5\">{isAddPetCategory ? \"Add Base Price\" : \"Edit Base Price\"}</Typography>\n          <TextField\n            variant=\"outlined\"\n            label=\"Pet Type\"\n            required\n            fullWidth\n            disabled={!isAddPetCategory}\n            id=\"newPetCategory\"\n            autoComplete=\"newPetCategory\"\n            autoFocus\n            defaultValue={newPetCategory}\n            className={classes.textfield}\n            onChange={(event) => setNewPetCategory(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            label=\"Base Price\"\n            required\n            fullWidth\n            id=\"newPetBasePrice\"\n            autoComplete=\"newPetBasePrice\"\n            autoFocus\n            className={classes.textfield}\n            onChange={(event) => setNewPetBasePrice(event.target.value)}\n          />\n          {isAddPetCategory \n            ? <Button variant=\"contained\" color=\"primary\" onClick={sendData}>Add</Button>\n            : <Button variant=\"contained\" color=\"primary\" onClick={updateData}>Edit</Button>\n          }\n        </Card>\n      </Modal>\n    </div>\n  )\n}\n\nexport default SetPricepage\n","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    profile: {\n        width: 130,\n        height: 130,\n        margin: \"0px 30px 0 0\",\n        background: \"white\"\n    },\n    media: {\n        height: '100%',\n        width: '100%'\n    }\n});\n\nconst ProfilePic = (props) => {\n    const classes = useStyles();\n    return (\n        <div>\n            <Avatar className={classes.profile}>\n                <a href={props.href}>\n                    <img className={classes.media} src={props.img}/>\n                </a>\n            </Avatar>\n        </div>\n    )\n}\n\nexport default ProfilePic\n","import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types';\nimport { Button, FormControl, InputLabel, Select, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\n\nconst useStyles = makeStyles((theme) => ({\n    textfield: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    button: {\n        margin: theme.spacing(3),\n    }\n}));\n\nconst UserModal = (props) => {\n  const {closeModal} = props;\n  const classes = useStyles();\n  const editUser = useStoreActions(actions => actions.user.editUser);\n  const singleUser = useStoreState(state => state.user.singleUser);\n  const [userFirstName, setUserFirstName] = useState(singleUser.firstname);\n  const [userAge, setUserAge] = useState(singleUser.age);\n\n  const userType = singleUser.is_petowner && singleUser.is_carer ? \"both\" : singleUser.is_carer ? \"caretaker\" : \"petowner\";\n\n//   console.log(userType);\n\n  const handleButtonClick = () => {\n    if (userType === 'petowner') {\n        editUser({\n            username: singleUser.username,\n            firstname: userFirstName,\n            age: userAge,\n            usertype: 'petowner'\n        });\n    } else if (userType === 'caretaker') {\n        editUser({\n            username: singleUser.username,\n            firstname: userFirstName,\n            age: userAge,\n            usertype: 'caretaker'\n        });\n    } else {\n        editUser({\n            username: singleUser.username,\n            firstname: userFirstName,\n            age: userAge,\n            usertype: 'caretaker'\n        });\n        editUser({\n            username: singleUser.username,\n            firstname: userFirstName,\n            age: userAge,\n            usertype: 'petowner'\n        });\n    }\n\n    closeModal();\n\n  }\n\n  return (\n    <form>\n        <TextField\n            variant=\"outlined\"\n            label=\"Username (You can't change your username)\"\n            required\n            fullWidth\n            disabled\n            id=\"username\"\n            autoComplete=\"userName\"\n            defaultValue={singleUser.username}\n            multiline\n            autoFocus\n            className={classes.textfield}\n        />\n        <TextField\n            variant=\"outlined\"\n            label=\"User First Name\"\n            required\n            fullWidth\n            id=\"userfirstname\"\n            autoComplete=\"userFirstName\"\n            defaultValue={singleUser.firstname}\n            autoFocus\n            className={classes.textfield}\n            onChange={(event) => setUserFirstName(event.target.value)}\n        />\n        \n        <TextField\n            variant=\"outlined\"\n            label=\"User Age\"\n            required\n            fullWidth\n            id=\"userage\"\n            autoComplete=\"userAge\"\n            type=\"number\"\n            defaultValue={singleUser.age}\n            autoFocus\n            className={classes.textfield}\n            onChange={(event) => setUserAge(event.target.value)}\n        />\n        <Button className={classes.button}\n            variant=\"contained\"\n            color=\"inherit\"\n            onClick={() => handleButtonClick()}\n        >\n            Save User Information\n        </Button>\n    </form>\n  )\n}\n\nexport default UserModal\n","import React, {useEffect, useState} from 'react'\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ProfilePic from \"./ProfilePic\"\nimport profileImg from \"../../assets/userProfile/userProfile.png\"\nimport { Modal } from '@material-ui/core';\nimport UserModal from './UserModal';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: 40,\n        padding: 50,\n        maxHeight: 500,\n    },\n\n    profileTextArea: {\n        margin: \"0px 20px 0px\",\n    },\n    profileText: {\n        marginBottom: 15\n    },\n    modal: {\n        width: \"40%\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: 'absolute',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\nconst UserCard = (props) => { // currently, when you click on caretaker from FindCaretakers.js, this UserCard is used but it's fetching petowner instead.\n    const classes = useStyles();\n    \n    const username = props.username;\n\n    // console.log(username);\n\n    const getDisplayedUser = useStoreActions(actions => actions.user.getDisplayedUser);\n    const displayedUser = useStoreState(state => state.user.displayedUser);\n    const singleUser = useStoreState(state => state.user.singleUser);\n    const getUserRating = useStoreActions(actions => actions.careTakers.getRating);\n    const userRating = useStoreState(state => state.careTakers.userRating);\n\n\n    useEffect(() => {\n        getDisplayedUser(username);\n        getUserRating(username);\n        return () => {};\n    }, [])\n\n    const [open, setOpen] = useState(false);\n\n    const toggleModal = () => {\n        setOpen(!open);\n    }\n\n    // console.log(petOwnerDetails);\n\n    if (props.display === 'petowner') {\n        return (\n            <div>\n                <Card onClick={() => toggleModal()} className={classes.root}>\n                    <Grid container>\n                        <Grid item xs={3}>\n                            <ProfilePic img={profileImg}/>\n                        </Grid>\n                        <Grid item className={classes.profileTextArea}>\n                            <h2 className={classes.profileText}> {displayedUser.username}</h2>\n                            <h2 className={classes.profileText}> ({displayedUser.firstname})</h2>\n                            <h4> Age: {displayedUser.age}</h4>\n                            <h6>Click on your profile to make any updates!</h6>\n                            {/* <h4> Rating: 4.5 / 5 </h4> */}\n                        </Grid>\n                    </Grid>\n                </Card>\n                <Modal\n                        open={open}\n                        onClose={toggleModal}>\n                        <Card className={classes.modal}>\n                            <UserModal closeModal={toggleModal}/>\n                        </Card>\n                </Modal>\n            </div>\n        )\n    } else {\n        if (props.display === 'different_caretaker') {\n            return (\n                <div>\n                    <Card className={classes.root}>\n                        <Grid container>\n                            <Grid item xs={3}>\n                                <ProfilePic img={profileImg}/>\n                            </Grid>\n                            <Grid item className={classes.profileTextArea}>\n                                <h2 className={classes.profileText}> {displayedUser.username} ({displayedUser.firstname})</h2>\n                                <h4> Age: {displayedUser.age}</h4>\n                                <h4> Caretaker Type: {displayedUser.is_fulltimer ? \"full-timer\" : \"part-timer\"}</h4>\n                                <h4> Rating: {userRating.avg == null ? \"No rating so far\" : parseFloat(userRating.avg).toFixed(2)} </h4>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <Card onClick={() => toggleModal()} className={classes.root}>\n                        <Grid container>\n                            <Grid item xs={3}>\n                                <ProfilePic img={profileImg}/>\n                            </Grid>\n                            <Grid item className={classes.profileTextArea}>\n                                <h2 className={classes.profileText}> {displayedUser.username} ({displayedUser.firstname})</h2>\n                                <h4> Age: {displayedUser.age}</h4>\n                                <h4> Caretaker Type: {displayedUser.is_fulltimer ? \"full-timer\" : \"part-timer\"}</h4>\n                                <h4> Rating: {userRating.avg == null ? \"No rating so far\" : parseFloat(userRating.avg).toFixed(2)} </h4>\n                                <h6>Click on your profile to make any updates!</h6>\n\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <Modal\n                            open={open}\n                            onClose={toggleModal}>\n                            <Card className={classes.modal}>\n                                <UserModal closeModal={toggleModal}/>\n                            </Card>\n                    </Modal>\n                </div>\n            )\n        }\n        \n    }\n\n}\n\nexport default UserCard\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Box, List, Tab, Tabs, Typography} from '@material-ui/core';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport UserCard from \"../userProfile/UserCard\"\nimport PetCareList from \"../careTakerAdmin/PetCareList\"\nimport Salary from '../careTakerAdmin/Salary';\nimport Summary from '../careTakerAdmin/Summary';\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: theme.spacing(80),\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nexport default function CaretakersVerticalTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [month, setMonth] = useState(new Date().getMonth());\n  const caretakers = useStoreState(state => state.careTakers.caretakers);\n  const getCareTakers = useStoreActions(actions => actions.careTakers.getCareTakers);\n  let index = 0;\n  let tabIndex = 0;\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  }; \n\n  useEffect(() => {\n    getCareTakers();\n    return () => {};\n  }, [])\n  \n  return (\n    <div className={classes.root}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n      >\n      {caretakers.map((caretaker) => {\n        return (\n          <Tab key={caretaker.username} label={caretaker.username} {...a11yProps(index++)}/>\n        );\n      })}\n      </Tabs>\n      {caretakers.map((caretaker) => {\n        return(\n          <TabPanel key={caretaker.username} value={value} index={tabIndex++}>\n                <UserCard display={'caretaker'} username={caretaker.username}/>\n                <PetCareList userType=\"admin\" username={caretaker.username}/>\n                {/* <Salary username={caretaker.username}/> */}\n                <Summary username={caretaker.username}/>\n                \n          </TabPanel>\n        )\n      })}\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react'\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getStartEndOfMonth } from \"../../utils\";\nimport { Button, Card, FormControl, Grid, InputLabel, List, Select, Typography } from '@material-ui/core';\nimport store from \"../../store/store\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    salaryCard: {\n        padding: theme.spacing(3),\n    },\n    formControl: {\n        margin: theme.spacing(3),\n        marginLeft: 0,\n        marginBottom: theme.spacing(1) \n    },\n    caretakerRow: {\n        padding: theme.spacing(1),\n    }\n}));\n\nconst SalarySummary = () => {\n    const classes = useStyles();\n    const [ctType, setCtType] = useState('All Caretakers');\n    const [month, setMonth] = useState(new Date().getMonth());\n    const [totalSalary, setTotalSalary] = useState(0);\n    let partTimerSalary = useStoreState(state => state.admin.partTimerSalary);\n    let fullTimerSalary = useStoreState(state => state.admin.fullTimerSalary);\n    const getPartTimerSalary = useStoreActions(actions => actions.admin.getPartTimerSalary);\n    const getFullTimerSalary = useStoreActions(actions => actions.admin.getFullTimerSalary);\n    const caretakerTypes = {\n        all: \"All Caretakers\",\n        parttime: \"Part-time Caretakers\",\n        fulltime: \"Full-time Caretakers\"\n    };\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    \n\n    useEffect(() => {\n        getPartTimerSalary(getStartEndOfMonth(month));\n        getFullTimerSalary(getStartEndOfMonth(month));\n        updateTotalSalary(caretakerTypes.all);\n        return () => {};\n    }, []);\n\n    const updateTotalSalary = (type) => {\n        let newSalary = 0;\n        if (type == caretakerTypes.parttime || type == caretakerTypes.all) {\n            partTimerSalary.forEach(function(ct) {\n                newSalary += parseFloat(ct.salary)\n            })\n        }\n        if (type == caretakerTypes.fulltime || type == caretakerTypes.all) {\n            fullTimerSalary.forEach(function(ct) {\n                newSalary += parseFloat(ct.salary)\n            })\n        }\n        setTotalSalary(newSalary);\n    }\n    const handleChangeType = (event) => {\n        const type = event.target.value;\n        setCtType(type);\n        updateTotalSalary(type);\n\n    }\n\n    const handleChangeMonth = async (event) => {\n        setMonth(event.target.value);\n        updateTotalSalary(ctType);\n    }\n\n    const updateSalaries = async () => {\n        await getPartTimerSalary(getStartEndOfMonth(month));\n        await getFullTimerSalary(getStartEndOfMonth(month));\n        fullTimerSalary = store.getState().admin.fullTimerSalary;\n        partTimerSalary = store.getState().admin.partTimerSalary;\n\n        updateTotalSalary(ctType);\n    }\n    \n\n    return (\n        <div>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Card className={classes.salaryCard}>\n                        <Typography variant='h5'>\n                            Salary Summary\n                        </Typography>\n                        <FormControl required variant=\"outlined\" fullWidth className={classes.formControl} >\n                            <InputLabel htmlFor='select-month'>Select Month</InputLabel>\n                                <Select\n                                    native\n                                    value={month}\n                                    label=\"Select Month to View\"\n                                    onChange={handleChangeMonth}\n                                    inputProps={{\n                                        name: 'month',\n                                        id: 'select-month',\n                                    }}\n                                >\n                                    {monthNames.map((month, index) => {\n                                        return(\n                                            <option key={month} value={parseInt(index)}>\n                                                {month}\n                                            </option>\n                                        );\n                                    })}\n                                </Select>\n                        </FormControl>\n                        <Button variant=\"outlined\" onClick={updateSalaries}>\n                            Change Month\n                        </Button>\n                        <FormControl required variant=\"outlined\" fullWidth className={classes.formControl} >\n                            <InputLabel htmlFor='select-caretaker-type'>Select Caretaker Type</InputLabel>\n                                <Select\n                                    native\n                                    value={ctType}\n                                    label=\"Select Caretaker Type\"\n                                    onChange={handleChangeType}\n                                    inputProps={{\n                                        name: 'cttype',\n                                        id: 'select-caretaker-type',\n                                    }}\n                                >\n                                    {Object.keys(caretakerTypes).map(function(keyName, keyIndex) {\n                                        return(\n                                            <option key={keyName} value={caretakerTypes[keyName]}>\n                                                {caretakerTypes[keyName]}\n                                            </option>\n                                        );\n                                    })}\n                                </Select>\n                        </FormControl>\n                        <List style={{maxHeight:300, overflow: 'auto'}}>\n                            {ctType == caretakerTypes.parttime || ctType == caretakerTypes.all\n                             ? \n                             partTimerSalary.map((ct) => {\n                                return(\n                                    <Card key={ct.ctuname} className={classes.caretakerRow}>\n                                        {ct.ctuname}: ${parseFloat(ct.salary).toFixed(2)}\n                                    </Card>\n                                )\n                            }) : null }\n                            {ctType == caretakerTypes.fulltime || ctType == caretakerTypes.all\n                             ? fullTimerSalary.map((ct) => {\n                                return(\n                                    <Card key={ct.ctuname} className={classes.caretakerRow}>\n                                        {ct.ctuname}: ${parseFloat(ct.salary).toFixed(2)}\n                                    </Card>\n                                )\n                            }) : null }\n                        </List>\n                        <Typography variant ='h6'> Total Salary: ${totalSalary} </Typography>\n                    </Card>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default SalarySummary\n","import React, { useEffect, useState } from 'react'\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getStartEndOfMonth } from \"../../utils\";\nimport SalarySummary from \"./SalarySummary\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(13)\n    }\n}));\n\nconst Summary = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <SalarySummary/>\n        </div>\n    )\n}\n\nexport default Summary\n","import React from 'react'\nimport CaretakersVerticalTabs from '../components/admin/CaretakersVerticalTabs'\nimport CaretakersList from '../components/CaretakersList'\nimport Summary from \"../components/admin/Summary\"\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n    verticalSections: {\n        margin: \"100px 10px 30px\"\n    }\n})\n\nconst ViewCaretakerspage = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.verticalSections}>\n      <CaretakersVerticalTabs/>\n      {/* <CaretakersList/> */}\n    </div>\n  );\n}\n\nexport default ViewCaretakerspage\n","import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types';\nimport { Button, FormControl, InputLabel, Select, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CREATE, EDIT, DELETE } from \"../constants\"\nimport { useStoreActions, useStoreState } from 'easy-peasy';\n\nconst useStyles = makeStyles((theme) => ({\n    textfield: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    button: {\n        margin: theme.spacing(3),\n    }\n}));\n\n\nconst AddPet = (props) => {\n    const {parentCallback, parentData, closeModal, modalType, ...other} = props;\n    const classes = useStyles();\n    const [petName, setPetName] = useState('');\n    const [petType, setPetType] = useState('');\n    const [petAge, setPetAge] = useState(0);\n    const [petRequirements, setPetRequirements] = useState('');\n    const getPetCategories = useStoreActions(actions => actions.pets.getPetCategories);\n    const petCategories = useStoreState(state => state.pets.petCategories);\n\n    const sendData = (action) => {\n        props.parentCallback({\n            \"petName\": petName,\n            \"petType\": petType,\n            \"petAge\": petAge,\n            \"petRequirements\": petRequirements\n        }, action);\n    }\n\n    const handleButtonClick = (action) => {\n        sendData(action);\n        closeModal();\n    }\n    \n    useEffect(() => {\n        getPetCategories();\n        setPetName(props.parentData.petName);\n        setPetType(props.parentData.petType);\n        setPetAge(props.parentData.petAge);\n        setPetRequirements(props.parentData.petRequirements);\n        return () => {};\n    }, [])\n\n    return (\n        <form>\n            <TextField\n                variant=\"outlined\"\n                label=\"Pet Name\"\n                required\n                fullWidth\n                id=\"petName\"\n                autoComplete=\"petName\"\n                defaultValue={props.parentData.petName}\n                multiline\n                disabled={modalType!=CREATE}\n                autoFocus\n                className={classes.textfield}\n                onChange={(event) => setPetName(event.target.value)}\n            />\n            <FormControl required variant=\"outlined\" fullWidth className={classes.formControl} >\n                <InputLabel htmlFor='select-caretaker-petType'>Pet Type</InputLabel>\n                    <Select\n                        native\n                        value={petType}\n                        label=\"Pet Type\"\n                        onChange={(event) => setPetType(event.target.value)}\n                        inputProps={{\n                            name: 'pettype',\n                            id: 'select-caretaker-petType',\n                        }}\n                    >\n                        <option aria-label=\"None\" value=\"\" />\n                        {petCategories.map((type) => (\n                                <option key={type.pettype} value={type.pettype}>\n                                    {type.pettype}\n                                </option>\n                        ))}\n                    </Select>\n            </FormControl>\n            <TextField\n                variant=\"outlined\"\n                label=\"Pet Age\"\n                required\n                fullWidth\n                id=\"petAge\"\n                autoComplete=\"petAge\"\n                type=\"number\"\n                defaultValue={props.parentData.petAge}\n                autoFocus\n                className={classes.textfield}\n                onChange={(event) => setPetAge(event.target.value)}\n            />\n            \n            <TextField\n                variant=\"outlined\"\n                label=\"Special Requirements\"\n                fullWidth\n                id=\"petRequirements\"\n                autoComplete=\"petRequirements\"\n                defaultValue={props.parentData.petRequirements}\n                multiline\n                autoFocus\n                className={classes.textfield}\n                onChange={(event) => setPetRequirements(event.target.value)}\n            />\n            <Button className={classes.button}\n                variant=\"contained\"\n                color=\"inherit\"\n                onClick={() => handleButtonClick(props.modalType)}\n            >\n                Save Pet Information\n            </Button>\n            {props.modalType == EDIT ? \n                <Button className={classes.button}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => handleButtonClick(DELETE)}\n                >\n                    Delete Pet\n                </Button> : null }\n            \n\n        </form>\n    )\n}\n\nAddPet.propTypes = {\n    parentCallback: PropTypes.func,\n    parentData: PropTypes.object,\n    closeModal: PropTypes.func,\n    modalType: PropTypes.string,\n};\nAddPet.defaultProps = {\n    parentCallback: function() {\n        console.log(\"There is no parent callback function defined\");\n    },\n    closeModal: function() {\n        console.log(\"Please pass a close modal function from the parent\")\n    },\n    parentData: {\n        petName: \"\",\n        petType: \"\",\n        petAge: 0,\n        petRequirements: \"\"\n    },\n    modalType: CREATE\n}\nexport default AddPet\n","const CREATE = \"create\"\nconst EDIT = \"edit\"\nconst DELETE = \"delete\"\n\n\nexport { CREATE, EDIT, DELETE }","import React from 'react'\nimport { Card, Grid, ListItem, ListItemAvatar, ListItemText, Avatar, Modal, TextField, GridList, GridListTile } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport ProfilePic from \"./ProfilePic\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport petImg from \"../../assets/userProfile/pet.png\"\nimport AddPet from \"../AddPet\";\nimport { useEffect } from 'react';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { v4 } from 'uuid';\nimport { CREATE, EDIT, DELETE } from \"../../constants\"\nimport store from \"../../store/store\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: 30,\n        maxHeight: 500,\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    petAvatar: {\n        margin: 10\n    },\n    modal: {\n        width: \"40%\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: 'absolute',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    petName: {\n        textAlign: \"center\"\n    },\n    gridList: {\n        width: \"100%\",\n        height: 450\n      },\n}));\n\nconst PetList = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const [petDetails, setPetDetails] = React.useState({});\n    const [modalType, setModalType] = React.useState(CREATE);\n    const {username, ...other} = props;\n    const addPetOwner = useStoreActions(actions => actions.petOwners.addPetOwner);\n    const singleUser = useStoreState(state => state.user.singleUser);\n    const getUser = useStoreActions(actions => actions.user.getUser);\n    const getDisplayedUser = useStoreActions(actions => actions.user.getDisplayedUser);\n    const getUserPets = useStoreActions(actions => actions.pets.getOwnerPets);\n    const createPet = useStoreActions(actions => actions.pets.addPet);\n    const editPet = useStoreActions(actions => actions.pets.editPet);\n    const deletePet = useStoreActions(actions => actions.pets.deletePet);\n    let pets = useStoreState(state => state.pets.ownerSpecificPets);\n    const classes = useStyles();\n    var id = 0;\n\n    const openModal = () => {\n        setOpen(true);\n    }\n\n    const closeModal = async () => {\n        setOpen(false);\n        setPetDetails({});\n    }\n\n    const openCreateModal = () => {\n        openModal();\n        setModalType(CREATE);\n    }\n\n    const clickOnPet = (name, type, age, petReq) => {\n        openModal();\n        setModalType(EDIT);\n        setPetDetails({\n            petName: name,\n            petType: type,\n            petAge: age,\n            petRequirements: petReq\n        });\n    }\n\n    const handleCreateOrEditPet = (petData, action) => {\n        if (action == CREATE) {\n            if (!singleUser.is_petowner) {\n                addPetOwner({\n                    username: singleUser.username,\n                    ownername: singleUser.firstname,\n                    age: singleUser.age,\n                    pettype: petData.petType,\n                    petname: petData.petName,\n                    petage: petData.petAge,\n                    requirements: petData.petRequirements\n                })\n\n                getUser(singleUser.username);\n                getDisplayedUser(singleUser.username);\n                return;\n            }\n\n            createPet({\n                username: props.username,\n                petname: petData.petName,\n                pettype: petData.petType,\n                petage: petData.petAge,\n                requirements: petData.petRequirements\n            })\n        }\n        if (action == EDIT) {\n            editPet({\n                username: props.username,\n                petname: petData.petName,\n                pettype: petData.petType,\n                petage: petData.petAge,\n                requirements: petData.petRequirements\n            })\n        }\n        if (action == DELETE) {\n            deletePet({\n                username: props.username,\n                petname: petData.petName\n            })\n        }\n    }\n\n    useEffect(() => {\n        getUserPets(props.username);\n        return () => {};\n    }, [])\n\n    return (\n        <div>\n        <Card className={classes.root}>\n            <h2> Pets Owned </h2>\n            <GridList cols={4} cellHeight={160} className={classes.gridList}>\n                {pets.map((pet) => {\n                    return(\n                        <GridListTile key={v4()} className={classes.petAvatar} cols={1} onClick={() => clickOnPet(pet.petname, pet.pettype, pet.petage, pet.requirements)}>\n                            <ProfilePic img={petImg} href=\"#\"/>\n                            <h6 className={classes.petName}> {pet.petname} </h6>\n                        </GridListTile>)\n                })}\n            </GridList>\n            <Modal\n                open={open}\n                onClose={closeModal}>\n                <Card className={classes.modal}>\n                    <AddPet parentData={petDetails} parentCallback={handleCreateOrEditPet} closeModal={closeModal} modalType={modalType}/>\n                </Card>\n            </Modal>\n        </Card>\n        <ListItem button onClick={openCreateModal}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <AddIcon/>\n                        </Avatar>\n                    </ListItemAvatar>\n            {!singleUser.is_petowner ? \n            <>\n                <ListItemText\n                    primary=\"Click to add new pet to become a pet owner!\"\n                />\n            </> : <>\n                <ListItemText\n                    primary=\"Click to add new pet\"\n                />\n            </> }\n        </ListItem>\n        </div>\n    )\n}\n\nexport default PetList\n","import React, { useEffect, useState } from 'react'\nimport { Card, List, ListItem, Grid, Typography, Button, Modal, TextField, Select, FormControl, InputLabel} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { v4, validate } from 'uuid';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { sqlToJsDate } from '../../utils';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n        width: \"100%\"\n    }, \n    modal: {\n        width: \"40%\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: 'absolute',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    textfield: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nconst OrderList = (props) => {\n    const {username} = props;\n    const classes = useStyles();\n    const [reviewModal, setReviewModal] = useState(false);\n    const [modalBid, setModalBid] = useState({});\n    const [rating, setRating] = useState(5);\n    const [review, setReview] = useState(\"\");\n    const getPetOwnerBids = useStoreActions(actions => actions.bids.getPetOwnerBids);\n    const addReviewToBid = useStoreActions(actions => actions.bids.addReviewToBid);\n    const makePayment = useStoreActions(actions => actions.bids.makePayment);\n    const petOwnerBids = useStoreState(state => state.bids.petOwnerBids);\n    \n\n    useEffect(() => {\n        getPetOwnerBids(username);\n        return () => {};\n    }, []);\n\n    const handleMakePayment = (bidInfo) => {\n        makePayment({\n            pouname: bidInfo.pouname,\n            petname: bidInfo.petname,\n            pettype: bidInfo.pettype,\n            ctuname: bidInfo.ctuname,\n            s_time: bidInfo.s_time,\n            e_time: bidInfo.e_time\n        })\n    }\n\n    const openReviewModal = (bid) => {\n        setReviewModal(true);\n        setModalBid(bid);\n    }\n    const closeReviewModal = () => {\n        setReviewModal(false);\n    }\n\n    const submitReview = () => {\n        addReviewToBid({\n            bid: modalBid,\n            rating: rating,\n            review: review\n        })\n        closeReviewModal()\n    }\n\n    return (\n        <div>\n            <Card style={{width: \"100%\"}} className={classes.root}>\n                <List style={{maxHeight:500, overflow: 'auto'}}>\n                        {petOwnerBids.map((bid) => {\n                            return (<Grid key={v4()}>\n                                <Typography>\n                                    Pet: {bid.petname}\n                                </Typography>\n                                <Typography>\n                                    Caretaker: {bid.ctuname}\n                                </Typography>\n                                <Typography>\n                                    Duration: {sqlToJsDate(bid.s_time).toLocaleDateString()} to {sqlToJsDate(bid.e_time).toLocaleDateString()}\n                                </Typography>\n                                <Typography>\n                                    Bid: {bid.is_win == null ? \"Pending\" : bid.is_win ? \"Accepted\" : \"Rejected\"}\n                                </Typography>\n                                {bid.is_win ? \n                                    <>\n                                    <Typography>\n                                        Job status: {sqlToJsDate(bid.e_time) < new Date() ? \"Completed\" : \"In process\"}\n                                    </Typography>\n                                    <Typography>\n                                        Payment made: {bid.pay_status ? \"Payment completed\" : \"Pending payment\"}\n                                    </Typography>\n                                    {bid.pay_status \n                                        ?  sqlToJsDate(bid.e_time) < new Date() \n                                            ? bid.review == null \n                                                ? <Button color='default' variant='contained' onClick={()=> openReviewModal(bid)}>Leave Review </Button> \n                                                : \"Review Completed\"\n                                            : null\n                                        : <Button color='default' variant='contained' onClick={() => handleMakePayment(bid)}> Make Payment </Button>}\n                                    </>\n                                    : null\n                                }\n                                <Typography>\n                                    ----------------------------------------------------------------------\n                                </Typography>\n                            </Grid>);\n                        })}\n                </List>\n            </Card>\n            <Modal\n                open={reviewModal}\n                onClose={closeReviewModal}>\n                <Card className={classes.modal}>\n                    <FormControl required variant=\"outlined\" fullWidth >\n                        <InputLabel htmlFor='rating'>Rating</InputLabel>\n                        <Select\n                            native\n                            value={rating}\n                            label=\"Rating\"\n                            onChange={(event) => setRating(event.target.value)}\n                        >\n                            {[0,1,2,3,4,5].map((rating) => (\n                                    <option key={rating} value={rating}>\n                                        {rating}\n                                    </option>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <TextField\n                        id=\"review\"\n                        label=\"Leave review here\"\n                        multiline\n                        rows={3}\n                        fullWidth\n                        variant=\"outlined\"\n                        className={classes.textfield}\n                        onChange={(event) => setReview(event.target.value)}\n                    />\n                    <Button variant=\"outlined\" onClick={() => submitReview()}>\n                        Submit Review\n                    </Button>\n                </Card>\n            </Modal>\n        </div>\n\n    )\n}\n\nexport default OrderList\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { AppBar, Card, Tabs, Tab, Typography, Box } from '@material-ui/core';\n\nimport OrderList from \"./OrderList\"\n\nfunction ProfileTabs(props) {\n  const { children, value, index, ...other } = props;\n  // console.log(other);\n\n  return (\n    <div\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <span>{children}</span>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nProfileTabs.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n  },\n}));\n\nexport default function FullWidthTabs(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Pet Owner\" {...a11yProps(0)} />\n          <Tab label=\"Care Taker\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <ProfileTabs value={value} index={0} dir={theme.direction}>\n          <OrderList type=\"Order\" username={props.username}/>\n        </ProfileTabs>\n        <ProfileTabs value={value} index={1} dir={theme.direction}>\n          <OrderList type=\"Job\"/>\n        </ProfileTabs>\n      </SwipeableViews>\n    </div>\n  );\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport UserCard from \"../components/userProfile/UserCard\"\nimport PetList from \"../components/userProfile/PetList\"\nimport ProfileTabs from \"../components/userProfile/ProfileTabs\"\nimport { useParams } from 'react-router-dom';\nimport OrderList from '../components/userProfile/OrderList';\n\nconst useStyles = makeStyles({\n    verticalSections: {\n        margin: \"100px 10px 30px\"\n    }\n})\n\nconst UserProfile = () => {\n    const classes = useStyles();\n    const params = useParams();\n\n    // console.log(params);\n    const username = params.username;\n\n    return (\n        <Grid container>\n            <Grid item className={classes.verticalSections} xs={7}>\n                <Grid item xs={12}>\n                    <UserCard username={username} display={'petowner'}/>\n                </Grid>\n                <Grid item>\n                    <PetList username={username}/>\n                </Grid>\n            </Grid>\n            <Grid item className={classes.verticalSections} xs={4}>\n                {/* <ProfileTabs username={username}/> */}\n                <Typography variant=\"h3\" align=\"center\"> Bid List </Typography>\n                <OrderList username={username}/>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default UserProfile\n","import React, { useEffect } from 'react'\nimport Card from '@material-ui/core/Card'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { v4 } from 'uuid';\nimport { ListItemSecondaryAction, ListItemText } from '@material-ui/core';\n\n\n\nconst ReviewPanel = (props) => {\n    const getUserReviews = useStoreActions(actions => actions.careTakers.getUserReviews);\n    const userReviews = useStoreState(state => state.careTakers.userReviews);\n    useEffect(() => {\n        getUserReviews(props.username);\n        return () => {};\n    }, [])\n    return (\n        <Card style={{width: \"100%\"}}>\n            <List style={{maxHeight:300, overflow: 'auto'}}>\n                            {userReviews.map((item) => {\n                                return (<ListItem key={v4()}>\n                                    <ListItemText\n                                    primary = {`${item.pouname}: ${item.review}`}/>\n                                    <ListItemSecondaryAction>\n                                        <ListItemText\n                                        primary={`Rating: ${item.rating}/5`}/>\n                                    </ListItemSecondaryAction>\n                                </ListItem>);\n                            })}\n            </List>\n        </Card>\n    )\n}\n\nexport default ReviewPanel\n","import React, {useEffect} from 'react'\nimport { Card, Grid, Typography, Button} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport UserCard from \"../components/userProfile/UserCard\"\nimport PetCareList from \"../components/careTakerAdmin/PetCareList\"\nimport NotCaretakerPage from \"../components/userProfile/careTakerProfile/NotCaretakerPage\"\nimport {\n  useParams\n} from \"react-router-dom\";\n\nimport ReviewPanel from \"../components/userProfile/careTakerProfile/ReviewPanel\"\nimport { useStoreActions, useStoreState } from 'easy-peasy';\n\nconst useStyles = makeStyles({\n    verticalSections: {\n        margin: \"100px 30px 30px\"\n    },\n    card: {\n        marginTop: 30\n    }\n})\n\nconst CaretakerProfile = (props) => {\n    const classes = useStyles();\n    const params = useParams();\n\n    // console.log(params);\n    const username = params.username;\n    \n    const getDisplayedUser = useStoreActions(actions => actions.user.getDisplayedUser);\n    const getSingleUser = useStoreActions(actions => actions.user.getSingleUser);\n    const displayedUser = useStoreState(state => state.user.displayedUser);\n    const singleUser = useStoreState(state => state.user.singleUser);\n\n    // console.log(caretaker);\n\n    useEffect(() => {\n        getDisplayedUser(username);\n        return () => {};\n    }, []);\n    \n    if (displayedUser.username != singleUser.username) {\n        return (\n            <div>\n                <Grid container>\n                    <Grid item className={classes.verticalSections} xs={12}>\n                        <Grid item xs={12}>\n                            <UserCard display={'different_caretaker'} username={username}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Card>\n                                <PetCareList userType=\"po\" username={username}/>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={12} className={classes.card}>\n                            <Typography variant='h4'> Reviews </Typography> \n                            <ReviewPanel username={username}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n    else if (displayedUser.is_carer == true ) {\n        return (\n            <div>\n                <Grid container>\n                    <Grid item className={classes.verticalSections} xs={12}>\n                        <Grid item xs={12}>\n                            <UserCard display={'caretaker'} username={username}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Card>\n                                <PetCareList userType=\"po\" username={username}/>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={12} className={classes.card}>\n                            <Typography variant='h4'> Reviews </Typography> \n                            <ReviewPanel username={username}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    } else {\n        return (\n            <NotCaretakerPage/>\n        )\n    }\n}\n\nexport default CaretakerProfile\n","import React, { useState, useEffect } from 'react'\nimport { AppBar, Toolbar, Container, TextField, Card, Typography, Button } from '@material-ui/core'\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { classnames } from '@material-ui/data-grid';\nimport { useHistory } from 'react-router-dom';\nimport store from \"../store/store\"\nimport Routes from './allRoutes';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      backgroundColor: \"#1976D2\"\n    },\n    container: {\n        marginTop: theme.spacing(15),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    textfield: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n  }));\n\nconst Login = () => {\n    const classes = useStyles();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const getUser = useStoreActions(actions => actions.user.getUser);\n    const getDisplayedUser = useStoreActions(actions => actions.user.getDisplayedUser);\n    const getAccount = useStoreActions(actions => actions.admin.getAccount);\n    const setRoutes = useStoreActions(actions => actions.routes.setRoutes);\n    \n    const checkAccountExists = () => {\n        const curr_account = store.getState().admin.singleAccount;\n        // const curr_user = store.getState().user.singleUser;\n        if (curr_account == null || curr_account.length == 0) {\n            setErrorMessage(\"Username does not exist\");\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    const isAccountUser = () => {\n        const curr_account = store.getState().admin.singleAccount;\n        return curr_account.is_admin ? false : true;\n    }\n\n    const history = useHistory();\n\n\n    const handleClick = async (event) => {\n        await getAccount(username);\n        const validateAccount = checkAccountExists();\n        if (validateAccount) {\n          const isUser = isAccountUser();\n\n          if (isUser) {\n            await getUser(username);\n            await getDisplayedUser(username);\n\n            setRoutes(\n                [\n                    {\n                        path: '/',\n                        sidebarName: 'Login',\n                    },\n                    {\n                        path: '/signup',\n                        sidebarName: 'Signup',\n                    },\n                    {\n                        path: '/homepage',\n                        sidebarName: 'Homepage',\n                    },\n                    {\n                        path: '/users/' + username,\n                        sidebarName: 'Petowner Profile',\n                    },\n                    {\n                        path: '/users/' + username + '/caretaker',\n                        sidebarName: 'Caretaker Profile',\n                    },\n                    {\n                        path: '/users/' + username + '/caretaker-admin',\n                        sidebarName: 'Caretaker Settings',\n                    },\n                    {\n                        path: '/users/caretakers',\n                        sidebarName: 'Look for Caretakers',\n                    }\n                ]\n            )\n            // Routes[3].path = '/users/' + username;\n            // Routes[4].path = '/users/' + username + '/caretaker';\n            // Routes[5].path = '/users/' + username + '/caretaker-admin';\n            // Routes[6].path = '/users/caretakers';\n            history.push('homepage');\n          } else {\n            setRoutes(\n                [\n                    {\n                        path: '/',\n                        sidebarName: 'Login',\n                    },\n                    {\n                        path: '/signup',\n                        sidebarName: 'Signup',\n                    },\n                    {\n                        path: '/admin',\n                        sidebarName: 'PCS Administrator Settings',\n                    },\n                ]\n            );\n            history.push('/admin');\n          }\n        }\n    }\n\n    return (\n        <div>\n            <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\n            <Typography component=\"h1\" variant=\"h3\" color=\"textPrimary\" align=\"center\">\n                Login\n            </Typography>\n            <form className={classes.form} noValidate>\n                <TextField \n                    variant=\"outlined\"\n                    label=\"Username\"\n                    required\n                    fullWidth\n                    id=\"username\"\n                    autoComplete=\"username\"\n                    autoFocus\n                    className={classes.textfield}\n                    onChange={(event) => setUsername(event.target.value)}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    label=\"Password\"\n                    required\n                    fullWidth\n                    id=\"password\"\n                    autoComplete=\"password\"\n                    autoFocus\n                    className={classes.textfield}\n                    onChange={(event)=>setPassword(event.target.value)}\n                />\n                <Button\n                    onClick={(event) => handleClick(event)}\n                    // type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                >\n                    Login\n                </Button>\n                <Typography variant=\"h5\">\n                    {errorMessage}\n                </Typography>\n            </form>\n        </Container>\n        </div>\n    )\n}\n\nexport default Login","import React, { useState, useEffect } from 'react'\nimport { FormControlLabel, Checkbox, FormHelperText, FormControl, FormLabel, FormGroup, Container, Radio, RadioGroup, TextField, Card, Typography, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport AddPet from \"../components/AddPet\";\nimport PetTypeInput from \"../components/PetTypeInput\"\nimport Availability from '../components/Availability';\nimport { sqlToJsDate, differenceInTwoDates, stringToJsDate, isValidStringDate } from \"../utils\";\nimport store from \"../store/store\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n        backgroundColor: \"#1976D2\"\n    },\n    container: {\n        marginTop: theme.spacing(15),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    textfield: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    formControl: {\n        margin: theme.spacing(3),\n    },\n}));\n\n\nconst Signup = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [petType, setPetType] = useState('');\n    const [petPrice, setPetPrice] = useState(0);\n    const [age, setAge] = useState(0);\n    const [isPetOwner, setPetOwner] = useState(false);\n    const [isPetCaretaker, setPetCaretaker] = useState(false);\n    const [caretakerType, setCaretakerType] = useState(\"parttime\");\n    const [petInformation, setPetInformation] = useState({});\n    const [p1startDate, setP1StartDate] = useState(0);\n    const [p1endDate, setP1EndDate] = useState(0);\n    const [p2startDate, setP2StartDate] = useState(0);\n    const [p2endDate, setP2EndDate] = useState(0);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('An error occurred.');\n\n\n    const onPetOwnerSwitchChange = () => {\n        setPetOwner(isPetOwner => !isPetOwner);\n    }\n\n    const onPetCaretakerSwitchChange = () => {\n        setPetCaretaker(isPetCaretaker => !isPetCaretaker);\n    }\n\n    const onChangeCaretakerType = (event) => {\n        setCaretakerType(event.target.value);\n    }\n\n    const onSelectType = (event) => {   \n        setPetType(event.target.value);\n    }\n    \n    const onInputPrice = (event) => {\n        setPetPrice(event.target.value);\n    }\n\n\n    const addPartTimeCareTaker = useStoreActions(actions => actions.careTakers.addPartTimeCareTaker);\n    const addFullTimeCareTaker = useStoreActions(actions => actions.careTakers.addFullTimeCareTaker);\n    const addPetOwner = useStoreActions(actions => actions.petOwners.addPetOwner);\n    const getAccount = useStoreActions(actions => actions.admin.getAccount);\n\n\n    const userInDatabase = () => {\n        const curr_account = store.getState().admin.singleAccount;\n        if (curr_account == null || curr_account.length == 0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    const validateDates = () => {\n        if (p1startDate.length != 8 || p1endDate.length != 8 || p2startDate.length != 8 || p2endDate.length != 8) {\n            alert(\"Please enter date in the format YYYYMMDD\")\n            return false;\n        }\n        if (stringToJsDate(p1startDate) > stringToJsDate(p1endDate) || stringToJsDate(p2startDate) > stringToJsDate(p2endDate)) {\n            alert(\"Please enter a start date that is before the end date\")\n            return false;\n        }\n        if (!(isValidStringDate(p1startDate) && isValidStringDate(p1endDate)) || !(isValidStringDate(p2startDate) && isValidStringDate(p2endDate))) {\n            alert(\"Invalid date entered. Please enter in the format YYYYMMDD\")\n            return false;\n        }\n        if (stringToJsDate(p1startDate) < new Date() || stringToJsDate(p2startDate) < new Date()) {\n            alert(\"Please enter a start date in the future.\")\n            return false;\n        }\n        const dayDifference = differenceInTwoDates(p1startDate, p1endDate)\n        const p2dayDifference = differenceInTwoDates(p2startDate, p2endDate);\n        if (dayDifference < 150 || p2dayDifference < 150) {\n            alert(\"You need to add an availability period of at least 150 days\")\n            return false;\n        }\n        if (differenceInTwoDates(p1startDate, p2endDate) > 365) {\n            alert(\"The two availabilities need to occur within a one year time frame.\")\n            return false;\n        }\n        \n        return true;\n    }  \n\n    const fieldsAreValid = () => {\n        if (userInDatabase()) {\n            setErrorMessage('Username is taken')\n            setError(true);\n            return false;\n        } \n        if (!(isPetOwner || isPetCaretaker)) {\n            setErrorMessage('Please select either pet owner or caretaker');\n            setError(true);\n            return false;\n        }\n        if (firstName == '' || age == 0) {\n            setErrorMessage('Please fill up the empty fields');\n            setError(true);\n            return false;\n        }\n        if (isPetCaretaker) {\n            if (petType == '') {\n                setErrorMessage('Please select a valid pet type to care for')\n                setError(true);\n                return false;\n            }\n            if (petPrice == 0) {\n                setErrorMessage('Price per day cannot be 0 or empty')\n                setError(true);\n                return false;\n            }\n            if (caretakerType == \"fulltime\") {\n                if (!validateDates()) {\n                    setErrorMessage('Incorrect date input')\n                    setError(true);\n                    return false;\n                }\n            }\n        }\n        if (isPetOwner) {\n            if (Object.keys(petInformation).length === 0) {\n                setErrorMessage(\"Please click on the Save Pet Information button\");\n                setError(true);\n                return false;\n            }\n            if (petInformation.petName == '' || petInformation.petType == '') {\n                setErrorMessage(\"Please fill up the empty pet information\")\n                setError(true);\n                return false;\n            }\n        }\n        return true;\n    }\n    const submit = async () => {\n        await getAccount(username);\n\n        if (!fieldsAreValid()) {\n            return;\n        }\n        addUser();\n        handlePageChange()\n    }\n    const addUser = () => {\n        if (isPetOwner) {\n            addPetOwner({\n                username: username,\n                ownername: firstName,\n                age: age,\n                pettype: petInformation.petType,\n                petname: petInformation.petName,\n                petage: petInformation.petAge,\n                requirements: petInformation.petRequirements\n            });\n        }\n        if (isPetCaretaker) {\n            if (caretakerType=='parttime') {\n                addPartTimeCareTaker({\n                    username: username,\n                    name: firstName,\n                    age: parseInt(age),\n                    pettype: petType,\n                    price: parseInt(petPrice)\n                })\n            }\n            else if (caretakerType == 'fulltime') { \n                addFullTimeCareTaker({\n                    username: username,\n                    name: firstName,\n                    age: parseInt(age),\n                    pettype: petType,\n                    price: parseInt(petPrice), \n                    period1_s: p1startDate,\n                    period1_e: p1endDate,\n                    period2_s: p2startDate,\n                    period2_e: p2endDate\n                })\n            }\n        }\n    }\n\n    const handlePageChange = () => {\n        history.push('/');\n    }\n\n    const callbackAddPet = (childData) => {\n        setPetInformation(childData);\n    }\n    \n    return (\n        <div>\n            <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\n                <Typography component=\"h1\" variant=\"h3\" color=\"textPrimary\" align=\"center\">\n                    Signup\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        label=\"Username\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        autoComplete=\"username\"\n                        autoFocus\n                        className={classes.textfield}\n                        onChange={(event) => setUsername(event.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        label=\"Password\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        autoComplete=\"password\"\n                        autoFocus\n                        className={classes.textfield}\n                        onChange={(event) => setPassword(event.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        label=\"First Name\"\n                        required\n                        fullWidth\n                        id=\"firstName\"\n                        autoComplete=\"firstName\"\n                        autoFocus\n                        className={classes.textfield}\n                        onChange={(event) => setFirstName(event.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        label=\"Age\"\n                        required\n                        fullWidth\n                        id=\"age\"\n                        autoComplete=\"age\"\n                        autoFocus\n                        type=\"number\"\n                        className={classes.textfield}\n                        onChange={(event) => setAge(event.target.value)}\n                    />\n                    \n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormLabel component=\"legend\">Account Roles</FormLabel>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={<Checkbox checked={isPetOwner} onChange={onPetOwnerSwitchChange} \n                                name=\"petOwner\" />}\n                                label=\"Pet Owner\"\n                                id=\"isPetOwner\"\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={isPetCaretaker} onChange={onPetCaretakerSwitchChange} name=\"petCaretaker\" />}\n                                label=\"Pet Caretaker\"\n                                id=\"isPetCaretaker\"\n                            />\n                        </FormGroup>\n                        <FormHelperText>Choose at least one role!</FormHelperText>\n                    </FormControl>\n                    { isPetCaretaker && caretakerType === 'fulltime' ? \n                    <>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormLabel component=\"legend\">Type of caretaker</FormLabel>\n                        <RadioGroup value={caretakerType} onChange={onChangeCaretakerType}>\n                            <FormControlLabel value=\"parttime\" control={<Radio />} label=\"Part-time\" />\n                            <FormControlLabel value=\"fulltime\" control={<Radio />} label=\"Full-time\" />\n                        </RadioGroup>\n                        <FormHelperText>Choose at least one role!</FormHelperText>\n                    </FormControl>\n                    <PetTypeInput parentType = {onSelectType} parentPrice={onInputPrice} setParentPrice={setPetPrice} isFT={caretakerType == 'fulltime'} label = \"Choose a pet type you can care for\"/> \n                    <Availability setP1StartDate={setP1StartDate} setP1EndDate={setP1EndDate} setP2StartDate={setP2StartDate} setP2EndDate={setP2EndDate}/> </>\n                    : isPetCaretaker ?\n                    <> <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormLabel component=\"legend\">Type of caretaker</FormLabel>\n                        <RadioGroup value={caretakerType} onChange={onChangeCaretakerType}>\n                            <FormControlLabel value=\"parttime\" control={<Radio />} label=\"Part-time\" />\n                            <FormControlLabel value=\"fulltime\" control={<Radio />} label=\"Full-time\" />\n                        </RadioGroup>\n                        <FormHelperText>Choose at least one role!</FormHelperText>\n                    </FormControl>\n                    <PetTypeInput parentType = {onSelectType} parentPrice={onInputPrice} setParentPrice={setPetPrice} isFT={caretakerType == 'fulltime'} label = \"Choose a pet type you can care for\"/> </> : null}\n                    {  isPetOwner ? <AddPet parentCallback = {callbackAddPet} /> : null }\n                    <Button\n                        // type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick = {() => submit()}\n                    >\n                        Signup\n                    </Button>\n                    {error ? <Typography> {errorMessage} </Typography> : null}\n                </form>\n            </Container>\n        </div>\n    )\n}\n\nexport default Signup;","import React, { Component } from 'react'\n\nexport default class Filter extends Component {\n  render() {\n    return (\n      <div className=\"filter\">\n        <div className=\"filter-result\">{this.props.count} caretakers displayed!</div>\n        <div className=\"filter-sort\">\n          <select value={this.props.sortValue} onChange={this.props.sortCareTakers}>\n            {/* <option value=\"latest\"></option> */}\n            <option value=\"highest\">Highest Rating</option>\n            <option value=\"lowest\">Lowest Rating</option>\n          </select></div>\n      </div>\n    )\n  }\n}\n\n","import React, { useEffect, useState } from 'react';\nimport { TextField, InputAdornment, Typography, Container, Card, CardActionArea, CardMedia, CardContent, CardActions, Button, Paper, InputBase, Divider, IconButton, Modal, Grid, List } from '@material-ui/core';\nimport Search from '@material-ui/icons/Search';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport { Link } from 'react-router-dom';\nimport { thunk, useStoreActions, useStoreState } from 'easy-peasy';\nimport { v4 } from 'uuid';\nimport Filter from '../components/Filter';\nimport { DateRangePicker } from 'react-date-range';\nimport store from \"../store/store\"\nimport { addDays, addYears, eachDayOfInterval, toDate } from 'date-fns';\nimport { useHistory } from 'react-router-dom';\nimport { FixedSizeList } from 'react-window';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        width: \"100%\",\n    },\n    media: {\n        height: 140,\n    },\n    container: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    rating: {\n        display: 'flex',\n        flexDirection: 'column',\n        '& > * + *': {\n            marginTop: theme.spacing(1),\n        },\n    },\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 400,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n    searchbar: {\n        margin: theme.spacing(1),\n    },\n    modal: {\n        width: \"40%\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: 'absolute',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    gridList: {\n        width: \"100%\",\n        height: 450\n    },\n}));\n\nconst FindCaretakers = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [search, setSearch] = useState(\"\");\n    const [availModal, setAvailModal] = useState(false);\n    const [filteredCaretakers, setFilteredCaretakers] = useState([]);\n    const [sortValue, setSortValue] = useState(\"highest\");\n    const [dateRange, setDateRange] = useState([\n        {\n            startDate: new Date(),\n            endDate: new Date(),\n            key: \"selection\"\n        }\n    ]);\n    const minDate = new Date();\n    const maxDate = addYears(minDate, 2);\n\n\n    const getCareTakers = useStoreActions(actions => actions.careTakers.getCareTakers);\n    const getPetTypeList = useStoreActions(actions => actions.careTakers.getPetTypeList);\n    const getCareTakerRatings = useStoreActions(actions => actions.careTakers.getCareTakerRatings);\n    const getAvailableCaretakers = useStoreActions(actions => actions.careTakers.getAvailableCaretakers);\n    const getCaretakersForAllPets = useStoreActions(actions => actions.careTakers.getCaretakersForAllPets);\n    \n    useEffect(() => {\n        getCareTakers();\n        getPetTypeList();\n        getCareTakerRatings();\n        return () => {};\n    }, []);\n\n\n    const careTakers = useStoreState(state => state.careTakers.caretakers);\n    const petTypes = useStoreState(state => state.careTakers.petTypeList);\n    const careTakerRatings = useStoreState(state => state.careTakers.careTakerRatings);\n    const singleUser = useStoreState(state => state.user.singleUser);\n\n    careTakers.map(caretaker => caretaker.pettypes = [...petTypes].filter(pettype => pettype.ctuname === caretaker.username));\n    careTakers.map(caretaker => caretaker.pettypes = caretaker.pettypes.map(pettype => pettype.pettype).join(\", \"))\n    careTakers.map(caretaker => caretaker.rating = [...careTakerRatings].filter(rating => rating.ctuname === caretaker.username));\n    careTakers.map(caretaker => {\n        if (caretaker.rating.length === 0) {\n            caretaker.rating = null;\n        } else {\n            caretaker.rating = caretaker.rating[0].avg_rating;\n        }\n    })\n\n    useEffect(() => {\n        setFilteredCaretakers(\n            careTakers.filter(caretaker => {\n                return caretaker.pettypes.toLowerCase().includes(search.toLowerCase());\n            })\n        )\n    }, [search, careTakers])\n\n    const handleSearchChange = () => {\n        setFilteredCaretakers(\n            careTakers.filter(caretaker => {\n                return caretaker.pettypes.toLowerCase().includes(search.toLowerCase());\n            })\n        )\n        console.log(filteredCaretakers)\n    }\n\n    const sortCareTakers = (event) => {\n        setSortValue(event.target.value);\n        setFilteredCaretakers(\n            filteredCaretakers.sort((a,b) => (\n                sortValue === 'lowest' ? \n                ((a.rating < b.rating) ? 1: -1) :\n                sortValue === 'highest' ?\n                ((a.rating > b.rating) ? 1: -1) :\n                a.age > b.age ? 1: -1\n            ))\n        )\n        // console.log(event.target.value);\n    }\n\n    const openAvailModal = () => {\n        setAvailModal(true);\n    }\n    \n    const closeAvailModal = () => {\n        setAvailModal(false);\n    }\n\n    const handleSubmit = async () => {\n        await getAvailableCaretakers({\n            s_time: dateRange[0].startDate, \n            e_time: dateRange[0].endDate\n        });\n        const availCaretakers = store.getState().careTakers.availableCaretakers;\n        const availableCTUsernames = availCaretakers.map(caretaker => caretaker.ctuname);\n        // console.log(availableCTUsernames);\n        console.log(dateRange);\n        setFilteredCaretakers(careTakers);\n        setFilteredCaretakers(\n            careTakers.filter(caretaker => availableCTUsernames.includes(caretaker.username))\n        );\n        setAvailModal(false);\n    }\n\n    const handleGetForAllPets = async () => {\n        await getCaretakersForAllPets({\n            username: singleUser.username,\n            s_time: dateRange[0].startDate,\n            e_time: dateRange[0].endDate});\n        const availCaretakers = store.getState().careTakers.availableCaretakers;\n        const availableCTUsernames = availCaretakers.map(caretaker => caretaker.ctuname);\n        // console.log(availableCTUsernames);\n        setFilteredCaretakers(careTakers);\n        setFilteredCaretakers(\n            careTakers.filter(caretaker => availableCTUsernames.includes(caretaker.username))\n        );\n        setAvailModal(false);\n\n    }\n\n    const viewCaretakerProfile = (username) => {\n        history.push(`/users/${username}/caretaker`)\n    }\n    const renderRow = ({index, style}) => {\n        const caretaker = filteredCaretakers[index];\n        return (\n            <Card key={v4()} className={classes.card} variant=\"outlined\" style={style}>\n                {/* <CardActionArea component={Link} to={`/users/${caretaker.username}/caretaker`} style={{ textDecoration: 'none' }}> */}\n                <CardActionArea onClick={() => viewCaretakerProfile(caretaker.username)}>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {caretaker.username + ` (${caretaker.carername})`}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Caretaker age: {caretaker.age}\n                        </Typography>\n                        <div className={classes.rating}>\n                            <Rating value={caretaker.rating} precision={0.5} readOnly />\n                        </div>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Takes care of: {caretaker.pettypes}\n                            {/* Takes care of: {caretaker.pettypes.map(pettype => pettype.pettype).join(\", \")} */}\n                        </Typography>\n                        <Button size=\"small\" color=\"primary\">\n                            Learn More\n                        </Button>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        );\n      }\n    \n    return (\n        <div>\n            <Container component=\"main\" maxWidth=\"md\" className={classes.container}>\n                <Typography component=\"h1\" variant=\"h3\" color=\"textPrimary\" align=\"left\">\n                    Caretakers\n                </Typography>\n                <TextField\n                    onChange={(event) => setSearch(event.target.value)}\n                    className={classes.margin}\n                    label=\"Search pet type\"\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Search />\n                            </InputAdornment>\n                        ),\n                    }}\n                    variant=\"outlined\"\n                    fullWidth\n                />\n                <Filter count={filteredCaretakers.length}\n                        sortValue={sortValue}\n                        sortCareTakers={sortCareTakers} />\n                <Button className={classes.button}\n                    variant='outlined'\n                    onClick={openAvailModal}>\n                    Click to filter caretaker by availability\n                </Button>\n            \n                <FixedSizeList height={560} width={300} itemSize={180} itemCount={filteredCaretakers.length} style={{overflow: 'auto', width: \"100%\"}}> \n                    {renderRow}\n                </FixedSizeList>\n            </Container>\n            <Modal\n                open={availModal}\n                onClose={closeAvailModal}>\n                <Card className = {classes.modal}>\n                    <Grid item xs={12}>\n                    <DateRangePicker\n                        id=\"form-datepicker\"\n                        onChange={item => {\n                            console.log(item);\n                            setDateRange([{\n                                startDate: item.selection.startDate,\n                                endDate: item.selection.endDate,\n                                key: item.selection.key\n                            }]);\n                            // console.log(item.selection);\n                            // console.log(dateRange);\n                            // console.log(filteredCaretakers);\n                        }}\n                        showSelectionPreview={true}\n                        moveRangeOnFirstSelection={false}\n                        ranges={dateRange}\n                        direction=\"horizontal\"\n                        minDate = {minDate}\n                        maxDate={maxDate}\n                    />\n                    </Grid>\n                    <Button className={classes.button}\n                        variant=\"outlined\"\n                        fullWidth\n                        color=\"primary\"\n                        onClick={() => handleSubmit()}>\n                        Look for Caretakers in this timeframe!\n                    </Button>\n                    <Button className={classes.button}\n                        variant=\"outlined\"\n                        fullWidth\n                        onClick={handleGetForAllPets}>\n                        Going for vacation? Look for caretakers that can care for all your pets in this frame!\n                    </Button>\n                </Card>\n            </Modal>\n        </div>\n    )\n}\n\nexport default FindCaretakers;","import React, { useState } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    IconButton,\n    Drawer,\n    MenuList,\n    MenuItem,\n    ListItemText,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useStoreState } from 'easy-peasy';\n\nconst useStyles = makeStyles((theme) => \n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n        drawer: {\n            width: 300,\n        },\n        fullList: {\n            width: 'auto',\n        },\n        header: {\n            backgroundColor: \"#1976D2\"\n        }\n    })\n); \n\nconst NavBar = (props) => {\n    // console.log(props);\n    const Routes = useStoreState(state => state.routes.routes);\n    const classes = useStyles();\n    const [isOpen, setIsOpen] = useState(false);\n    const toggleDrawer = (open) => (\n        event\n    ) => {\n        if (\n            event.type === 'keydown' &&\n                (event.key === 'Tab' ||\n                event.key === 'Shift')\n        ) {\n            return;\n        }\n        setIsOpen(open);\n    };\n\n    const activeRoute = (routeName) => {\n        return props.location.pathname === routeName ? true: false;\n    }\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <AppBar className={classes.header}>\n                    <Toolbar>\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            CapooCare\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </div>\n            <Drawer classes={{paper:classes.drawer}} open={isOpen} onClose={toggleDrawer(false)}>\n                <div\n                    className={classes.fullList}\n                    role=\"presentation\"\n                    onClick={toggleDrawer(false)}\n                    onKeyDown={toggleDrawer(false)}\n                >\n                    <MenuList>\n                        {Routes.map((prop, key) => {\n                            return (\n                                <NavLink to={prop.path} style={{textDecoration: 'none'}} key={key}>\n                                    <MenuItem selected={activeRoute(prop.path)}>\n                                        <ListItemText primary={prop.sidebarName} />\n                                    </MenuItem>\n                                </NavLink>\n                            );\n                        })}\n                    </MenuList>\n                </div>\n            </Drawer>\n        </div>\n    )\n} \n\nexport default withRouter(NavBar);","import React, {useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControlLabel, Checkbox, FormHelperText, FormControl, FormLabel, FormGroup, Container, Radio, RadioGroup, TextField, Card, Typography, Button } from '@material-ui/core';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    container: {\n        marginTop: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    textfield: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    formControl: {\n        margin: theme.spacing(3),\n    },\n    header: {\n        margin: theme.spacing(3),\n        textAlign: 'center'\n    },\n  }));\n\nconst AddAdmin = () => {\n    const classes = useStyles();\n    const [username, setUsername] = useState('');\n    const [adminname, setAdminName] = useState('');\n    const addAdmin = useStoreActions(actions => actions.admin.addAdmin);\n    const getNewAdminAccount = useStoreActions(actions => actions.admin.getNewAdminAccount);\n\n    const submit = async (e) => {\n        // console.log(username);\n        e.preventDefault();\n        await getNewAdminAccount(username);\n\n        addAdmin({\n          username: username,\n          adminname: adminname\n        });\n\n        setUsername('');\n        setAdminName('');\n    }\n\n    return (\n        <div className={classes.container}>\n        <Typography component=\"h1\" variant=\"h3\" color=\"textPrimary\" align=\"center\">\n            Sign another admin up!\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n              variant=\"outlined\"\n              label=\"Admin Username\"\n              required\n              fullWidth\n              id=\"adminUsername\"\n              autoComplete=\"adminUsername\"\n              autoFocus\n              className={classes.textfield}\n              onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n              variant=\"outlined\"\n              label=\"Admin Name\"\n              required\n              fullWidth\n              id=\"adminName\"\n              autoComplete=\"adminName\"\n              autoFocus\n              className={classes.textfield}\n              onChange={(event) => setAdminName(event.target.value)}\n          />\n          <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick = {(e) => submit(e)}\n          >\n              Signup\n          </Button>\n        </form>\n      </div>\n    )\n}\n\nexport default AddAdmin\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Adminpage from \"./routes/Adminpage\";\nimport CaretakerAdmin from \"./routes/CaretakerAdmin\"\nimport Homepage from \"./routes/Homepage\"\nimport Updatepage from \"./routes/Updatepage\"\nimport SetPricepage from \"./routes/SetPricepage\";\nimport ViewAllCaretakers from \"./components/admin/ViewAllCaretakers\";\nimport ViewCaretakerspage from \"./routes/ViewCaretakerspage\";\nimport UserProfile from \"./routes/UserProfile\";\nimport CaretakerProfile from \"./routes/CaretakerProfile\"\nimport Login from \"./routes/Login\";\nimport Signup from \"./routes/Signup\";\nimport FindCaretakers from \"./routes/FindCaretakers\";\nimport NavBar from './components/NavBar';\nimport Summary from \"./components/admin/Summary\";\nimport AddAdmin from \"./components/admin/AddAdmin\";\n\nconst App = () => {\n    return (\n        <div className=\"container\">\n            <Router>\n                <NavBar />\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route exact path=\"/admin\" component={Adminpage}/>\n                    <Route exact path=\"/admin/set-price\" component={SetPricepage}/>\n                    <Route exact path=\"/admin/summary\" component={Summary}/>\n                    <Route exact path=\"/admin/view-caretakers\" component={ViewCaretakerspage}/>\n                    <Route exact path=\"/admin/add-admin\" component={AddAdmin}/>\n                    <Route exact path=\"/users/caretakers\" component={FindCaretakers} />\n                    <Route exact path=\"/users/:username/update\" component={Updatepage} />\n                    <Route exact path=\"/users/:username\" component={UserProfile} />\n                    <Route exact path =\"/users/:username/caretaker-admin\" component={CaretakerAdmin}/>\n                    <Route exact path =\"/users/:username/caretaker\" component={CaretakerProfile}/>\n                    <Route exact path=\"/homepage\" component={Homepage} />\n                    <Route exact path=\"/signup\" component={Signup} />\n\n                </Switch>\n            </Router>\n        </div>\n    )\n};\n\nexport {\n    App\n};","import React, { useEffect } from 'react'\n// import { Provider } from 'react-redux';\nimport { StoreProvider, useStoreRehydrated } from 'easy-peasy';\nimport ReactDOM from 'react-dom'\nimport {App} from \"./App\"\nimport store from './store/store'\n\nfunction WaitForStateRehydration({ children }) {\n  const isRehydrated = useStoreRehydrated();\n  console.log(isRehydrated);\n  console.log(children);\n  return isRehydrated ? children : null;\n}\n\nReactDOM.render(\n<StoreProvider store={store}>\n  <WaitForStateRehydration>\n    <App />\n  </WaitForStateRehydration>\n</StoreProvider>, document.getElementById(\"root\"))\n\n"],"sourceRoot":""}