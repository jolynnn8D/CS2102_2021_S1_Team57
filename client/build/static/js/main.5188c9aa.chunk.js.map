{"version":3,"sources":["assets/userProfile/userProfile.png","assets/userProfile/pet.png","components/admin/PriceList.jsx","components/admin/ViewAllCaretakers.jsx","routes/Adminpage.jsx","utils.js","components/careTakerAdmin/BidList.jsx","components/careTakerAdmin/CalendarView.jsx","components/userProfile/careTakerProfile/BidModal.jsx","components/careTakerAdmin/BidPanel.jsx","components/PetTypeInput.jsx","components/careTakerAdmin/PetCareList.jsx","components/careTakerAdmin/CaretakerAvailability.jsx","components/careTakerAdmin/TabPanel.jsx","components/Availability.jsx","components/userProfile/careTakerProfile/NotCaretakerPage.jsx","routes/CaretakerAdmin.jsx","components/Welcome.jsx","components/WelcomeCards.jsx","routes/Homepage.jsx","components/UpdateUser.jsx","routes/Updatepage.jsx","routes/SetPricepage.jsx","components/admin/CaretakersVerticalTabs.jsx","components/CaretakersList.jsx","routes/ViewCaretakerspage.jsx","components/userProfile/ProfilePic.jsx","components/userProfile/UserModal.jsx","components/userProfile/UserCard.jsx","components/AddPet.jsx","constants.jsx","components/userProfile/PetList.jsx","components/userProfile/OrderList.jsx","components/userProfile/ProfileTabs.jsx","routes/UserProfile.jsx","components/userProfile/careTakerProfile/ReviewPanel.jsx","routes/CaretakerProfile.jsx","store/models/serverUrl.js","store/models/careTakersModel.js","store/models/petOwnersModel.js","store/models/petsModel.js","store/models/routesModel.js","store/store.js","store/models/userModel.js","store/models/bidModel.js","routes/allRoutes.js","routes/Login.jsx","routes/Signup.jsx","routes/FindCaretakers.jsx","components/NavBar.jsx","App.jsx","index.js"],"names":["module","exports","useStyles","makeStyles","root","maxWidth","media","height","PriceList","classes","history","useHistory","Card","onClick","e","push","className","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","size","ViewAllCaretakers","theme","flexGrow","marginTop","marginLeft","padding","spacing","textAlign","palette","text","secondary","Adminpage","Grid","container","item","xs","appendLeadingZeroes","n","convertDate","passedDate","date","Date","getFullYear","getMonth","getDate","sqlToJsDate","split","replace","width","backgroundColor","background","paper","position","overflow","maxHeight","listSection","ul","BidList","props","subheader","bids","List","map","sectionId","sectionIndex","key","ListSubheader","filter","bid","s_time","e_time","ListItem","button","pouname","petName","petType","ctuname","petname","pettype","ListItemText","primary","calendar","list","top","left","transform","border","boxShadow","shadows","buttonRow","formControl","margin","minWidth","paymentTypes","pickupTypes","BidModal","closeModal","submitData","useState","startDate","endDate","addDays","dateRange","setDateRange","minDate","maxDate","addYears","petChoice","setPetChoice","paymentType","setPaymentType","pickupType","setPickupType","disabledDates","setDisabledDates","singleUser","useStoreState","state","user","getOwnerPetsOfType","useStoreActions","actions","pets","biddablePets","getUserAvailability","careTakers","userAvailability","availability","addBid","useEffect","username","then","result","enabledRanges","tempDisabledDates","eachDayOfInterval","start","end","allEnabledDates","enabledRange","daysOfInterval","concat","x","find","y","getTime","findDisabledDates","id","onChange","selection","showSelectionPreview","moveRangeOnFirstSelection","ranges","direction","FormControl","InputLabel","Select","labelId","value","event","target","autoWidth","choiceOfPet","MenuItem","Object","entries","choiceOfPaymentKey","choiceOfPaymentValue","choiceOfPickupKey","choiceOfPickupValue","startDateInt","endDateInt","pay_type","pet_pickup","handleSubmit","months","BidPanel","setDate","selectedBid","setSelectedBid","getUserBids","bidList","userBids","acceptBid","res","newSelectedBid","bidInfo","isEmpty","toDateString","cost","toFixed","FormLabel","focused","FormControlLabel","control","Switch","checked","is_win","console","log","updateBidStatus","label","textfield","marginBottom","PetTypeInput","setPetType","setPrice","parentType","parentPrice","getPetCategories","petCategories","required","fullWidth","htmlFor","native","inputProps","name","aria-label","type","TextField","autoComplete","autoFocus","defaultProps","parentCallback","modal","PetCareList","owner","open","setOpen","addCareOpen","setCareOpen","petPrice","setPetPrice","bidPetType","setBidPetType","getPetCareList","addPetCareItem","deletePetCareItem","deletePetType","petCareList","closeCareModal","careItem","v4","ListItemAvatar","Avatar","price","ListItemSecondaryAction","IconButton","edge","bidPet","Modal","onClose","parseInt","marginRight","CaretakerAvailability","setStartDate","setEndDate","addUserAvailability","deleteUserAvailability","avail","handleDeleteAvailability","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","FullWidthTabs","useTheme","React","setValue","AppBar","Tabs","newValue","indicatorColor","textColor","centered","Tab","axis","onChangeIndex","dir","Availability","setP1StartDate","setP1EndDate","setP2StartDate","setP2EndDate","align","verticalSections","NotCaretakerPage","signUpModal","setSignUpModal","caretakerType","setCaretakerType","p1startDate","p1endDate","p2startDate","p2endDate","addPartTimeCareTaker","addFullTimeCareTaker","getUser","getDisplayedUser","onSelectType","onInputPrice","toggleSignUpModal","signUpCaretaker","a","firstname","age","period1_s","period1_e","period2_s","period2_e","RadioGroup","Radio","FormHelperText","bullet","display","fontSize","pos","header","CaretakerAdmin","useParams","getSingleUser","is_carer","is_fulltimer","Welcome","card","flexDirection","alignItems","input","flex","iconButton","divider","searchbar","WelcomeCards","welcomeCardsInfo","available","link","description","imageLink","welcomeCardInfo","Link","to","style","textDecoration","Homepage","Container","UpdateUser","Updatepage","SetPricepage","tabs","borderRight","CaretakersVerticalTabs","orientation","columns","field","headerName","CaretakersList","getCareTakers","caretakers","rows","caretaker","carername","pettypes","rating","salary","pageSize","checkboxSelection","ViewCaretakerspage","profile","ProfilePic","href","src","img","UserModal","editUser","userFirstName","setUserFirstName","userAge","setUserAge","userType","is_petowner","disabled","defaultValue","multiline","usertype","profileTextArea","profileText","UserCard","displayedUser","getUserRating","getRating","userRating","toggleModal","profileImg","parseFloat","avg","AddPet","parentData","modalType","setPetName","petAge","setPetAge","petRequirements","setPetRequirements","handleButtonClick","action","sendData","petAvatar","PetList","petDetails","setPetDetails","setModalType","addPetOwner","petOwners","openModal","getUserPets","getOwnerPets","createPet","addPet","editPet","deletePet","ownerSpecificPets","pet","petage","petReq","requirements","petImg","petData","ownername","OrderList","reviewModal","setReviewModal","modalBid","setModalBid","setRating","review","setReview","getPetOwnerBids","addReviewToBid","makePayment","petOwnerBids","closeReviewModal","toLocaleDateString","pay_status","openReviewModal","InputProps","max","min","UserProfile","ReviewPanel","getUserReviews","userReviews","CaretakerProfile","serverUrl","careTakersModel","petTypeList","thunk","payload","axios","get","data","setUsers","users","post","status","url","setPetCareList","addPetCareList","getPetTypeList","setPetTypeList","delete","deleteUserPetType","forEach","i","splice","setUserAvailability","availabilities","addAvailability","deleteAvailability","setUserReviews","reviews","setUserRating","petOwnersModel","singlePetOwner","getPetOwner","setPetOwner","debug","petsModel","allPets","getAllPets","setAllPets","setOwnerPets","setBiddablePets","addAPet","put","getAllCategories","routesModel","routes","path","sidebarName","setRoutes","storeModel","response","alert","catch","error","setUser","url_po","url_ct","setDisplayedUser","allUsers","getAllUsers","setAllUsers","modifyBidReview","setUserBids","setPetOwnerBids","modifyBidStatus","modifyPayStatus","store","createStore","persist","mergeStrategy","Routes","avatar","main","form","submit","Login","setUsername","setPassword","errorMessage","setErrorMessage","checkAccountExists","curr_user","getState","length","handleClick","noValidate","Signup","firstName","setFirstName","setAge","isPetOwner","isPetCaretaker","setPetCaretaker","petInformation","setPetInformation","setError","onChangeCaretakerType","fieldsAreValid","userInDatabase","keys","addUser","handlePageChange","FormGroup","Checkbox","childData","FindCaretakers","search","setSearch","filteredCaretakers","setFilteredCaretakers","petTypes","join","toLowerCase","includes","startAdornment","InputAdornment","Rating","precision","readOnly","createStyles","menuButton","drawer","fullList","withRouter","isOpen","setIsOpen","toggleDrawer","Toolbar","Drawer","onKeyDown","MenuList","prop","selected","routeName","location","pathname","App","exact","WaitForStateRehydration","isRehydrated","useStoreRehydrated","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5188c9aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/userProfile.f9f26790.png\";","module.exports = __webpack_public_path__ + \"static/media/pet.fb90d3e6.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nconst PriceList = () => {\n  const classes = useStyles();\n\n  let history = useHistory();\n  const handleClick = (e) => {\n    history.push(\"/admin/set-price\");\n  }\n  \n  return (\n    <Card onClick={handleClick} className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image=\"https://mrpetapp.com/wp-content/uploads/2016/11/pets_big.png\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Set Pet Prices\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Set Each Pet Price Here\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default PriceList\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nconst ViewAllCaretakers = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const handleClick = () => {\n    history.push('/admin/view-caretakers');\n  }\n\n  return (\n<Card onClick={handleClick} className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image=\"https://storage.googleapis.com/petbacker/images/blog/2018/pet-care-dog-sitting-services.jpg\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            View All Caretakers\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Our Caretakers are amazing with animals\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default ViewAllCaretakers\n","import React from 'react'\nimport PriceList from '../components/admin/PriceList';\nimport ViewAllCaretakers from '../components/admin/ViewAllCaretakers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 150,\n    marginLeft: 100\n  },\n  component: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst Adminpage = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <ViewAllCaretakers className={classes.component}/>\n        </Grid>\n        <Grid item xs={6}>\n          <PriceList className={classes.component}/>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Adminpage\n","function appendLeadingZeroes(n){\n    if(n <= 9){\n      return \"0\" + n;\n    }\n    return n\n  }\n\nfunction convertDate(passedDate) {\n    const date = new Date(passedDate)\n    let formatted_date = '' + date.getFullYear() + appendLeadingZeroes((date.getMonth() + 1)) + appendLeadingZeroes(date.getDate())\n    return formatted_date\n}\n\nfunction sqlToJsDate(date) {\n    let dateSplit = date.split('T');\n    return new Date(date.replace(' ', 'T'));    ;\n}\n\nexport {convertDate, sqlToJsDate}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { sqlToJsDate } from '../../utils';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto',\n    maxHeight: 400\n  },\n  listSection: {\n    backgroundColor: 'inherit',\n  },\n  ul: {\n    backgroundColor: 'inherit',\n    padding: 0,\n  },\n}));\n\nexport default function BidList(props) {\n    const { subheader, bids, onClick, ...other } = props;\n    const classes = useStyles();\n\n\n    return (\n    <List className={classes.root} subheader={<li />}>\n        {subheader.map((sectionId, sectionIndex) => (\n        <li key={`section-${sectionId}`} className={classes.listSection}>\n            <ul className={classes.ul}>\n            <ListSubheader>{`${sectionId}`}</ListSubheader>\n            {bids\n              .filter((bid) => sqlToJsDate(bid.s_time).getMonth() == sectionIndex || sqlToJsDate(bid.e_time).getMonth() == sectionIndex)\n              .map((bid) => (\n                <ListItem \n                  button\n                  key={`item-${sectionId}-${bid.pouname}-${bid.petName}-${bid.petType}-${bid.ctuname}-${bid.s_time}-${bid.e_time}`}\n                  onClick={() => onClick(\n                    {\n                      pouname: bid.pouname,\n                      petname: bid.petname,\n                      pettype: bid.pettype,\n                      ctuname: bid.ctuname,\n                      s_time: bid.s_time,\n                      e_time: bid.e_time\n                    }\n                  )}\n                >\n                  <ListItemText primary={`${bid.petname} (${bid.pettype})`} />\n                </ListItem>\n            ))}\n            </ul>\n        </li>\n        ))}\n    </List>\n  );\n}","import React, { useState } from 'react'\nimport { Grid, Typography } from '@material-ui/core'\nimport Calendar from 'react-calendar'\nimport { makeStyles } from '@material-ui/core/styles'\nimport 'react-calendar/dist/Calendar.css'\nimport BidList from \"./BidList\"\n\nconst useStyles = makeStyles({\n    calendar: {\n        width: \"100%\",\n        height: \"100%\",\n        padding: \"30px 20px 50px\"\n    },\n    list: {\n        height: 600\n    }\n})\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nconst CalendarView = () => {\n    const classes = useStyles();\n    const [date, setDate] = useState(new Date());\n\n    return (\n        <Grid container>\n            <Grid item xs={8}>\n                <Calendar className={classes.calendar} \n                    onChange={(res) => setDate(res)}\n                />\n            </Grid>\n            <Grid item xs={4}>\n            </Grid>\n\n        </Grid>\n    )\n}\n\nexport default CalendarView;","import React, { useState, useEffect } from 'react'\nimport { Button, Typography, InputLabel, Select, MenuItem, FormControl, FormControlLabel, Switch } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport { DateRangePicker } from 'react-date-range';\nimport { addDays, addYears, eachDayOfInterval, toDate } from 'date-fns';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport {convertDate} from '../../../utils';\n\nconst handleSelect = (ranges) => {\n    console.log(ranges);\n}\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: 'absolute',\n        width: 650,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    buttonRow: {\n        left: \"50%\",\n        transform: \"translateX(60%)\",\n    },\n    button: {\n        marginLeft: 10\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\n\nconst paymentTypes = {\n    'Credit Card': 'credit card',\n    'Cash': 'cash',\n}\n\nconst pickupTypes = {\n    'Delivery by Owner': 'poDeliver',\n    'Caretaker Pickup': 'ctPickup',\n    'Transfer Pet': 'transfer'\n}\n\nconst BidModal = (props) => {\n    const classes = useStyles();\n    const { closeModal, submitData, petType, ctuname, ...other } = props\n    const [dateRange, setDateRange] = useState([\n        {\n            startDate: new Date(),\n            endDate: addDays(new Date(), 7),\n            key: 'selection'\n        }\n    ]);\n    const minDate = new Date();\n    const maxDate = addYears(minDate, 2);\n    const [petChoice, setPetChoice] = useState(\"\")\n    const [paymentType, setPaymentType] = useState(\"\")\n    const [pickupType, setPickupType] = useState(\"\")\n    const [disabledDates, setDisabledDates] = useState([]);\n    const singleUser = useStoreState(state => state.user.singleUser);\n    const getOwnerPetsOfType = useStoreActions(actions => actions.pets.getOwnerPetsOfType);\n    const biddablePets = useStoreState(state => state.pets.biddablePets);\n    const getUserAvailability = useStoreActions(actions => actions.careTakers.getUserAvailability);\n    const userAvailability = useStoreState(state => state.careTakers.availability);\n    const addBid = useStoreActions(actions => actions.bids.addBid);\n    // console.log(props.petType)\n    // console.log(props.ctuname);\n\n    const findDisabledDates = (enabledRanges) => {\n        var tempDisabledDates = eachDayOfInterval({ start: minDate, end: maxDate });\n        var allEnabledDates = []\n        for (var enabledRange of enabledRanges) {\n            // console.log(enabledRange.s_time);\n            // console.log(enabledRange.e_time);\n            var daysOfInterval = eachDayOfInterval({ start: new Date(enabledRange.s_time), end: new Date(enabledRange.e_time)})\n            allEnabledDates = allEnabledDates.concat(daysOfInterval);\n        }\n        // console.log(allEnabledDates)\n        tempDisabledDates = tempDisabledDates.filter(function(x) {return !allEnabledDates.find(y => y.getTime() === x.getTime())})\n        setDisabledDates(tempDisabledDates);\n    }\n\n    useEffect(() => {\n        getOwnerPetsOfType({\n            username: singleUser.username,\n            pettype: props.petType\n        })\n        getUserAvailability({\n            ctuname: props.ctuname,\n            s_time: minDate,\n            e_time: maxDate\n        })\n            .then((result) => {\n                // console.log(userAvailability)\n                findDisabledDates(userAvailability)\n            })\n        return () => {};\n    }, [])\n\n    const handleSubmit = () => {\n        const startDateInt = convertDate(dateRange[0].startDate);\n        const endDateInt = convertDate(dateRange[0].endDate);\n        addBid({\n            pouname: singleUser.username,\n            petname: petChoice,\n            pettype: props.petType,\n            ctuname: props.ctuname,\n            s_time: startDateInt,\n            e_time: endDateInt,\n            pay_type: paymentType,\n            pet_pickup: pickupType\n        })\n        closeModal();\n       \n    }\n    return (\n        <div className={classes.paper}>\n            <Typography id=\"simple-modal-title\" variant=\"h5\">Select desired dates</Typography>\n            <DateRangePicker\n                id=\"form-datepicker\"\n                onChange={item => setDateRange([item.selection])}\n                showSelectionPreview={true}\n                moveRangeOnFirstSelection={false}\n                ranges={dateRange}\n                direction=\"horizontal\"\n                minDate = {minDate}\n                maxDate={maxDate}\n                disabledDates={disabledDates}\n            />\n\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"form-pet-choice-label\">Pet for Care</InputLabel>\n                <Select\n                    labelId=\"form-pet-choice-label\"\n                    id=\"form-pet-choice-select\"\n                    value={petChoice}\n                    onChange={(event) => setPetChoice(event.target.value)}\n                    autoWidth\n                >\n                    {biddablePets.map((choiceOfPet) => {\n                        return <MenuItem value={choiceOfPet.petname}>{choiceOfPet.petname}</MenuItem>\n                    })}\n                </Select>\n            </FormControl>\n\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"form-payment-type-choice-label\">Payment Type</InputLabel>\n                <Select\n                    labelId=\"form-payment-type-choice-label\"\n                    id=\"form-payment-type-choice-select\"\n                    value={paymentType}\n                    onChange={(event) => setPaymentType(event.target.value)}\n                    autoWidth\n                >\n                    {Object.entries(paymentTypes)\n                        .map(([choiceOfPaymentKey, choiceOfPaymentValue]) => {\n                            return <MenuItem value={choiceOfPaymentValue}>{choiceOfPaymentKey}</MenuItem>\n                        })}\n                </Select>\n            </FormControl>\n\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"form-pickup-type-choice-label\">Pickup Type</InputLabel>\n                <Select\n                    labelId=\"form-pickup-type-choice-label\"\n                    id=\"form-pickup-type-choice-select\"\n                    value={pickupType}\n                    onChange={(event) => setPickupType(event.target.value)}\n                    autoWidth\n                >\n                    {Object.entries(pickupTypes)\n                        .map(([choiceOfPickupKey, choiceOfPickupValue]) => {\n                            return <MenuItem value={choiceOfPickupValue}>{choiceOfPickupKey}</MenuItem>\n                        })}\n                </Select>\n            </FormControl>\n\n            {/* <Typography>\n                {userAvailability || \"hello\" }\n            </Typography> */}\n\n            <div className={classes.buttonRow}>\n                <Button className={classes.button}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() => handleSubmit()}>\n                    Confirm\n                </Button>\n                <Button className={classes.button}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    onClick={props.closeModal}>\n                    Cancel\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default BidModal\n","import React, { useState, useEffect } from 'react'\nimport { Card, Typography, Grid, Modal, Button, FormControl, FormControlLabel, FormLabel, Switch } from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport BidList from \"./BidList\"\nimport { isEmpty } from \"lodash\"\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport BidModal from '../userProfile/careTakerProfile/BidModal';\nimport { sqlToJsDate, convertDate } from '../../utils';\n\nconst useStyles = makeStyles({\n    root: {\n        padding: 30,\n        marginTop: 20\n    },\n    calendar: {\n        width: \"100%\",\n        height: \"100%\",\n        padding: \"30px 20px 50px\"\n    },\n    list: {\n        height: 600\n    }\n})\n\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n// const bidList = [\n//     {\n//         pouname: 'busypetowner123',\n//         petName: 'Max',\n//         petType: 'Corgi Dog',\n//         ctuname: 'johnthebest',\n//         s_time: new Date('2020-10-10'),\n//         e_time: new Date('2020-11-02'),\n//         pay_status: false,\n//         pay_type: 'Incomplete',\n//         cost: 60.0\n//     },\n//     {\n//         pouname: 'tiredowner',\n//         petName: 'Jess',\n//         petType: 'Labrapoodle Dog',\n//         ctuname: 'johnthebest',\n//         s_time: new Date('2020-10-26'),\n//         e_time: new Date('2020-10-30'),\n//         pay_status: false,\n//         pay_type: 'Incomplete',\n//         cost: 40.0\n//     }\n// ]\n\nconst BidPanel = (props) => {\n    const classes = useStyles()\n    const [date, setDate] = useState(new Date());\n    const [selectedBid, setSelectedBid] = useState({});\n    const [open, setOpen] = useState(false);\n    const getUserBids = useStoreActions(actions => actions.bids.getUserBids);\n    const bidList = useStoreState(state => state.bids.userBids);\n    const acceptBid = useStoreActions(actions => actions.bids.acceptBid);\n\n    const openModal = () => {\n        setOpen(true);\n    }\n\n    const closeModal = () => {\n        setOpen(false);\n    }\n\n    const submitData = (selectedVals) => {\n        console.log(selectedVals);\n        setOpen(false);\n    }\n\n    const handleSelectedBid = (newSelectedBid) => {\n        setSelectedBid(newSelectedBid)\n    }\n\n    const updateBidStatus = (bidInfo) => {\n        console.log(\"Changing bid status on backend!\")\n        acceptBid({\n            pouname: bidInfo.pouname,\n            petname: bidInfo.petname,\n            pettype: bidInfo.pettype,\n            ctuname: bidInfo.ctuname,\n            s_time: bidInfo.s_time,\n            e_time: bidInfo.e_time\n        })\n        \n    }\n\n    useEffect(() => {\n        getUserBids(props.username);\n        return () => {};\n    }, [])\n\n\n    return (\n        <div>\n            <Grid container>\n                <Grid item xs={8}>\n                    <Calendar className={classes.calendar}\n                        onChange={(res) => {\n                            setSelectedBid({})\n                            setDate(res)\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    <BidList\n                        subheader={months}\n                        bids={bidList}\n                        onClick={handleSelectedBid}\n                    />\n                </Grid>\n            </Grid>\n            {bidList\n                .filter((bidInfo) => !isEmpty(selectedBid)\n                    ? (\n                        bidInfo.pouname === selectedBid.pouname &&\n                        bidInfo.petname === selectedBid.petname &&\n                        bidInfo.pettype === selectedBid.pettype &&\n                        bidInfo.ctuname === selectedBid.ctuname &&\n                        bidInfo.s_time === selectedBid.s_time &&\n                        bidInfo.e_time === selectedBid.e_time\n                    )\n                    : (date <= sqlToJsDate(bidInfo.e_time) && date >= sqlToJsDate(bidInfo.s_time)))\n                .map((bidInfo) => (\n                    <Card className={classes.root}>\n                        <Typography variant=\"h4\">\n                            Bid Details\n                        </Typography>\n                        <Typography variant=\"h6\">\n                            User: {bidInfo.pouname}\n                        </Typography>\n                        <Typography variant=\"h6\">\n                            Pet: {bidInfo.petname} ({bidInfo.pettype})\n                        </Typography>\n                        <Typography variant=\"h6\">\n                            Caretaker: {bidInfo.ctuname}\n                        </Typography>\n                        <Typography variant=\"h6\">\n                            Duration: {sqlToJsDate(bidInfo.s_time).toDateString()} to {sqlToJsDate(bidInfo.e_time).toDateString()}\n                        </Typography>\n                        <Typography variant=\"h6\">\n                            Price: ${bidInfo.cost.toFixed(2)}\n                        </Typography>\n                        <Typography variant=\"h6\">\n                            Pickup Method: {bidInfo.pet_pickup == 'poDeliver' ? \"Pet Owner Deliver\" \n                                            : bidInfo.pet_pickup == 'ctPickup' ? \"Caretaker Pickup\" \n                                            : bidInfo.pet_pickup == 'transfer' ? \"Transfer\" : null}\n                        </Typography>\n                        <br />\n\n                        <FormControl>\n                            <FormLabel color=\"primary\" focused>Accept bid?</FormLabel>\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={bidInfo.is_win == true ? true : false}\n                                        onChange={(event) => updateBidStatus(bidInfo)}\n                                        color=\"primary\"\n                                    />\n                                }\n                                label={bidInfo.is_win ? \"Bid Accepted\" : \"Pending\"}\n                            />\n                        </FormControl>\n                    </Card>\n                ))}\n            {/* <Button variant=\"contained\" onClick={openModal} color=\"primary\">\n                Create Bid (temp)\n            </Button>\n            <Modal\n                open={open}\n                onClose={closeModal}>\n                <BidModal closeModal={closeModal} submitData={submitData} />\n            </Modal> */}\n        </div>\n    )\n}\n\nexport default BidPanel\n","import { Chip, FormControl, Input, InputLabel, NativeSelect, Select, FormHelperText, TextField} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(3),\n        marginLeft: 0\n    },\n    textfield: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nconst PetTypeInput = (props) => {\n    const [petType, setPetType] = useState();\n    const [price, setPrice] = useState();\n    const {parentType, parentPrice, label, ...other} = props;\n    const getPetCategories = useStoreActions(actions => actions.pets.getPetCategories);\n    const petCategories = useStoreState(state => state.pets.petCategories);\n\n\n    const handleChange = (event) => {\n        setPetType(event.target.value);\n        parentType(event);\n    }\n\n    const handlePriceChange = (event) => {\n        setPrice(event.target.value);\n        parentPrice(event);\n    }\n\n    useEffect(() => {\n        getPetCategories();\n        return () => {};\n    }, [])\n\n    const classes = useStyles();\n    return (\n        <div>\n            <FormControl required variant=\"outlined\" fullWidth className={classes.formControl} >\n                <InputLabel htmlFor='select-caretaker-petType'>{props.label}</InputLabel>\n                    <Select\n                        native\n                        value={petType}\n                        label={props.label}\n                        onChange={handleChange}\n                        inputProps={{\n                            name: 'pettype',\n                            id: 'select-caretaker-petType',\n                        }}\n                    >\n                        <option aria-label=\"None\" value=\"\" />\n                        {petCategories.map((type) => (\n                                <option key={type.pettype} value={type.pettype}>\n                                    {type.pettype}\n                                </option>\n                        ))}\n                    </Select>\n            </FormControl>\n            <TextField\n                variant=\"outlined\"\n                label=\"Enter the price per day for the pet type above\"\n                required\n                fullWidth\n                id=\"price\"\n                autoComplete=\"price\"\n                autoFocus\n                type=\"number\"\n                className={classes.textfield}\n                onChange={handlePriceChange}\n            />\n                    \n        </div>\n    )\n}\nPetTypeInput.propTypes = {\n    parentCallback: PropTypes.func,\n    label: PropTypes.string\n};\nPetTypeInput.defaultProps = {\n    parentCallback: function() {\n        console.log(\"There is no parent callback function defined\");\n    },\n    label: \"Pet Types\"\n}\n\nexport default PetTypeInput\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Modal from '@material-ui/core/Modal';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BidModal from '../userProfile/careTakerProfile/BidModal';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport PetTypeInput from '../PetTypeInput';\nimport { v4 } from 'uuid';\n\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        width: \"40%\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: 'absolute',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}))\n\nconst PetCareList = (props) => {\n    const { owner, username, ...other} = props;\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [addCareOpen, setCareOpen] = useState(false);\n    const [petType, setPetType] = useState(\"\");\n    const [petPrice, setPetPrice] = useState(\"\");\n    const [bidPetType, setBidPetType] = useState(\"\");\n    const getPetCareList = useStoreActions(actions => actions.careTakers.getPetCareList);\n    const addPetCareItem = useStoreActions(actions => actions.careTakers.addPetCareItem);\n    const deletePetCareItem = useStoreActions(actions => actions.careTakers.deletePetType);\n    const petCareList = useStoreState(state => state.careTakers.petCareList);\n\n    const openModal = (bidPet) => {\n        setBidPetType(bidPet);\n        setOpen(true);\n     \n    }\n    \n    const closeModal = () => {\n        setOpen(false);\n    }\n\n    const openCareModal = () => {\n        setCareOpen(true);\n    }\n    const closeCareModal = () => {\n        setCareOpen(false);\n    }\n\n    const onPetPriceSet = (event) => {\n        setPetPrice(event.target.value);\n    }\n\n    const onPetTypeSet = (event) => {\n        setPetType(event.target.value);\n    }\n\n    const handleAddNewPet = (event) => {\n        closeCareModal();\n        console.log({\n            pettype: petType,\n            price: parseInt(petPrice)\n        })\n        addPetCareItem({\n            username: username,\n            pettype: petType,\n            price: parseInt(petPrice)\n        })\n    }\n\n    useEffect(() => {\n        getPetCareList(username)\n        return () => {};\n    }, [])\n\n\n    return (\n        <div>\n            <List>\n                {petCareList.map((careItem) => (\n                <>\n                <ListItem key={v4()}>\n                <ListItemAvatar>\n                    <Avatar>\n                      <PetsIcon />\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={careItem.pettype}\n                />\n                <ListItemText\n                    primary={`$${careItem.price}/day`}\n                />\n                {props.owner ? \n                <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deletePetCareItem({username: username, pettype: careItem.pettype})}>\n                      <DeleteIcon />\n                    </IconButton>\n                </ListItemSecondaryAction> : null } \n                {!props.owner ? \n                <ListItemSecondaryAction>\n                    <IconButton onClick={() => openModal(careItem.pettype)}>\n                        <ListItemText  \n                            primary=\"Bid\"/>\n                    </IconButton>\n                </ListItemSecondaryAction> : null }\n                </ListItem>\n                 </>\n                ))}\n                {props.owner ?\n                <ListItem button onClick={openCareModal}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <AddIcon/>\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary=\"Click to add new pet\"\n                    />\n                </ListItem> : null }\n            </List>\n            <Modal\n                open={open}\n                onClose={closeModal}>\n                <BidModal ctuname={props.username} petType={bidPetType} closeModal={closeModal}/>\n            </Modal>\n            <Modal\n                open={addCareOpen}\n                onClose={closeCareModal}>\n                <Card className={classes.modal}>\n                    <PetTypeInput parentType={onPetTypeSet} parentPrice={onPetPriceSet}/>\n                    <Button onClick={handleAddNewPet} color=\"primary\"> Add new pet type </Button>\n                </Card>\n            </Modal>\n        </div>\n    )\n}\n\nexport default PetCareList\n","import React, { useState, useEffect } from 'react'\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { v4 } from 'uuid';\nimport { Avatar, Button, Grid, IconButton, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, TextField, Typography } from '@material-ui/core';\nimport { sqlToJsDate } from '../../utils';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles((theme) => ({\n    textfield: {\n        marginRight: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        marginTop: theme.spacing(3),\n        width: \"40%\"\n    },\n}));\n\nconst CaretakerAvailability = (props) => {\n    const classes = useStyles();\n    const [startDate, setStartDate] = useState(\"\");\n    const [endDate, setEndDate] = useState(\"\");\n    const userAvailability = useStoreState(state => state.careTakers.availability);\n    const getUserAvailability = useStoreActions(actions => actions.careTakers.getUserAvailability);\n    const addUserAvailability = useStoreActions(actions => actions.careTakers.addUserAvailability);\n    const deleteUserAvailability = useStoreActions(actions => actions.careTakers.deleteUserAvailability);\n\n    useEffect(() => {\n        getUserAvailability({\n            ctuname: props.username,\n            s_time: new Date(),\n            e_time: new Date(new Date().setDate(new Date().getDate() + 365)), //one year from now\n        });\n        return () => {};\n    }, []);\n\n    const handleAddAvailability = () => {\n        addUserAvailability({\n            ctuname: props.username,\n            s_time: startDate,\n            e_time: endDate\n        })\n        setStartDate(\"\");\n        setEndDate(\"\");\n    }\n    const handleDeleteAvailability = (avail) => {\n        console.log(avail)\n        deleteUserAvailability({\n            ctuname: props.username,\n            s_time: avail.s_time,\n            e_time: avail.e_time\n        })\n    }\n    return (\n        <div>\n            <Typography> Your availability in the next year: </Typography>\n            <List>\n            {userAvailability.map((avail) => {\n                return (\n                    <ListItem key={v4()}>\n                        <ListItemAvatar>\n                            <Avatar>\n                                <DateRangeIcon/>\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText primary= {`${sqlToJsDate(avail.s_time).toDateString()} to ${sqlToJsDate(avail.e_time).toDateString()}`}/>\n                        <ListItemSecondaryAction>\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>handleDeleteAvailability(avail)}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                )\n            })}\n            </List>\n            <Typography> Add new availability here (if you're a full-timer, you can only add periods of 150 days): </Typography>\n            <TextField\n                variant=\"outlined\"\n                label=\"Enter start date in YYYYMMDD\"\n                required\n                id=\"startDate\"\n                autoComplete=\"startdate\"\n                autoFocus\n                type=\"number\"\n                className={classes.textfield}\n                onChange={(event) => setStartDate(event.target.value)}\n            />\n            <TextField\n                variant=\"outlined\"\n                label=\"Enter your end date YYYYMMDD\"\n                required\n                id=\"endDate\"\n                autoComplete=\"enddate\"\n                autoFocus\n                type=\"number\"\n                className={classes.textfield}\n                onChange={(event) => setEndDate(event.target.value)}\n            />\n            <Button variant='outlined' color='primary' onClick={handleAddAvailability}>\n                Submit availability\n            </Button>\n        </div>\n    )\n}\n\nexport default CaretakerAvailability\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport CalendarView from \"./CalendarView\"\nimport BidPanel from \"./BidPanel\"\nimport PetCareList from \"./PetCareList\"\nimport CaretakerAvailability from './CaretakerAvailability';\n\nfunction TabPanel(props) {\n  const { children, value, index, username, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <span>{children}</span>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: \"100%\",\n  },\n}));\n\nexport default function FullWidthTabs(props) {\n  const {username} = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n          centered\n        >\n          <Tab label=\"Bids\" {...a11yProps(0)} />\n          <Tab label=\"Availability/Salary\" {...a11yProps(1)} />\n          <Tab label=\"Pet Price\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          {/* <CalendarView/> */}\n          <BidPanel username={props.username}/>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <CaretakerAvailability username={props.username}/>\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          <PetCareList owner={true} username={props.username}/>\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n","import { Chip, FormControl, Input, InputLabel, NativeSelect, Select, FormHelperText, TextField, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { convertDate } from '../utils';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(3),\n        marginLeft: 0\n    },\n    textfield: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n}));\n\n\nconst Availability = (props) => {\n    const {setP1StartDate, setP1EndDate, setP2StartDate, setP2EndDate} = props;\n\n    const classes = useStyles();\n    return (\n        <div>\n            <Typography align=\"center\" >Please enter two periods of 150 days each.</Typography> \n            <TextField\n                variant=\"outlined\"\n                label=\"Enter your period 1 start date in YYYYMMDD\"\n                required\n                fullWidth\n                id=\"startDate\"\n                autoComplete=\"startdate\"\n                autoFocus\n                type=\"number\"\n                className={classes.textfield}\n                onChange={(event) => setP1StartDate(event.target.value)}\n            />\n            <TextField\n                variant=\"outlined\"\n                label=\"Enter your period 1 end date YYYYMMDD\"\n                required\n                fullWidth\n                id=\"endDate\"\n                autoComplete=\"enddate\"\n                autoFocus\n                type=\"number\"\n                className={classes.textfield}\n                onChange={(event) => setP1EndDate(event.target.value)}\n            />\n            <TextField\n                variant=\"outlined\"\n                label=\"Enter your period 2 start date in YYYYMMDD\"\n                required\n                fullWidth\n                id=\"startDate\"\n                autoComplete=\"startdate\"\n                autoFocus\n                type=\"number\"\n                className={classes.textfield}\n                onChange={(event) => setP2StartDate(event.target.value)}\n            />\n            <TextField\n                variant=\"outlined\"\n                label=\"Enter your period 2 end date YYYYMMDD\"\n                required\n                fullWidth\n                id=\"endDate\"\n                autoComplete=\"enddate\"\n                autoFocus\n                type=\"number\"\n                className={classes.textfield}\n                onChange={(event) => setP2EndDate(event.target.value)}\n            />\n                    \n        </div>\n    )\n}\n\nexport default Availability\n","import React, { useState } from 'react'\nimport { Card, Grid, Typography, Button, Modal, FormControl, FormLabel, RadioGroup, Radio, FormHelperText, FormControlLabel} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\n\nimport PetTypeInput from \"../../PetTypeInput\"\nimport Availability from '../../Availability';\n\nconst useStyles = makeStyles((theme) => ({\n    verticalSections: {\n        margin: \"100px 10px 30px\"\n    },\n    modal: {\n        width: \"40%\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: 'absolute',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}))\n\n\nconst NotCaretakerPage = () => {\n    const classes = useStyles();\n    const [signUpModal, setSignUpModal] = useState(false);\n    const [caretakerType, setCaretakerType] = useState(\"parttime\");\n    const [petType, setPetType] = useState('');\n    const [petPrice, setPetPrice] = useState(0);\n    const [p1startDate, setP1StartDate] = useState(0);\n    const [p1endDate, setP1EndDate] = useState(0);\n    const [p2startDate, setP2StartDate] = useState(0);\n    const [p2endDate, setP2EndDate] = useState(0);\n\n    const addPartTimeCareTaker = useStoreActions(actions => actions.careTakers.addPartTimeCareTaker);\n    const addFullTimeCareTaker = useStoreActions(actions => actions.careTakers.addFullTimeCareTaker);\n    const singleUser = useStoreState(state => state.user.singleUser);\n    const getUser = useStoreActions(actions => actions.user.getUser);\n    const getDisplayedUser = useStoreActions(actions => actions.user.getDisplayedUser);\n\n    const onChangeCaretakerType = (event) => {\n        setCaretakerType(event.target.value);\n    }\n\n    const onSelectType = (event) => {\n        setPetType(event.target.value);\n    }\n    \n    const onInputPrice = (event) => {\n        setPetPrice(event.target.value);\n    }\n\n    const toggleSignUpModal = () => {\n        setSignUpModal(!signUpModal);\n    }\n\n    const signUpCaretaker = async () => {\n        console.log({\n            username: singleUser.username,\n            name: singleUser.firstname,\n            age: singleUser.age,\n            pettype: petType,\n            price: parseInt(petPrice)\n        })\n        if (caretakerType == 'parttime') {\n            await addPartTimeCareTaker({\n                username: singleUser.username,\n                name: singleUser.firstname,\n                age: singleUser.age,\n                pettype: petType,\n                price: parseInt(petPrice)\n            })\n            getUser(singleUser.username);\n            getDisplayedUser(singleUser.username);\n        }\n        else if (caretakerType == 'fulltime') { \n            await addFullTimeCareTaker({\n                    username: singleUser.username,\n                    name: singleUser.firstname,\n                    age: singleUser.age,\n                    pettype: petType,\n                    price: parseInt(petPrice), \n                    period1_s: p1startDate,\n                    period1_e: p1endDate,\n                    period2_s: p2startDate,\n                    period2_e: p2endDate\n                })\n            getUser(singleUser.username);\n            getDisplayedUser(singleUser.username);\n        }\n        toggleSignUpModal()\n    }\n\n    return (\n        \n        <Grid container>\n            <Grid item className={classes.verticalSections} xs = {12}>\n                <Typography>\n                    You are not a caretaker.\n                </Typography>\n                <Button color = 'primary' variant ='contained' onClick = {toggleSignUpModal}>\n                    Sign up here\n                </Button>\n                <Typography>\n                    If you have signed up, please click on the page again.\n                </Typography>\n            </Grid>\n            <Modal\n                open={signUpModal}\n                onClose={toggleSignUpModal}>\n                <Card className={classes.modal}>\n                    <FormControl component=\"fieldset\" >\n                        <FormLabel component=\"legend\">Type of caretaker</FormLabel>\n                        <RadioGroup value={caretakerType} onChange={onChangeCaretakerType}>\n                            <FormControlLabel value=\"parttime\" control={<Radio />} label=\"Part-time\" />\n                            <FormControlLabel value=\"fulltime\" control={<Radio />} label=\"Full-time\" />\n                        </RadioGroup>\n                        <FormHelperText>Choose at least one role!</FormHelperText>\n                    </FormControl>\n                    { caretakerType === 'fulltime' ?\n                    <>\n                    <PetTypeInput parentType = {onSelectType} parentPrice={onInputPrice} label = \"Choose a pet type you can care for\"/>\n                    <Availability setP1StartDate={setP1StartDate} setP1EndDate={setP1EndDate} setP2StartDate={setP2StartDate} setP2EndDate={setP2EndDate}/>\n                    </> :\n                    <>\n                    <PetTypeInput parentType = {onSelectType} parentPrice={onInputPrice} label = \"Choose a pet type you can care for\"/>\n                    </>}\n                    <Button color=\"primary\" onClick={signUpCaretaker}> Confirm sign up </Button>\n                </Card>\n            </Modal>\n        </Grid>\n    )\n}\n\nexport default NotCaretakerPage\n","import React, { useEffect } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams } from 'react-router-dom';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport TabPanel from \"../components/careTakerAdmin/TabPanel\"\nimport NotCaretakerPage from '../components/userProfile/careTakerProfile/NotCaretakerPage';\n\nconst useStyles = makeStyles({\n    root: {\n        margin: \"100px 30px 30px\"\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    header: {\n        marginBottom: 10,\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        width: \"100%\",\n        textAlign: \"center\",\n    }\n})\n\nconst CaretakerAdmin = () => {\n    const classes = useStyles();\n    const params = useParams();\n    // console.log(params)\n    const username = params.username;\n    const getSingleUser = useStoreActions(actions => actions.user.getUser);\n    const singleUser = useStoreState(state => state.user.singleUser);\n\n    useEffect(() => {\n        getSingleUser(username);\n        return () => {};\n    }, []);\n    \n    if (singleUser.is_carer) {\n        return (\n            <div>\n                <Grid container className={classes.root}>\n                <Card className={classes.header}>\n                    <CardContent>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            Caretaker type: {singleUser.is_fulltimer ? \"Full-time Caretaker\" : \"Part-time Caretaker\"}\n                        </Typography>\n                    </CardContent>\n                </Card>\n                    <Grid item xs={12}>\n                        <TabPanel username = {username}/>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    } else {\n        return (\n            <NotCaretakerPage/>\n        )\n    }\n}\n\nexport default CaretakerAdmin\n","import React from 'react'\nimport { Typography } from '@material-ui/core';\n\nconst Welcome = () => {\n    return (\n        <Typography variant=\"h2\">\n            Welcome!\n        </Typography>\n    )\n}\n\nexport default Welcome","import React from 'react'\nimport { Card, CardActionArea, CardContent, CardMedia, Typography, Button, Grid } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { v4 } from 'uuid';\nimport { useStoreState } from 'easy-peasy';\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    media: {\n        height: 140,\n    },\n    container: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 400,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n    searchbar: {\n        margin: theme.spacing(1),\n    },\n}));\n\nconst WelcomeCards = () => {\n    const classes = useStyles();\n\n    const user = useStoreState(state => state.user.singleUser);\n\n    const welcomeCardsInfo = [\n    {\n        name: 'Caretaking Services',\n        available: true,\n        link: '/users/caretakers',\n        description: 'Find a caretaker for your pet today!',\n        imageLink: 'https://storage.googleapis.com/petbacker/images/blog/2017/dog-lover-in-autumn.jpg'\n    },\n    {\n        name: 'Caretaker Settings',\n        available: true,\n        link: '/users/' + user.username + '/caretaker-admin',\n        description: 'Edit your caretaker profile',\n        imageLink: 'https://storage.googleapis.com/petbacker/images/blog/2018/pet-care-dog-sitting-services.jpg',\n    },\n    ]\n\n    return (\n        <Grid container spacing={3}>\n            {welcomeCardsInfo.map((welcomeCardInfo) => (\n                <Grid key={v4()} item xs={6}>\n                    <Card className={classes.card} variant=\"outlined\" width={1}>\n                        <CardActionArea component={Link} to={welcomeCardInfo.link} style={{ textDecoration: 'none' }}>\n                            <CardMedia\n                                className={classes.media}\n                                image={welcomeCardInfo.imageLink}\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    {welcomeCardInfo.name}\n                                </Typography>\n                                <Typography variant=\"body2\" component=\"p\">\n                                    {welcomeCardInfo.description}\n                                </Typography>\n                                <Button size=\"small\" color=\"primary\">\n                                    Learn More\n                                </Button>\n                            </CardContent>\n                        </CardActionArea>\n                    </Card>\n                </Grid>\n            ))}\n        </Grid>\n    )\n}\n\nexport default WelcomeCards;","import React from 'react'\nimport Welcome from '../components/Welcome';\nimport WelcomeCards from '../components/WelcomeCards'\nimport { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    media: {\n        height: 140,\n    },\n    container: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}))\n\nconst Homepage = () => {\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"xl\" className={classes.container}>\n            <Welcome />\n            <WelcomeCards />\n        </Container>\n    )\n}\n\nexport default Homepage\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\n\nconst UpdateUser = (props) => {\n    const { id } = useParams();\n\n    return (\n        <div className=\"text-center\">\n            Update Userssss UWU\n        </div>\n    )\n}\n\nexport default UpdateUser\n","import React from 'react'\nimport UpdateUser from '../components/UpdateUser'\n\nconst Updatepage = () => {\n    return (\n        <div>\n            <UpdateUser />\n        </div>\n    )\n}\n\nexport default Updatepage\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginTop: 200\n  },\n  media: {\n    height: 140,\n  },\n});\n\nconst SetPricepage = () => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image=\"https://i.insider.com/5ebd4a2a1441925fab23f6c6?width=600&format=jpeg&auto=webp\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Lizard\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n            across all continents except Antarctica\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default SetPricepage\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nexport default function CaretakersVerticalTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n      >\n        <Tab label=\"Item One\" {...a11yProps(0)} />\n        <Tab label=\"Item Two\" {...a11yProps(1)} />\n        <Tab label=\"Item Three\" {...a11yProps(2)} />\n        <Tab label=\"Item Four\" {...a11yProps(3)} />\n        <Tab label=\"Item Five\" {...a11yProps(4)} />\n        <Tab label=\"Item Six\" {...a11yProps(5)} />\n        <Tab label=\"Item Seven\" {...a11yProps(6)} />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        Item One\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        Item Two\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Item Three\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        Item Four\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        Item Five\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        Item Six\n      </TabPanel>\n      <TabPanel value={value} index={6}>\n        Item Seven\n      </TabPanel>\n    </div>\n  );\n}","import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { useEffect } from 'react';\n\n// const columns = [\n//   { field: 'id', headerName: 'ID', width: 70 },\n//   { field: 'firstName', headerName: 'First name', width: 130 },\n//   { field: 'lastName', headerName: 'Last name', width: 130 },\n//   {\n//     field: 'age',\n//     headerName: 'Age',\n//     type: 'number',\n//     width: 90,\n//   },\n//   {\n//     field: 'fullName',\n//     headerName: 'Full name',\n//     description: 'This column has a value getter and is not sortable.',\n//     sortable: false,\n//     width: 160,\n//     valueGetter: (params) =>\n//       `${params.getValue('firstName') || ''} ${\n//         params.getValue('lastName') || ''\n//       }`,\n//   },\n// ];\n\n// const rows = [\n//   { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n//   { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n//   { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n//   { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n//   { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n//   { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n//   { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n//   { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n//   { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n// ];\nconst columns = [\n  { field: 'id', headerName: 'Index', width: 100 },\n  { field: 'username', headerName: 'Username', width: 130 },\n  { field: 'carername', headerName: 'First name', width: 130 },\n  { field: 'age', headerName: 'Age', width: 130 },\n  { field: 'pettypes', headerName: 'Pet types', width: 130 },\n  { field: 'rating', headerName: 'Rating', width: 130 },\n  { field: 'salary', headerName: 'Salary', width: 130 }\n];\n\nconst CaretakersList = () => {\n\n  const getCareTakers = useStoreActions(actions => actions.careTakers.getCareTakers); // use getCareTakers action\n\n  useEffect(() => {\n    getCareTakers();\n    return () => {};\n  }, [])\n  const caretakers = useStoreState(state => state.careTakers.caretakers);\n  // console.log(caretakers);\n  var id = 0;\n  return (\n    <div style={{ height: 800, width: '90%', marginTop: 100}}>\n      <DataGrid rows={caretakers.map(caretaker => ({\n        \"id\": ++id,\n        \"username\": caretaker.username,\n        \"carername\": caretaker.carername,\n        \"age\": caretaker.age,   \n        \"pettypes\": caretaker.pettypes,\n        \"rating\": caretaker.rating,\n        \"salary\": caretaker.salary\n      }))} columns={columns} pageSize={10} checkboxSelection />\n    </div>\n  );\n}\n\nexport default CaretakersList","import React from 'react'\nimport CaretakersVerticalTabs from '../components/admin/CaretakersVerticalTabs'\nimport CaretakersList from '../components/CaretakersList'\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n    verticalSections: {\n        margin: \"100px 10px 30px\"\n    }\n})\n\nconst ViewCaretakerspage = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.verticalSections}>\n      <CaretakersVerticalTabs/>\n      <CaretakersList/>\n    </div>\n  );\n}\n\nexport default ViewCaretakerspage\n","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    profile: {\n        width: 130,\n        height: 130,\n        margin: \"0px 30px 0 0\",\n        background: \"white\"\n    },\n    media: {\n        height: '100%',\n        width: '100%'\n    }\n});\n\nconst ProfilePic = (props) => {\n    const classes = useStyles();\n    return (\n        <div>\n            <Avatar className={classes.profile}>\n                <a href={props.href}>\n                    <img className={classes.media} src={props.img}/>\n                </a>\n            </Avatar>\n        </div>\n    )\n}\n\nexport default ProfilePic\n","import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types';\nimport { Button, FormControl, InputLabel, Select, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\n\nconst useStyles = makeStyles((theme) => ({\n    textfield: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    button: {\n        margin: theme.spacing(3),\n    }\n}));\n\nconst UserModal = (props) => {\n  const {closeModal} = props;\n  const classes = useStyles();\n  const editUser = useStoreActions(actions => actions.user.editUser);\n  const singleUser = useStoreState(state => state.user.singleUser);\n  const [userFirstName, setUserFirstName] = useState(singleUser.firstname);\n  const [userAge, setUserAge] = useState(singleUser.age);\n\n  const userType = singleUser.is_petowner && singleUser.is_carer ? \"both\" : singleUser.is_carer ? \"caretaker\" : \"petowner\";\n\n//   console.log(userType);\n\n  const handleButtonClick = () => {\n    if (userType === 'petowner') {\n        editUser({\n            username: singleUser.username,\n            firstname: userFirstName,\n            age: userAge,\n            usertype: 'petowner'\n        });\n    } else if (userType === 'caretaker') {\n        editUser({\n            username: singleUser.username,\n            firstname: userFirstName,\n            age: userAge,\n            usertype: 'caretaker'\n        });\n    } else {\n        editUser({\n            username: singleUser.username,\n            firstname: userFirstName,\n            age: userAge,\n            usertype: 'caretaker'\n        });\n        editUser({\n            username: singleUser.username,\n            firstname: userFirstName,\n            age: userAge,\n            usertype: 'petowner'\n        });\n    }\n\n    closeModal();\n\n  }\n\n  return (\n    <form>\n        <TextField\n            variant=\"outlined\"\n            label=\"Username (You can't change your username)\"\n            required\n            fullWidth\n            disabled\n            id=\"username\"\n            autoComplete=\"userName\"\n            defaultValue={singleUser.username}\n            multiline\n            autoFocus\n            className={classes.textfield}\n        />\n        <TextField\n            variant=\"outlined\"\n            label=\"User First Name\"\n            required\n            fullWidth\n            id=\"userfirstname\"\n            autoComplete=\"userFirstName\"\n            defaultValue={singleUser.firstname}\n            autoFocus\n            className={classes.textfield}\n            onChange={(event) => setUserFirstName(event.target.value)}\n        />\n        \n        <TextField\n            variant=\"outlined\"\n            label=\"User Age\"\n            required\n            fullWidth\n            id=\"userage\"\n            autoComplete=\"userAge\"\n            type=\"number\"\n            defaultValue={singleUser.age}\n            autoFocus\n            className={classes.textfield}\n            onChange={(event) => setUserAge(event.target.value)}\n        />\n        <Button className={classes.button}\n            variant=\"contained\"\n            color=\"inherit\"\n            onClick={() => handleButtonClick()}\n        >\n            Save User Information\n        </Button>\n    </form>\n  )\n}\n\nexport default UserModal\n","import React, {useEffect, useState} from 'react'\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ProfilePic from \"./ProfilePic\"\nimport profileImg from \"../../assets/userProfile/userProfile.png\"\nimport { Modal } from '@material-ui/core';\nimport UserModal from './UserModal';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: 40,\n        padding: 50,\n        height: 250\n    },\n\n    profileTextArea: {\n        margin: \"0px 20px 0px\",\n    },\n    profileText: {\n        marginBottom: 15\n    },\n    modal: {\n        width: \"40%\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: 'absolute',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\nconst UserCard = (props) => { // currently, when you click on caretaker from FindCaretakers.js, this UserCard is used but it's fetching petowner instead.\n    const classes = useStyles();\n    \n    const username = props.username;\n\n    // console.log(username);\n\n    const getDisplayedUser = useStoreActions(actions => actions.user.getDisplayedUser);\n    const displayedUser = useStoreState(state => state.user.displayedUser);\n    const singleUser = useStoreState(state => state.user.singleUser);\n    const getUserRating = useStoreActions(actions => actions.careTakers.getRating);\n    const userRating = useStoreState(state => state.careTakers.userRating);\n\n\n    useEffect(() => {\n        getDisplayedUser(username);\n        getUserRating(username);\n        return () => {};\n    }, [])\n\n    const [open, setOpen] = useState(false);\n\n    const toggleModal = () => {\n        setOpen(!open);\n    }\n\n    // console.log(petOwnerDetails);\n\n    if (props.display === 'petowner') {\n        return (\n            <div>\n                <Card onClick={() => toggleModal()} className={classes.root}>\n                    <Grid container>\n                        <Grid item xs={3}>\n                            <ProfilePic img={profileImg}/>\n                        </Grid>\n                        <Grid item className={classes.profileTextArea}>\n                            <h2 className={classes.profileText}> {displayedUser.username}</h2>\n                            <h2 className={classes.profileText}> ({displayedUser.firstname})</h2>\n                            <h4> Age: {displayedUser.age}</h4>\n                            <h6>Click on your profile to make any updates!</h6>\n                            {/* <h4> Rating: 4.5 / 5 </h4> */}\n                        </Grid>\n                    </Grid>\n                </Card>\n                <Modal\n                        open={open}\n                        onClose={toggleModal}>\n                        <Card className={classes.modal}>\n                            <UserModal closeModal={toggleModal}/>\n                        </Card>\n                </Modal>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <Card onClick={() => toggleModal()} className={classes.root}>\n                    <Grid container>\n                        <Grid item xs={3}>\n                            <ProfilePic img={profileImg}/>\n                        </Grid>\n                        <Grid item className={classes.profileTextArea}>\n                            <h2 className={classes.profileText}> {displayedUser.username} ({displayedUser.firstname})</h2>\n                            <h4> Age: {displayedUser.age}</h4>\n                            <h4> Caretaker Type: {displayedUser.is_fulltimer ? \"full-timer\" : \"part-timer\"}</h4>\n                            <h4> Rating: {parseFloat(userRating.avg).toFixed(2)} </h4>\n                            <h6>Click on your profile to make any updates!</h6>\n\n                        </Grid>\n                    </Grid>\n                </Card>\n                <Modal\n                        open={open}\n                        onClose={toggleModal}>\n                        <Card className={classes.modal}>\n                            <UserModal closeModal={toggleModal}/>\n                        </Card>\n                </Modal>\n            </div>\n        )\n    }\n\n}\n\nexport default UserCard\n","import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types';\nimport { Button, FormControl, InputLabel, Select, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CREATE, EDIT, DELETE } from \"../constants\"\nimport { useStoreActions, useStoreState } from 'easy-peasy';\n\nconst useStyles = makeStyles((theme) => ({\n    textfield: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    button: {\n        margin: theme.spacing(3),\n    }\n}));\n\n\nconst AddPet = (props) => {\n    const {parentCallback, parentData, closeModal, modalType, ...other} = props;\n    const classes = useStyles();\n    const [petName, setPetName] = useState('');\n    const [petType, setPetType] = useState('');\n    const [petAge, setPetAge] = useState(0);\n    const [petRequirements, setPetRequirements] = useState('');\n    const getPetCategories = useStoreActions(actions => actions.pets.getPetCategories);\n    const petCategories = useStoreState(state => state.pets.petCategories);\n\n    const sendData = (action) => {\n        props.parentCallback({\n            \"petName\": petName,\n            \"petType\": petType,\n            \"petAge\": petAge,\n            \"petRequirements\": petRequirements\n        }, action);\n    }\n\n    const handleButtonClick = (action) => {\n        sendData(action);\n        closeModal();\n    }\n    \n    useEffect(() => {\n        getPetCategories();\n        setPetName(props.parentData.petName);\n        setPetType(props.parentData.petType);\n        setPetAge(props.parentData.petAge);\n        setPetRequirements(props.parentData.petRequirements);\n        return () => {};\n    }, [])\n\n    return (\n        <form>\n            <TextField\n                variant=\"outlined\"\n                label=\"Pet Name\"\n                required\n                fullWidth\n                id=\"petName\"\n                autoComplete=\"petName\"\n                defaultValue={props.parentData.petName}\n                multiline\n                autoFocus\n                className={classes.textfield}\n                onChange={(event) => setPetName(event.target.value)}\n            />\n            <FormControl required variant=\"outlined\" fullWidth className={classes.formControl} >\n                <InputLabel htmlFor='select-caretaker-petType'>Pet Type</InputLabel>\n                    <Select\n                        native\n                        value={petType}\n                        label=\"Pet Type\"\n                        onChange={(event) => setPetType(event.target.value)}\n                        inputProps={{\n                            name: 'pettype',\n                            id: 'select-caretaker-petType',\n                        }}\n                    >\n                        <option aria-label=\"None\" value=\"\" />\n                        {petCategories.map((type) => (\n                                <option key={type.pettype} value={type.pettype}>\n                                    {type.pettype}\n                                </option>\n                        ))}\n                    </Select>\n            </FormControl>\n            <TextField\n                variant=\"outlined\"\n                label=\"Pet Age\"\n                required\n                fullWidth\n                id=\"petAge\"\n                autoComplete=\"petAge\"\n                type=\"number\"\n                defaultValue={props.parentData.petAge}\n                autoFocus\n                className={classes.textfield}\n                onChange={(event) => setPetAge(event.target.value)}\n            />\n            \n            <TextField\n                variant=\"outlined\"\n                label=\"Special Requirements\"\n                fullWidth\n                id=\"petRequirements\"\n                autoComplete=\"petRequirements\"\n                defaultValue={props.parentData.petRequirements}\n                multiline\n                autoFocus\n                className={classes.textfield}\n                onChange={(event) => setPetRequirements(event.target.value)}\n            />\n            <Button className={classes.button}\n                variant=\"contained\"\n                color=\"inherit\"\n                onClick={() => handleButtonClick(props.modalType)}\n            >\n                Save Pet Information\n            </Button>\n            {props.modalType == EDIT ? \n                <Button className={classes.button}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => handleButtonClick(DELETE)}\n                >\n                    Delete Pet\n                </Button> : null }\n            \n\n        </form>\n    )\n}\n\nAddPet.propTypes = {\n    parentCallback: PropTypes.func,\n    parentData: PropTypes.object,\n    closeModal: PropTypes.func,\n    modalType: PropTypes.string,\n};\nAddPet.defaultProps = {\n    parentCallback: function() {\n        console.log(\"There is no parent callback function defined\");\n    },\n    closeModal: function() {\n        console.log(\"Please pass a close modal function from the parent\")\n    },\n    parentData: {\n        petName: \"\",\n        petType: \"\",\n        petAge: 0,\n        petRequirements: \"\"\n    },\n    modalType: CREATE\n}\nexport default AddPet\n","const CREATE = \"create\"\nconst EDIT = \"edit\"\nconst DELETE = \"delete\"\n\n\nexport { CREATE, EDIT, DELETE }","import React from 'react'\nimport { Card, Grid, ListItem, ListItemAvatar, ListItemText, Avatar, Modal, TextField } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport ProfilePic from \"./ProfilePic\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport petImg from \"../../assets/userProfile/pet.png\"\nimport AddPet from \"../AddPet\";\nimport { useEffect } from 'react';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { v4 } from 'uuid';\nimport { CREATE, EDIT, DELETE } from \"../../constants\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: 30,\n        maxHeight: 600\n    },\n    petAvatar: {\n        margin: 10\n    },\n    modal: {\n        width: \"40%\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: 'absolute',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    petName: {\n        textAlign: \"center\"\n    }\n}));\n\nconst PetList = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const [petDetails, setPetDetails] = React.useState({});\n    const [modalType, setModalType] = React.useState(CREATE);\n    const {username, ...other} = props;\n    const addPetOwner = useStoreActions(actions => actions.petOwners.addPetOwner);\n    const singleUser = useStoreState(state => state.user.singleUser);\n    const getUser = useStoreActions(actions => actions.user.getUser);\n    const getDisplayedUser = useStoreActions(actions => actions.user.getDisplayedUser);\n\n    const openModal = () => {\n        setOpen(true);\n    }\n\n    const closeModal = async () => {\n        setOpen(false);\n        await getUserPets(props.username);\n        setPetDetails({});\n        \n    }\n\n    const openCreateModal = () => {\n        openModal();\n        setModalType(CREATE);\n    }\n\n    const clickOnPet = (name, type, age, petReq) => {\n        openModal();\n        setModalType(EDIT);\n        setPetDetails({\n            petName: name,\n            petType: type,\n            petAge: age,\n            petRequirements: petReq\n        });\n    }\n\n    const handleCreateOrEditPet = (petData, action) => {\n        if (action == CREATE) {\n            if (!singleUser.is_petowner) {\n                addPetOwner({\n                    username: singleUser.username,\n                    ownername: singleUser.firstname,\n                    age: singleUser.age,\n                    pettype: petData.petType,\n                    petname: petData.petName,\n                    petage: petData.petAge,\n                    requirements: petData.petRequirements\n                })\n\n                getUser(singleUser.username);\n                getDisplayedUser(singleUser.username);\n            }\n\n            createPet({\n                username: props.username,\n                petname: petData.petName,\n                pettype: petData.petType,\n                petage: petData.petAge,\n                requirements: petData.petRequirements\n            })\n        }\n        if (action == EDIT) {\n            editPet({\n                username: props.username,\n                petname: petData.petName,\n                pettype: petData.petType,\n                petage: petData.petAge,\n                requirements: petData.petRequirements\n            })\n        }\n        if (action == DELETE) {\n            deletePet({\n                username: props.username,\n                petname: petData.petName\n            })\n        }\n    }\n\n    const getUserPets = useStoreActions(actions => actions.pets.getOwnerPets);\n    const createPet = useStoreActions(actions => actions.pets.addPet);\n    const editPet = useStoreActions(actions => actions.pets.editPet);\n    const deletePet = useStoreActions(actions => actions.pets.deletePet);\n\n    useEffect(() => {\n        getUserPets(props.username);\n        return () => {};\n    }, [])\n\n    const pets = useStoreState(state => state.pets.ownerSpecificPets);\n    console.log(pets);\n\n    const classes = useStyles();\n    var id = 0;\n    return (\n        <Card className={classes.root}>\n            <h2> Pets Owned </h2>\n            <Grid container>\n                {pets.map((pet) => {\n                    return(\n                        <Grid key={v4()} item className={classes.petAvatar} onClick={() => clickOnPet(pet.petname, pet.pettype, pet.petage, pet.requirements)}>\n                            <ProfilePic img={petImg} href=\"#\"/>\n                            <h6 className={classes.petName}> {pet.petname} </h6>\n                        </Grid>)\n                })}\n            </Grid>\n            <ListItem button onClick={openCreateModal}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <AddIcon/>\n                        </Avatar>\n                    </ListItemAvatar>\n            {!singleUser.is_petowner ? \n            <>\n                <ListItemText\n                    primary=\"Click to add new pet to become a pet owner!\"\n                />\n            </> : <>\n                <ListItemText\n                    primary=\"Click to add new pet\"\n                />\n            </> }\n            </ListItem>\n            <Modal\n                open={open}\n                onClose={closeModal}>\n                <Card className={classes.modal}>\n                    <AddPet parentData={petDetails} parentCallback={handleCreateOrEditPet} closeModal={closeModal} modalType={modalType}/>\n                </Card>\n            </Modal>\n        </Card>\n    )\n}\n\nexport default PetList\n","import React, { useEffect, useState } from 'react'\nimport { Card, List, ListItem, Grid, Typography, Button, Modal, TextField} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { v4 } from 'uuid';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { sqlToJsDate } from '../../utils';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n        width: \"100%\"\n    }, \n    modal: {\n        width: \"40%\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: 'absolute',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    textfield: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nconst OrderList = (props) => {\n    const {username} = props;\n    const classes = useStyles();\n    const [reviewModal, setReviewModal] = useState(false);\n    const [modalBid, setModalBid] = useState({});\n    const [rating, setRating] = useState(5);\n    const [review, setReview] = useState(\"\");\n    const getPetOwnerBids = useStoreActions(actions => actions.bids.getPetOwnerBids);\n    const addReviewToBid = useStoreActions(actions => actions.bids.addReviewToBid);\n    const makePayment = useStoreActions(actions => actions.bids.makePayment);\n    const petOwnerBids = useStoreState(state => state.bids.petOwnerBids);\n    \n\n    useEffect(() => {\n        getPetOwnerBids(username);\n        return () => {};\n    }, []);\n\n    const handleMakePayment = (bidInfo) => {\n        makePayment({\n            pouname: bidInfo.pouname,\n            petname: bidInfo.petname,\n            pettype: bidInfo.pettype,\n            ctuname: bidInfo.ctuname,\n            s_time: bidInfo.s_time,\n            e_time: bidInfo.e_time\n        })\n    }\n\n    const openReviewModal = (bid) => {\n        setReviewModal(true);\n        setModalBid(bid);\n    }\n    const closeReviewModal = () => {\n        setReviewModal(false);\n    }\n\n    const submitReview = () => {\n        addReviewToBid({\n            bid: modalBid,\n            rating: rating,\n            review: review\n        })\n        closeReviewModal()\n    }\n\n    return (\n        <div>\n            <Card style={{width: \"100%\"}} className={classes.root}>\n                <List style={{maxHeight:500, overflow: 'auto'}}>\n                        {petOwnerBids.map((bid) => {\n                            return (<Grid key={v4()}>\n                                <Typography>\n                                    Pet: {bid.petname}\n                                </Typography>\n                                <Typography>\n                                    Caretaker: {bid.ctuname}\n                                </Typography>\n                                <Typography>\n                                    Duration: {sqlToJsDate(bid.s_time).toLocaleDateString()} to {sqlToJsDate(bid.e_time).toLocaleDateString()}\n                                </Typography>\n                                <Typography>\n                                    Bid: {bid.is_win == null ? \"Pending\" : bid.is_win ? \"Accepted\" : \"Rejected\"}\n                                </Typography>\n                                {bid.is_win ? \n                                    <>\n                                    <Typography>\n                                        Job status: {sqlToJsDate(bid.e_time) < new Date() ? \"Completed\" : \"In process\"}\n                                    </Typography>\n                                    <Typography>\n                                        Payment made: {bid.pay_status ? \"Payment completed\" : \"Pending payment\"}\n                                    </Typography>\n                                    {bid.pay_status \n                                        ?  sqlToJsDate(bid.e_time) < new Date() \n                                            ? bid.review == null \n                                                ? <Button color='default' variant='contained' onClick={()=> openReviewModal(bid)}>Leave Review </Button> \n                                                : \"Review Completed\"\n                                            : null\n                                        : <Button color='default' variant='contained' onClick={() => handleMakePayment(bid)}> Make Payment </Button>}\n                                    </>\n                                    : null\n                                }\n                                <Typography>\n                                    ----------------------------------------------------------------------\n                                </Typography>\n                            </Grid>);\n                        })}\n                </List>\n            </Card>\n            <Modal\n                open={reviewModal}\n                onClose={closeReviewModal}>\n                <Card className={classes.modal}>\n                    <TextField\n                            variant=\"outlined\"\n                            label=\"Rating (1 to 5)\"\n                            required\n                            fullWidth\n                            id=\"rating\"\n                            autoFocus\n                            type=\"number\"\n                            InputProps={{\n                                inputProps: { \n                                    max: 5, min: 1\n                            }\n                            }}\n                            className={classes.textfield}\n                            onChange={(event) => setRating(event.target.value)}\n                        />\n                    <TextField\n                        id=\"review\"\n                        label=\"Leave review here\"\n                        multiline\n                        rows={3}\n                        fullWidth\n                        variant=\"outlined\"\n                        className={classes.textfield}\n                        onChange={(event) => setReview(event.target.value)}\n                    />\n                    <Button variant=\"outlined\" onClick={() => submitReview()}>\n                        Submit Review\n                    </Button>\n                </Card>\n            </Modal>\n        </div>\n\n    )\n}\n\nexport default OrderList\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { AppBar, Card, Tabs, Tab, Typography, Box } from '@material-ui/core';\n\nimport OrderList from \"./OrderList\"\n\nfunction ProfileTabs(props) {\n  const { children, value, index, ...other } = props;\n  // console.log(other);\n\n  return (\n    <div\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <span>{children}</span>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nProfileTabs.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n  },\n}));\n\nexport default function FullWidthTabs(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Pet Owner\" {...a11yProps(0)} />\n          <Tab label=\"Care Taker\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <ProfileTabs value={value} index={0} dir={theme.direction}>\n          <OrderList type=\"Order\" username={props.username}/>\n        </ProfileTabs>\n        <ProfileTabs value={value} index={1} dir={theme.direction}>\n          <OrderList type=\"Job\"/>\n        </ProfileTabs>\n      </SwipeableViews>\n    </div>\n  );\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport UserCard from \"../components/userProfile/UserCard\"\nimport PetList from \"../components/userProfile/PetList\"\nimport ProfileTabs from \"../components/userProfile/ProfileTabs\"\nimport { useParams } from 'react-router-dom';\nimport OrderList from '../components/userProfile/OrderList';\n\nconst useStyles = makeStyles({\n    verticalSections: {\n        margin: \"100px 10px 30px\"\n    }\n})\n\nconst UserProfile = () => {\n    const classes = useStyles();\n    const params = useParams();\n\n    // console.log(params);\n    const username = params.username;\n\n    return (\n        <Grid container>\n            <Grid item className={classes.verticalSections} xs={7}>\n                <Grid item xs={12}>\n                    <UserCard username={username} display={'petowner'}/>\n                </Grid>\n                <Grid item>\n                    <PetList username={username}/>\n                </Grid>\n            </Grid>\n            <Grid item className={classes.verticalSections} xs={4}>\n                {/* <ProfileTabs username={username}/> */}\n                <Typography variant=\"h3\" align=\"center\"> Bid List </Typography>\n                <OrderList username={username}/>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default UserProfile\n","import React, { useEffect } from 'react'\nimport Card from '@material-ui/core/Card'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { v4 } from 'uuid';\nimport { ListItemSecondaryAction, ListItemText } from '@material-ui/core';\n\n\n\nconst ReviewPanel = (props) => {\n    const getUserReviews = useStoreActions(actions => actions.careTakers.getUserReviews);\n    const userReviews = useStoreState(state => state.careTakers.userReviews);\n    useEffect(() => {\n        getUserReviews(props.username);\n        return () => {};\n    }, [])\n    return (\n        <Card style={{width: \"100%\"}}>\n            <List style={{maxHeight:300, overflow: 'auto'}}>\n                            {userReviews.map((item) => {\n                                return (<ListItem key={v4()}>\n                                    <ListItemText\n                                    primary = {`${item.pouname}: ${item.review}`}/>\n                                    <ListItemSecondaryAction>\n                                        <ListItemText\n                                        primary={`Rating: ${item.rating}/5`}/>\n                                    </ListItemSecondaryAction>\n                                </ListItem>);\n                            })}\n                        </List>\n        </Card>\n    )\n}\n\nexport default ReviewPanel\n","import React, {useEffect} from 'react'\nimport { Card, Grid, Typography, Button} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport UserCard from \"../components/userProfile/UserCard\"\nimport PetCareList from \"../components/careTakerAdmin/PetCareList\"\nimport NotCaretakerPage from \"../components/userProfile/careTakerProfile/NotCaretakerPage\"\nimport {\n  useParams\n} from \"react-router-dom\";\n\nimport ReviewPanel from \"../components/userProfile/careTakerProfile/ReviewPanel\"\nimport { useStoreActions, useStoreState } from 'easy-peasy';\n\nconst useStyles = makeStyles({\n    verticalSections: {\n        margin: \"100px 30px 30px\"\n    },\n    card: {\n        marginTop: 30\n    }\n})\n\nconst CaretakerProfile = (props) => {\n    const classes = useStyles();\n    const params = useParams();\n\n    // console.log(params);\n    const username = params.username;\n    \n    const getDisplayedUser = useStoreActions(actions => actions.user.getDisplayedUser);\n    const displayedUser = useStoreState(state => state.user.displayedUser);\n    // console.log(caretaker);\n\n    useEffect(() => {\n        getDisplayedUser(username);\n        return () => {};\n    }, []);\n    \n\n    if (displayedUser.is_carer == true) {\n        return (\n            <div>\n                <Grid container>\n                    <Grid item className={classes.verticalSections} xs={12}>\n                        <Grid item xs={12}>\n                            <UserCard display={'caretaker'} username={username}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Card>\n                                <PetCareList owner={false} username={username}/>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={12} className={classes.card}>\n                            <Typography variant='h4'> Reviews </Typography> \n                            <ReviewPanel username={username}/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    } else {\n        return (\n            <NotCaretakerPage/>\n        )\n    }\n}\n\nexport default CaretakerProfile\n","const serverUrl = \"http://localhost:5000\"\nexport {serverUrl}","import { action, thunk } from 'easy-peasy';\nimport axios from 'axios';\nimport { serverUrl } from './serverUrl';\nimport { convertDate, sqlToJsDate } from '../../utils';\n\nconst careTakersModel = {\n    caretakers: [],\n    petCareList: [],\n    petTypeList: [],\n    availability: [],\n    userReviews: [],\n    userRating: [],\n\n    getCareTakers: thunk(async (actions, payload) => {\n      const {data} = await axios.get(\"http://localhost:5000/api/v1/caretaker\");\n      actions.setUsers(data.data.users); \n    }),\n\n    setUsers: action((state, payload) => {\n      state.caretakers = [...payload];\n    }),\n    addPartTimeCareTaker: thunk(async (actions, payload) => {\n      const {username, name, age, pettype, price} = {...payload};\n      const url = serverUrl + \"/api/v1/parttimer\";\n      const {data} = await axios.post(url, {\n          username: username,\n          name: name,\n          age: age,\n          pettype: pettype,\n          price: price\n      })\n\n      return data.status;\n      \n    }),\n    addFullTimeCareTaker: thunk(async (actions, payload) => {\n      const {username, name, age, pettype, price, period1_s, period1_e, period2_s, period2_e} = {...payload};\n      const url = serverUrl + \"/api/v1/fulltimer\";\n      const {data} = await axios.post(url, {\n          username: username,\n          name: name,\n          age: age,\n          pettype: pettype,\n          price: price,\n          period1_s: period1_s,\n          period1_e: period1_e,\n          period2_s: period2_s,\n          period2_e: period2_e\n      });\n      \n      return data.status;\n    }),\n    getPetCareList: thunk(async(actions, payload) => {\n      const username = payload;\n      const url = serverUrl + \"/api/v1/categories/\" + username;\n      const {data} = await axios.get(url);\n      actions.setPetCareList(data.data.pets);\n    }), \n    setPetCareList: action((state, payload) => {\n      state.petCareList = [...payload];\n    }),\n    addPetCareItem: thunk(async(actions, payload) => {\n      const {username, pettype, price} = payload;\n      const url = serverUrl + \"/api/v1/categories/\" + username;\n      const {data} = await axios.post(url, {\n          pettype: pettype,\n          price: price\n      });\n      actions.addPetCareList(data.data.pets);\n    }), \n    addPetCareList: action((state, payload) => {\n      state.petCareList.push(payload);\n    }),\n\n    getPetTypeList: thunk(async(actions, payload) => {\n      const url = serverUrl + \"/api/v1/pettype\";\n      const {data} = await axios.get(url);\n      console.log(data);\n      actions.setPetTypeList(data.data.pettypes);\n    }),\n    setPetTypeList: action((state, payload) => {\n      state.petTypeList = [...payload];\n    }),\n\n    deletePetType: thunk(async(actions, payload) => {\n      const {username, pettype } = payload;\n      const url = serverUrl + \"/api/v1/categories/\" + username + \"/\" + pettype;\n      const {data} = await axios.delete(url);\n      actions.deleteUserPetType(payload.pettype);\n    }),\n    deleteUserPetType: action((state, payload) => {\n        var index = null;\n        state.petCareList.forEach(function(value, i) {\n          console.log(value.pettype)\n            if (value.pettype == payload) {\n\n                index = i;\n            }\n        })\n        state.petCareList.splice(index, 1);\n        \n    }),\n\n    getUserAvailability: thunk(async(actions, payload) => {\n      const { ctuname, s_time, e_time } = payload;\n      const url = serverUrl + \"/api/v1/availability/\" + ctuname + \"/\" + convertDate(s_time) + \"/\" + convertDate(e_time);\n      console.log(url);\n\n      const { data } = await axios.get(url);\n      // console.log(data)\n      actions.setUserAvailability(data.data.availabilities)\n    }),\n    setUserAvailability: action((state, payload) => {\n      state.availability = [...payload];\n    }),\n\n    addUserAvailability: thunk(async(actions, payload) => {\n      const { ctuname, s_time, e_time } = payload;\n      const url = serverUrl + \"/api/v1/availability/\" + ctuname;\n      console.log(url);\n\n      const { data } = await axios.post(url, {\n        s_time: s_time,\n        e_time: e_time\n      });\n      // console.log(data)\n      actions.addAvailability(data.data.availability)\n    }),\n    addAvailability: action((state, payload) => {\n      state.availability.push(payload);\n    }),\n    deleteUserAvailability: thunk(async(actions, payload) => {\n      const { ctuname, s_time, e_time } = payload;\n      const url = serverUrl + \"/api/v1/availability/\" + ctuname + \"/\" + convertDate(sqlToJsDate(s_time)) + \"/\" + convertDate(sqlToJsDate(e_time))\n      console.log(url);\n      console.log({\n        s_time: convertDate(sqlToJsDate(s_time)),\n        e_time: convertDate(sqlToJsDate(e_time))\n      });\n      const { data } = await axios.delete(url);\n      console.log(data)\n      actions.deleteAvailability(payload)\n    }),\n    deleteAvailability: action((state, payload) => {\n      let index = null;\n      state.availability.forEach(function(avail, i) {\n        if (payload.s_time == avail.s_time &&\n            payload.e_time == avail.e_time) {\n              index = i;\n            }\n      })\n      state.availability.splice(index, 1);\n    }),\n    getUserReviews: thunk(async(actions, payload) => {\n        const ctuname = payload;\n        const url = serverUrl + \"/api/v1/review/\" + ctuname;\n        const { data } = await axios.get(url);\n        actions.setUserReviews(data.data.reviews);\n    }),\n    setUserReviews: action((state, payload) => {\n      state.userReviews = [...payload];\n    }),\n    getRating: thunk(async(actions, payload) => {\n        const ctuname = payload;\n        const url = serverUrl + \"/api/v1/rating/\" + ctuname;\n        const { data } = await axios.get(url);\n        actions.setUserRating(data.data.rating);\n    }),\n    setUserRating: action((state, payload) => {\n      state.userRating = payload;\n    }),\n  }\n\nexport default careTakersModel;","import { action, thunk, debug } from 'easy-peasy';\nimport {serverUrl} from \"./serverUrl\"\nimport axios from 'axios';\n\nconst petOwnersModel = {\n    singlePetOwner: null,\n    getPetOwner: thunk(async (actions, payload) => {\n        const username = payload;\n        const url = serverUrl + \"/api/v1/petowner/\" + username;\n        const {data} = await axios.get(url);\n        actions.setPetOwner(data.data); \n        return data.status;\n      }), \n      setPetOwner: action((state, payload) => { // action\n        console.log(payload);\n        if (payload.user !== null ) {\n            state.singlePetOwner = payload.user;\n        }\n        console.log(debug(state));\n\n      }),\n\n    addPetOwner: thunk(async (actions, payload) => {\n        console.log(payload);\n        const {username, ownername, age, pettype, petname, petage, requirements} = {...payload};\n        const {data} = await axios.post(\"http://localhost:5000/api/v1/petowner\", {\n            username: username,\n            ownername: ownername,\n            age: age,\n            pettype: pettype,\n            petname: petname,\n            petage: petage,\n            requirements: requirements\n        })\n      }),\n}\n\nexport default petOwnersModel;\n","import { action, thunk } from 'easy-peasy';\nimport axios from 'axios';\nimport {serverUrl} from \"./serverUrl\"\n\nconst petsModel = {\n  allPets: [],\n  ownerSpecificPets: [],\n  petCategories: [],\n  biddablePets: [],\n\n  getAllPets: thunk(async (actions, payload) => {\n      const {data} = await axios.get(serverUrl + \"/api/v1/pet\"); // get all pets\n      actions.setAllPets(data.data.pets); \n    }),\n  setAllPets: action((state, payload) => { // action\n    state.allPets = [...payload];\n  }),\n\n  getOwnerPets: thunk(async (actions, payload) => {\n      const username = payload;\n      const url = serverUrl + \"/api/v1/pet/\" + username;\n      const {data} = await axios.get(url); \n      actions.setOwnerPets(data.data.pets); \n    }),\n  setOwnerPets: action((state, payload) => {\n    state.ownerSpecificPets = [...payload];\n  }),\n\n  getOwnerPetsOfType: thunk(async (actions, payload) => {\n    const { username, pettype } = payload;\n    const url = serverUrl + \"/api/v1/pet/\" + username + \"/\" + pettype;\n    console.log(url);\n    const {data} = await axios.get(url); \n    actions.setBiddablePets(data.data.pets); \n  }),\n  setBiddablePets: action((state, payload) => {\n    state.biddablePets = [...payload];\n  }),\n\n  addPet: thunk(async (actions, payload) => {\n      const {username, petname, pettype, petage, requirements} = {...payload};\n      const {data} = await axios.post(serverUrl + \"/api/v1/pet\", {\n        username: username,\n        petname: petname,\n        pettype: pettype,\n        petage: petage,\n        requirements: requirements\n      });\n      actions.addAPet(data.data.pet);\n    }),\n    addAPet: action((state, payload) => {\n      state.ownerSpecificPets.push(payload);\n    }),\n\n  editPet: thunk(async (actions, payload) => {\n    const{username, petname, pettype, petage, requirements} = {...payload};\n    const url = serverUrl + \"/api/v1/pet/\" + username + \"/\" + petname;\n    const {data} = await axios.put(url, {\n      pettype: pettype,\n      petage: petage,\n      requirements: requirements\n    });\n  }),\n  // EDIT ACTION TO UPDATE UI HERE REQUIRED\n\n  deletePet: thunk(async (actions,payload) => {\n    const { username, petname } = {...payload};\n    const url = serverUrl + \"/api/v1/pet/\" + username + \"/\" + petname;\n    console.log(url)\n    const {data} = await axios.delete(url);\n  }),\n\n  getPetCategories: thunk(async (actions,payload) => {\n    const url = serverUrl + \"/api/v1/categories\";\n    const {data} = await axios.get(url);\n    actions.getAllCategories(data.data.pets);\n  }), \n  getAllCategories: action((state, payload) => {\n    state.petCategories = [...payload];\n  }),\n}\n\nexport default petsModel;","import { action } from 'easy-peasy';\n\nconst routesModel = {\n  routes: [ // updated after login\n    {\n        path: '/',\n        sidebarName: 'Login',\n    },\n    {\n        path: '/signup',\n        sidebarName: 'Signup',\n    }\n  ],\n  setRoutes: action((state, payload) => {\n    state.routes = payload;\n  })\n}\n\nexport default routesModel;","import { createStore, persist } from 'easy-peasy';\nimport careTakersModel from './models/careTakersModel';\nimport petOwnersModel from './models/petOwnersModel'\nimport petsModel from './models/petsModel';\nimport routesModel from './models/routesModel';\nimport userModel from './models/userModel';\nimport bidModel from \"./models/bidModel\"\n\n\nconst storeModel = {\n  careTakers: careTakersModel,\n  petOwners: petOwnersModel,\n  pets: petsModel,\n  user: userModel, \n  routes: routesModel,\n  bids: bidModel\n};\n\nconst store = createStore(persist(storeModel, {mergeStrategy: 'mergeShallow'}));\n// const store = createStore(storeModel);\n\nexport default store;","import { action, thunk, debug } from 'easy-peasy';\nimport {serverUrl} from \"./serverUrl\"\nimport axios from 'axios';\n\nconst userModel = {\n    singleUser: [],\n    getUser: thunk(async (actions, payload) => {\n        const username = payload;\n        const url = serverUrl + \"/api/v1/users/\" + username;\n        const data = await axios.get(url).then(response => {\n          // console.log(response);\n          if (response.data.status === \"success\") {\n            return response.data.data.user;\n          } else {\n            alert(`Username does not exist in the database!`);\n          }\n        }).catch((error) => {\n          alert(\"Please choose a different username!\");\n        });\n\n        console.log(data);\n        actions.setUser(data); \n      }), \n      setUser: action((state, payload) => { // action\n        // console.log(payload);\n        if (payload !== null ) {\n            state.singleUser = payload;\n        }\n        // console.log(debug(state));\n      }),\n    editUser: thunk(async (actions, payload) => {\n      const {username, firstname, age, usertype} = {...payload};\n      console.log({...payload});\n      let url = \"\";\n      if (usertype === 'petowner') {\n        url = serverUrl + '/api/v1/petowner/' + username;\n        const {data} = await axios.put(url, {\n          username: username,\n          ownername: firstname,\n          age: age\n        });\n\n        actions.getUser(username);\n        actions.getDisplayedUser(username);\n      } else if (usertype === \"caretaker\") {\n        url = serverUrl + '/api/v1/caretaker/' + username;\n        const {data} = await axios.put(url, {\n          username: username,\n          carername: firstname,\n          age: age\n        });\n        actions.getUser(username);\n        actions.getDisplayedUser(username);\n      } else {\n        const url_po = serverUrl + '/api/v1/petowner/' + username;\n        const url_ct = serverUrl + '/api/v1/caretaker/' + username;\n        await axios.put(url_po, {\n          username: username,\n          ownername: firstname,\n          age: age\n        });\n        await axios.put(url_ct, {\n          username: username,\n          carername: firstname,\n          age: age\n        });\n\n        actions.getUser(username);\n        actions.getDisplayedUser(username);\n      }\n    }),\n\n    displayedUser: [],\n    getDisplayedUser: thunk(async (actions, payload) => {\n      const username = payload;\n      const url = serverUrl + \"/api/v1/users/\" + username;\n      const {data} = await axios.get(url);\n      actions.setDisplayedUser(data.data); \n    }), \n      setDisplayedUser: action((state, payload) => { // action\n        if (payload.user !== null ) {\n            state.displayedUser = payload.user;\n        }\n        // console.log(debug(state));\n      }),\n\n    allUsers: [],\n    getAllUsers: thunk(async (actions, payload) => {\n      const url = serverUrl + \"/api/v1/users\"\n      const {data} = await axios.get(url);\n      actions.setAllUsers(data.data);\n    }),\n    setAllUsers: action((state, payload) => {\n      if(payload.users !== null) {\n        state.allUsers = payload.users;\n      }\n    })\n\n}\n\nexport default userModel;\n","import { action, thunk, debug } from 'easy-peasy';\nimport {serverUrl} from \"./serverUrl\"\nimport axios from 'axios';\nimport { convertDate, sqlToJsDate } from '../../utils';\n\n\nconst bidModel = {\n    userBids: [],\n    petOwnerBids: [],\n\n    addBid: thunk(async (actions, payload) => {\n      const {pouname, petname, pettype, ctuname, s_time, e_time, pay_type, pet_pickup} = {...payload};\n      const url = serverUrl + \"/api/v1/bid\";\n      const {data} = await axios.post(url, {\n        pouname: pouname,\n        petname: petname,\n        pettype: pettype,\n        ctuname: ctuname,\n        s_time: s_time,\n        e_time: e_time,\n        pay_type: pay_type,\n        pet_pickup: pet_pickup\n      });\n    }),\n\n    addReviewToBid: thunk(async(actions, payload) => {\n      const { bid, rating, review } = {... payload};\n      const url = serverUrl + \"/api/v1/bid\";\n      const { data } = await axios.put(url, {\n        pouname: bid.pouname,\n        petname: bid.petname,\n        pettype: bid.pettype,\n        ctuname: bid.ctuname,\n        s_time: convertDate(sqlToJsDate(bid.s_time)),\n        e_time: convertDate(sqlToJsDate(bid.e_time)),\n        pay_type: bid.pay_type,\n        pet_pickup: bid.pet_pickup,\n        rating: rating,\n        review: review,\n        pay_status: bid.pay_status\n      });\n      actions.modifyBidReview(payload);\n    }),\n    modifyBidReview: action((state, payload) => {\n      state.petOwnerBids.map((bid) => {\n        if (bid.pouname == payload.bid.pouname &&\n            bid.petname == payload.bid.petname &&\n            bid.pettype == payload.bid.pettype &&\n            bid.ctuname == payload.bid.ctuname &&\n            bid.s_time == payload.bid.s_time &&\n            bid.e_time == payload.bid.e_time) {\n              bid.rating = payload.rating;\n              bid.review = payload.review;\n            }\n      })\n    }), \n\n    // Get bids for a caretaker\n    getUserBids: thunk(async(actions, payload) => {\n        const ctuname = payload;\n        const url = serverUrl + \"/api/v1/bid/\" + ctuname + \"/ct\";\n        console.log(url)\n        const {data} = await axios.get(url);\n        actions.setUserBids(data.data.bids);\n    }),\n    setUserBids: action((state, payload) => { // action\n        state.userBids = [...payload];\n    }),\n\n    getPetOwnerBids: thunk(async(actions, payload) => {\n      const pouname = payload;\n      const url = serverUrl + \"/api/v1/bid/\" + pouname + \"/po\";\n      console.log(url)\n      const {data} = await axios.get(url);\n      actions.setPetOwnerBids(data.data.bids);\n  }),\n  setPetOwnerBids: action((state, payload) => { // action\n      state.petOwnerBids = [...payload];\n  }),\n\n    \n    acceptBid: thunk(async(actions, payload) => {\n      const {pouname, petname, pettype, ctuname, s_time, e_time, pay_type, pet_pickup} = {...payload};\n      const url = serverUrl + \"/api/v1/bid/\" + ctuname + \"/\" + pouname + \"/mark\";\n      console.log(url);\n      console.log({\n        petname: petname,\n        pettype: pettype,\n        s_time: convertDate(sqlToJsDate(s_time)),\n        e_time: convertDate(sqlToJsDate(e_time))\n    });\n      const { data } = await axios.put(url, {\n          petname: petname,\n          pettype: pettype,\n          s_time: convertDate(sqlToJsDate(s_time)),\n          e_time: convertDate(sqlToJsDate(e_time))\n      });\n      actions.modifyBidStatus(payload);\n    }),\n    modifyBidStatus: action((state, payload) => {\n      console.log(payload);\n      state.userBids.map((bid) => {\n        if (bid.pouname == payload.pouname &&\n            bid.petname == payload.petname &&\n            bid.pettype == payload.pettype &&\n            bid.ctuname == payload.ctuname &&\n            bid.s_time == payload.s_time &&\n            bid.e_time == payload.e_time) {\n              bid.is_win = true;\n            }\n      })\n    }), \n    makePayment: thunk(async(actions, payload) => {\n      const {pouname, petname, pettype, ctuname, s_time, e_time, pay_type, pet_pickup} = {...payload};\n      const url = serverUrl + \"/api/v1/bid/\" + ctuname + \"/\" + pouname + \"/pay\";\n      console.log(url);\n      console.log({\n        petname: petname,\n        pettype: pettype,\n        s_time: convertDate(sqlToJsDate(s_time)),\n        e_time: convertDate(sqlToJsDate(e_time))\n    });\n      const { data } = await axios.put(url, {\n          petname: petname,\n          pettype: pettype,\n          s_time: convertDate(sqlToJsDate(s_time)),\n          e_time: convertDate(sqlToJsDate(e_time))\n      });\n      actions.modifyPayStatus(payload);\n    }),\n    modifyPayStatus: action((state, payload) => {\n      console.log(payload);\n      state.petOwnerBids.map((bid) => {\n        if (bid.pouname == payload.pouname &&\n            bid.petname == payload.petname &&\n            bid.pettype == payload.pettype &&\n            bid.ctuname == payload.ctuname &&\n            bid.s_time == payload.s_time &&\n            bid.e_time == payload.e_time) {\n              bid.pay_status = true;\n            }\n      })\n    }), \n    \n}\n\nexport default bidModel;\n","const Routes = [ // updated after login\n    {\n        path: '/',\n        sidebarName: 'Login',\n    },\n    {\n        path: '/signup',\n        sidebarName: 'Signup',\n    },\n    {\n        path: '/homepage',\n        sidebarName: 'Homepage',\n    },\n    {\n        path: '/users/:username',\n        sidebarName: 'Petowner Profile',\n    },\n    {\n        path: '/users/:username/caretaker',\n        sidebarName: 'Caretaker Profile',\n    },\n    {\n        path: '/users/:username/caretaker-admin',\n        sidebarName: 'Caretaker Settings',\n    },\n    {\n        path: '/admin',\n        sidebarName: 'PCS Administrator Settings',\n    },\n    {\n        path: '/users/caretakers',\n        sidebarName: 'Look for Caretakers',\n    }\n]\n\nexport default Routes;","import React, { useState, useEffect } from 'react'\nimport { AppBar, Toolbar, Container, TextField, Card, Typography, Button } from '@material-ui/core'\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { classnames } from '@material-ui/data-grid';\nimport { useHistory } from 'react-router-dom';\nimport store from \"../store/store\"\nimport Routes from './allRoutes';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    container: {\n        marginTop: theme.spacing(15),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    textfield: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n  }));\n\nconst Login = () => {\n    const classes = useStyles();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const getUser = useStoreActions(actions => actions.user.getUser);\n    const getDisplayedUser = useStoreActions(actions => actions.user.getDisplayedUser);\n    const setRoutes = useStoreActions(actions => actions.routes.setRoutes);\n    \n    const checkAccountExists = () => {\n        const curr_user = store.getState().user.singleUser;\n        if (curr_user == null || curr_user.length == 0) {\n            setErrorMessage(\"Username does not exist\");\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    const history = useHistory();\n\n\n    const handleClick = async (event) => {\n        await getUser(username);\n        await getDisplayedUser(username);\n        const validateAccount = checkAccountExists();\n        if (validateAccount) {\n          Routes[3].path = '/users/' + username;\n          Routes[4].path = '/users/' + username + '/caretaker';\n          Routes[5].path = '/users/' + username + '/caretaker-admin';\n          setRoutes(Routes);\n          history.push('homepage');\n        }\n    }\n\n    return (\n        <div>\n            <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\n            <Typography component=\"h1\" variant=\"h3\" color=\"textPrimary\" align=\"center\">\n                Login\n            </Typography>\n            <form className={classes.form} noValidate>\n                <TextField \n                    variant=\"outlined\"\n                    label=\"Username\"\n                    required\n                    fullWidth\n                    id=\"username\"\n                    autoComplete=\"username\"\n                    autoFocus\n                    className={classes.textfield}\n                    onChange={(event) => setUsername(event.target.value)}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    label=\"Password\"\n                    required\n                    fullWidth\n                    id=\"password\"\n                    autoComplete=\"password\"\n                    autoFocus\n                    className={classes.textfield}\n                    onChange={(event)=>setPassword(event.target.value)}\n                />\n                <Button\n                    onClick={(event) => handleClick(event)}\n                    // type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                >\n                    Login\n                </Button>\n                <Typography variant=\"h5\">\n                    {errorMessage}\n                </Typography>\n            </form>\n        </Container>\n        </div>\n    )\n}\n\nexport default Login","import React, { useState, useEffect } from 'react'\nimport { FormControlLabel, Checkbox, FormHelperText, FormControl, FormLabel, FormGroup, Container, Radio, RadioGroup, TextField, Card, Typography, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport AddPet from \"../components/AddPet\";\nimport PetTypeInput from \"../components/PetTypeInput\"\nimport Availability from '../components/Availability';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    container: {\n        marginTop: theme.spacing(15),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    textfield: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    formControl: {\n        margin: theme.spacing(3),\n    },\n}));\n\n\nconst Signup = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [petType, setPetType] = useState('');\n    const [petPrice, setPetPrice] = useState(0);\n    const [age, setAge] = useState(0);\n    const [isPetOwner, setPetOwner] = useState(false);\n    const [isPetCaretaker, setPetCaretaker] = useState(false);\n    const [caretakerType, setCaretakerType] = useState(\"parttime\");\n    const [petInformation, setPetInformation] = useState({});\n    const [p1startDate, setP1StartDate] = useState(0);\n    const [p1endDate, setP1EndDate] = useState(0);\n    const [p2startDate, setP2StartDate] = useState(0);\n    const [p2endDate, setP2EndDate] = useState(0);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('An error occurred.');\n\n\n    const onPetOwnerSwitchChange = () => {\n        setPetOwner(isPetOwner => !isPetOwner);\n    }\n\n    const onPetCaretakerSwitchChange = () => {\n        setPetCaretaker(isPetCaretaker => !isPetCaretaker);\n    }\n\n    const onChangeCaretakerType = (event) => {\n        setCaretakerType(event.target.value);\n    }\n\n    const onSelectType = (event) => {   \n        setPetType(event.target.value);\n    }\n    \n    const onInputPrice = (event) => {\n        setPetPrice(event.target.value);\n    }\n\n    const addPartTimeCareTaker = useStoreActions(actions => actions.careTakers.addPartTimeCareTaker);\n    const addFullTimeCareTaker = useStoreActions(actions => actions.careTakers.addFullTimeCareTaker);\n    const addPetOwner = useStoreActions(actions => actions.petOwners.addPetOwner);\n    const getAllUsers = useStoreActions(actions => actions.user.getAllUsers);\n    const allUsers = useStoreState(state => state.user.allUsers);\n    \n    useEffect(() => {\n        getAllUsers();\n        return () => {};\n    }, []);\n    \n    const userInDatabase = () => {\n        var result = false;\n        allUsers.map((user) => {\n            if (user.username == username) {\n                result = true;\n            }\n        })\n        return result;\n    }\n\n    const fieldsAreValid = () => {\n        if (userInDatabase()) {\n            setErrorMessage('Username is taken')\n            setError(true);\n            return false;\n        } \n        if (!(isPetOwner || isPetCaretaker)) {\n            setErrorMessage('Please select either pet owner or caretaker');\n            setError(true);\n            return false;\n        }\n        if (firstName == '' || age == 0) {\n            setErrorMessage('Please fill up the empty fields');\n            setError(true);\n            return false;\n        }\n        if (isPetCaretaker) {\n            if (petType == '') {\n                setErrorMessage('Please select a valid pet type to care for')\n                setError(true);\n                return false;\n            }\n            if (petPrice == 0) {\n                setErrorMessage('Price per day cannot be 0 or empty')\n                setError(true);\n                return false;\n            }\n        }\n        if (isPetOwner) {\n            if (Object.keys(petInformation).length === 0) {\n                setErrorMessage(\"Please click on the Save Pet Information button\");\n                setError(true);\n                return false;\n            }\n            if (petInformation.petName == '' || petInformation.petType == '') {\n                setErrorMessage(\"Please fill up the empty pet information\")\n                setError(true);\n                return false;\n            }\n        }\n        return true;\n    }\n    const submit = async () => {\n        if (!fieldsAreValid()) {\n            return;\n        }\n        addUser();\n        handlePageChange()\n    }\n    const addUser = () => {\n        if (isPetOwner) {\n            addPetOwner({\n                username: username,\n                ownername: firstName,\n                age: age,\n                pettype: petInformation.petType,\n                petname: petInformation.petName,\n                petage: petInformation.petAge,\n                requirements: petInformation.petRequirements\n            });\n        }\n        if (isPetCaretaker) {\n            if (caretakerType=='parttime') {\n                addPartTimeCareTaker({\n                    username: username,\n                    name: firstName,\n                    age: parseInt(age),\n                    pettype: petType,\n                    price: parseInt(petPrice)\n                })\n            }\n            else if (caretakerType == 'fulltime') { \n                addFullTimeCareTaker({\n                    username: username,\n                    name: firstName,\n                    age: parseInt(age),\n                    pettype: petType,\n                    price: parseInt(petPrice), \n                    period1_s: p1startDate,\n                    period1_e: p1endDate,\n                    period2_s: p2startDate,\n                    period2_e: p2endDate\n                })\n            }\n        }\n    }\n\n    const handlePageChange = () => {\n        history.push('/');\n    }\n\n    const callbackAddPet = (childData) => {\n        setPetInformation(childData);\n    }\n    \n    return (\n        <div>\n            <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\n                <Typography component=\"h1\" variant=\"h3\" color=\"textPrimary\" align=\"center\">\n                    Signup\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        label=\"Username\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        autoComplete=\"username\"\n                        autoFocus\n                        className={classes.textfield}\n                        onChange={(event) => setUsername(event.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        label=\"Password\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        autoComplete=\"password\"\n                        autoFocus\n                        className={classes.textfield}\n                        onChange={(event) => setPassword(event.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        label=\"First Name\"\n                        required\n                        fullWidth\n                        id=\"firstName\"\n                        autoComplete=\"firstName\"\n                        autoFocus\n                        className={classes.textfield}\n                        onChange={(event) => setFirstName(event.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        label=\"Age\"\n                        required\n                        fullWidth\n                        id=\"age\"\n                        autoComplete=\"age\"\n                        autoFocus\n                        type=\"number\"\n                        className={classes.textfield}\n                        onChange={(event) => setAge(event.target.value)}\n                    />\n                    \n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormLabel component=\"legend\">Account Roles</FormLabel>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={<Checkbox checked={isPetOwner} onChange={onPetOwnerSwitchChange} \n                                name=\"petOwner\" />}\n                                label=\"Pet Owner\"\n                                id=\"isPetOwner\"\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={isPetCaretaker} onChange={onPetCaretakerSwitchChange} name=\"petCaretaker\" />}\n                                label=\"Pet Caretaker\"\n                                id=\"isPetCaretaker\"\n                            />\n                        </FormGroup>\n                        <FormHelperText>Choose at least one role!</FormHelperText>\n                    </FormControl>\n                    { isPetCaretaker && caretakerType === 'fulltime' ? \n                    <>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormLabel component=\"legend\">Type of caretaker</FormLabel>\n                        <RadioGroup value={caretakerType} onChange={onChangeCaretakerType}>\n                            <FormControlLabel value=\"parttime\" control={<Radio />} label=\"Part-time\" />\n                            <FormControlLabel value=\"fulltime\" control={<Radio />} label=\"Full-time\" />\n                        </RadioGroup>\n                        <FormHelperText>Choose at least one role!</FormHelperText>\n                    </FormControl>\n                    <PetTypeInput parentType = {onSelectType} parentPrice={onInputPrice} label = \"Choose a pet type you can care for\"/> \n                    <Availability setP1StartDate={setP1StartDate} setP1EndDate={setP1EndDate} setP2StartDate={setP2StartDate} setP2EndDate={setP2EndDate}/> </>\n                    : isPetCaretaker ?\n                    <> <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormLabel component=\"legend\">Type of caretaker</FormLabel>\n                        <RadioGroup value={caretakerType} onChange={onChangeCaretakerType}>\n                            <FormControlLabel value=\"parttime\" control={<Radio />} label=\"Part-time\" />\n                            <FormControlLabel value=\"fulltime\" control={<Radio />} label=\"Full-time\" />\n                        </RadioGroup>\n                        <FormHelperText>Choose at least one role!</FormHelperText>\n                    </FormControl>\n                    <PetTypeInput parentType = {onSelectType} parentPrice={onInputPrice} label = \"Choose a pet type you can care for\"/> </> : null}\n                    {  isPetOwner ? <AddPet parentCallback = {callbackAddPet} /> : null }\n                    <Button\n                        // type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick = {() => submit()}\n                    >\n                        Signup\n                    </Button>\n                    {error ? <Typography> {errorMessage} </Typography> : null}\n                </form>\n            </Container>\n        </div>\n    )\n}\n\nexport default Signup;","import React, { useEffect, useState } from 'react';\nimport { TextField, InputAdornment, Typography, Container, Card, CardActionArea, CardMedia, CardContent, CardActions, Button, Paper, InputBase, Divider, IconButton } from '@material-ui/core';\nimport Search from '@material-ui/icons/Search';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport { Link } from 'react-router-dom';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nimport { v4 } from 'uuid';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    media: {\n        height: 140,\n    },\n    container: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    rating: {\n        display: 'flex',\n        flexDirection: 'column',\n        '& > * + *': {\n            marginTop: theme.spacing(1),\n        },\n    },\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 400,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n    searchbar: {\n        margin: theme.spacing(1),\n    },\n}));\n\n// const caretakersList = [\n//     {\n//         name: 'Caretaker 1',\n//         id: '1',\n//         available: true,\n//         takesCareOf: [\n//             'Dogs',\n//             'Cats',\n//             'Birds'\n//         ],\n//         rating: 4.5\n//     },\n//     {\n//         name: 'Caretaker 2',\n//         id: '2',\n//         available: true,\n//         takesCareOf: [\n//             'Dogs',\n//             'Cats',\n//             'Birds'\n//         ],\n//         rating: 3.6\n//     },\n// ]\n\nconst FindCaretakers = () => {\n    const classes = useStyles();\n    const [search, setSearch] = useState(\"\");\n    const [filteredCaretakers, setFilteredCaretakers] = useState([]);\n\n    const getCareTakers = useStoreActions(actions => actions.careTakers.getCareTakers);\n    const getPetTypeList = useStoreActions(actions => actions.careTakers.getPetTypeList);\n    useEffect(() => {\n        getCareTakers();\n        getPetTypeList();\n        return () => {};\n    }, [])\n\n    const careTakers = useStoreState(state => state.careTakers.caretakers);\n    const petTypes = useStoreState(state => state.careTakers.petTypeList);\n\n    careTakers.map(caretaker => caretaker.pettypes = [...petTypes].filter(pettype => pettype.ctuname === caretaker.username));\n    careTakers.map(caretaker => caretaker.pettypes = caretaker.pettypes.map(pettype => pettype.pettype).join(\", \"))\n\n    // console.log([...petTypes].filter(pettype => pettype.ctuname === \"yellowchicken\"));\n    console.log(careTakers);\n\n    useEffect(() => {\n        setFilteredCaretakers(\n            careTakers.filter(caretaker => {\n                return caretaker.pettypes.toLowerCase().includes(search.toLowerCase());\n            })\n        )\n    }, [search, careTakers])\n\n    return (\n        <div>\n            <Container component=\"main\" maxWidth=\"md\" className={classes.container}>\n                <Typography component=\"h1\" variant=\"h3\" color=\"textPrimary\" align=\"left\">\n                    Caretakers\n                </Typography>\n                <TextField\n                    onChange={(event) => setSearch(event.target.value)}\n                    className={classes.margin}\n                    label=\"Search pet type\"\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Search />\n                            </InputAdornment>\n                        ),\n                    }}\n                    variant=\"outlined\"\n                    fullWidth\n                />\n                {filteredCaretakers.map((caretaker) => (\n                    <Card key={v4()} className={classes.card} variant=\"outlined\" width={1}>\n                        <CardActionArea component={Link} to={`/users/${caretaker.username}/caretaker`} style={{ textDecoration: 'none' }}>\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    {caretaker.carername}\n                                </Typography>\n                                <Typography variant=\"body2\" component=\"p\">\n                                    Caretaken description such as age: {caretaker.age} and salary: {caretaker.salary} about the pets that they take care of, how much they charge and all.\n                                </Typography>\n                                <div className={classes.rating}>\n                                    <Rating value={caretaker.rating} precision={0.5} readOnly />\n                                </div>\n                                {caretaker.available ? (\n                                    <Button variant=\"outlined\" color=\"primary\">\n                                        Available\n                                    </Button>\n                                ) : (\n                                        <Button variant=\"outlined\" disabled>\n                                            Unavailable\n                                        </Button>\n                                    )}\n                                <Typography variant=\"body2\" component=\"p\">\n                                    Takes care of: {caretaker.pettypes}\n                                    {/* Takes care of: {caretaker.pettypes.map(pettype => pettype.pettype).join(\", \")} */}\n                                </Typography>\n                                <Button size=\"small\" color=\"primary\">\n                                    Learn More\n                                </Button>\n                            </CardContent>\n                        </CardActionArea>\n                    </Card>\n                ))}\n            </Container>\n        </div>\n    )\n}\n\nexport default FindCaretakers;","import React, { useState } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    IconButton,\n    Drawer,\n    MenuList,\n    MenuItem,\n    ListItemText,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useStoreState } from 'easy-peasy';\n\nconst useStyles = makeStyles((theme) => \n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n        drawer: {\n            width: 300,\n        },\n        fullList: {\n            width: 'auto',\n        }\n    })\n); \n\nconst NavBar = (props) => {\n    // console.log(props);\n    const Routes = useStoreState(state => state.routes.routes);\n    const classes = useStyles();\n    const [isOpen, setIsOpen] = useState(false);\n    const toggleDrawer = (open) => (\n        event\n    ) => {\n        if (\n            event.type === 'keydown' &&\n                (event.key === 'Tab' ||\n                event.key === 'Shift')\n        ) {\n            return;\n        }\n        setIsOpen(open);\n    };\n\n    const activeRoute = (routeName) => {\n        return props.location.pathname === routeName ? true: false;\n    }\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <AppBar>\n                    <Toolbar>\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            PCS Application\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </div>\n            <Drawer classes={{paper:classes.drawer}} open={isOpen} onClose={toggleDrawer(false)}>\n                <div\n                    className={classes.fullList}\n                    role=\"presentation\"\n                    onClick={toggleDrawer(false)}\n                    onKeyDown={toggleDrawer(false)}\n                >\n                    <MenuList>\n                        {Routes.map((prop, key) => {\n                            return (\n                                <NavLink to={prop.path} style={{textDecoration: 'none'}} key={key}>\n                                    <MenuItem selected={activeRoute(prop.path)}>\n                                        <ListItemText primary={prop.sidebarName} />\n                                    </MenuItem>\n                                </NavLink>\n                            );\n                        })}\n                    </MenuList>\n                </div>\n            </Drawer>\n        </div>\n    )\n} \n\nexport default withRouter(NavBar);","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Adminpage from \"./routes/Adminpage\";\nimport CaretakerAdmin from \"./routes/CaretakerAdmin\"\nimport Homepage from \"./routes/Homepage\"\nimport Updatepage from \"./routes/Updatepage\"\nimport SetPricepage from \"./routes/SetPricepage\";\nimport ViewAllCaretakers from \"./components/admin/ViewAllCaretakers\";\nimport ViewCaretakerspage from \"./routes/ViewCaretakerspage\";\nimport UserProfile from \"./routes/UserProfile\";\nimport CaretakerProfile from \"./routes/CaretakerProfile\"\nimport Login from \"./routes/Login\";\nimport Signup from \"./routes/Signup\";\nimport FindCaretakers from \"./routes/FindCaretakers\";\nimport NavBar from './components/NavBar';\n\nconst App = () => {\n    return (\n        <div className=\"container\">\n            <Router>\n                <NavBar />\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route exact path=\"/admin\" component={Adminpage}/>\n                    <Route exact path=\"/admin/set-price\" component={SetPricepage}/>\n                    <Route exact path=\"/admin/view-caretakers\" component={ViewCaretakerspage}/>\n                    <Route exact path=\"/users/caretakers\" component={FindCaretakers} />\n                    <Route exact path=\"/users/:username/update\" component={Updatepage} />\n                    <Route exact path=\"/users/:username\" component={UserProfile} />\n                    <Route exact path =\"/users/:username/caretaker-admin\" component={CaretakerAdmin}/>\n                    <Route exact path =\"/users/:username/caretaker\" component={CaretakerProfile}/>\n                    <Route exact path=\"/homepage\" component={Homepage} />\n                    <Route exact path=\"/signup\" component={Signup} />\n                </Switch>\n            </Router>\n        </div>\n    )\n};\n\nexport {\n    App\n};","import React, { useEffect } from 'react'\n// import { Provider } from 'react-redux';\nimport { StoreProvider, useStoreRehydrated } from 'easy-peasy';\nimport ReactDOM from 'react-dom'\nimport {App} from \"./App\"\nimport store from './store/store'\n\nfunction WaitForStateRehydration({ children }) {\n  const isRehydrated = useStoreRehydrated();\n  console.log(isRehydrated);\n  console.log(children);\n  return isRehydrated ? children : null;\n}\n\nReactDOM.render(\n<StoreProvider store={store}>\n  <WaitForStateRehydration>\n    <App />\n  </WaitForStateRehydration>\n</StoreProvider>, document.getElementById(\"root\"))\n\n"],"sourceRoot":""}